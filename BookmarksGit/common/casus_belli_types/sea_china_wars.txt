@claim_mandate_cb_prestige_cost = 1000

###############################



claim_mandate_cb = {
	group = conquest
	ai_only_against_neighbors = yes

	
	allowed_for_character = {
		OR  = {
			is_independent_ruler = yes
			# is vassal of china and imperial authority is 0
			top_liege = {
				has_realm_law = imperial_bureaucracy_0
				any_held_title = {
					this = title:e_celestia_china
				}
			}
		}
		capital_county.title_province ?= {
			geographical_region = world_china
		}
	}

	# Root is the title
	# scope:attacker is the attacker
	# scope:defender is the defender
	allowed_against_character_display_regardless = {
	}

	allowed_against_character = {
		scope:defender = {
			is_independent_ruler = yes
			any_held_title = {
				this = title:e_celestia_china
			}
		}
	}

	cost = {
		prestige = @claim_mandate_cb_prestige_cost
	}

	ai_score_mult = {
		# Should always do this when possible
		value = 100
	}
			  
	should_invalidate = {
		scope:defender = {
			NOT = {
				any_held_title = {
					this = title:e_celestia_china
				}
			}
		}
	}

	on_declaration = {
		on_declared_war = yes
		scope:attacker = {
			# add_character_flag = used_lifetime_subjugation
		}
	}

	on_invalidated_desc = msg_subjugation_war_invalidated_message

	on_invalidated = {
		scope:attacker = {
			if = {
				limit = {
					is_alive = yes
				}
				# Refund their investment.
				add_prestige_no_experience = @claim_mandate_cb_prestige_cost
			}
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = claim_mandate_cb_victory_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = claim_mandate_cb_victory_desc_defender
			}
			desc = claim_mandate_cb_victory_desc
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		hidden_effect = {
			scope:attacker.primary_title = {
				save_scope_as = old_primary_title
			}

			create_title_and_vassal_change = {
				type = conquest_claim
				save_scope_as = change
				add_claim_on_loss = no
			}

			scope:defender = {
				every_held_title = {
					if = {
						limit = {
							OR = {
								this = title:e_celestia_china
								tier = tier_county
							}
						}
						change_title_holder = {
							holder = scope:attacker
							change = scope:change
						}
					}
				}
				every_vassal = {
		 			change_liege = {
		 				liege = scope:attacker
		 				change = scope:change
		 			}
				}
			}

			resolve_title_and_vassal_change = scope:change
		}

		hidden_effect = {
			scope:attacker = {
				if = {
					limit = {
						scope:old_primary_title = { tier > tier_county }
					}
					destroy_title = scope:old_primary_title
				}
			}
		}

		hidden_effect = {
			scope:attacker = {
				if = {
					limit = {
						has_dlc_feature = roads_to_power
					}
					if = {
						limit = { NOT = { has_government = administrative_government } }
						change_to_administrative_effect = yes
						add_realm_law_skip_effects = single_heir_succession_law
					}
				}

				if = {
					limit = { has_realm_law = imperial_bureaucracy_0 }
					remove_realm_law = imperial_bureaucracy_0
				}
				else_if = {
					limit = { has_realm_law = imperial_bureaucracy_2 }
					remove_realm_law = imperial_bureaucracy_2
				}
				else_if = {
					limit = { has_realm_law = imperial_bureaucracy_3 }
					remove_realm_law = imperial_bureaucracy_3
				}

				add_realm_law_skip_effects = imperial_bureaucracy_1
			}
		}

		# Prestige level progress for the attacker
		scope:attacker = {
			add_prestige_experience = {
				value = major_prestige_value
			}
		}

		# Prestige loss for the defender
		scope:defender = {
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = claim_mandate_cb_white_peace_desc_defender
			}
			desc = claim_mandate_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # Not important as the scales are identical
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}

		add_truce_white_peace_effect = yes
		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = claim_mandate_cb_white_peace_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = claim_mandate_cb_defeat_desc_attacker
			}
			desc = claim_mandate_cb_white_peace_desc
		}
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		scope:attacker = {
			save_temporary_scope_as = loser
		}

		# Truce
		add_truce_attacker_defeat_effect = yes

		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_primary_attacker_death = invalidate
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "claim_mandate_war_name"
	war_name_base = "claim_mandate_war_name_base"
	cb_name = "claim_mandate_cb"
	interface_priority = 1000

	ticking_war_score_targets_entire_realm = yes
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
	attacker_ticking_warscore = 0
	attacker_wargoal_percentage = 0.8

	max_ai_diplo_distance_to_title = 500
}

# Kingdom Invasion
chinese_invasion_cb = {
	group = invasion
	
	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		is_independent_ruler = yes
		highest_held_title_tier >= tier_kingdom
		capital_county.empire = title:e_celestia_china
	}

	# Root is the title
	# scope:attacker is the attacker
	# scope:defender is the defender
	allowed_against_character_display_regardless = {
	}

	allowed_for_character_display_regardless = {
		# Struggle constraint
		custom_tooltip = {
			text = struggle_involvement_cb_check_failure
			struggle_blocks_invasion_conquest_cb_trigger = yes
		}
	}

	allowed_against_character = {
		scope:defender = {
			is_independent_ruler = yes
			any_held_title = {
				empire = title:e_celestia_china
			}
		}
	}

	target_titles = neighbor_land
	target_title_tier = kingdom
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	ai_score_mult = {
		# Should always do this when possible
		value = 100
																					 
															
	}

	valid_to_start = {
		scope:target = {
			empire = title:e_celestia_china
		}
	}

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						OR = {
							this = scope:defender
							target_is_liege_or_above = scope:defender
						}
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_invasion_war_invalidated_message

	on_invalidated = {
	}

	cost = {
		prestige = {
			add = {
				value = 500
				desc = CB_BASE_COST
			}

			multiply = common_cb_prestige_cost_multiplier
		}
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = chinese_invasion_cb_victory_desc_attacker
			}
			desc = chinese_invasion_cb_victory_desc
		}
		triggered_desc = {
			trigger = { scope:attacker = { is_local_player = yes } }
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			change = scope:change
			take_occupied = yes
		}

		#If target is lower tier, vassalise them.
		if = {
			limit = {
				scope:defender.primary_title.tier < scope:attacker.primary_title.tier
			}
			scope:defender = {
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
			}
		}

		#If target has any personally-held titles of equal tier, excepting empires take them.
		#If target is equal tier,
		if = {
			limit = {
				#Conquering, or indirectly butchering, an entire empire in one war is a bit much.
				NOT = { scope:defender.primary_title.tier = tier_empire }
				scope:defender.primary_title.tier = scope:attacker.primary_title.tier
			}
			every_in_list = {
				list = target_titles
				change_title_holder = {
					holder = scope:attacker
					change = scope:change
				}
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		# Prestige level progress for the attacker
		scope:attacker = {
			add_prestige_experience = {
				value = major_prestige_value
			}
		}

		# Prestige loss for the defender
		scope:defender = {
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # Not important as the scales are identical
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_white_peace_effect = yes

		scope:attacker = {
			add_prestige = mongol_invasion_cb_prestige_white_peace
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}

		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}
		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 5
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}

		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = scale_10_war_defender_win
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "INVASION_WAR_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "INVASION_CB_NAME"

	interface_priority = 100

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	max_ai_diplo_distance_to_title = 500
}

china_de_jure_cb = {
	group = de_jure
	should_check_for_interface_availability = no # Covered by the county dejure cb

	allowed_for_character = {
		is_independent_ruler = yes
		highest_held_title_tier = tier_kingdom
		capital_county.empire = title:e_celestia_china
	}

	allowed_against_character = {
		scope:attacker = {
			has_de_jure_claim_on = scope:defender
		}
		NOT = {
			OR = {
				scope:defender = { target_is_liege_or_above = scope:attacker }
				scope:attacker = { target_is_liege_or_above = scope:defender }
			}
		}
	}

	target_titles = de_jure
	ai_only_against_neighbors = yes
	#target_title_tier = all
	ignore_effect = change_title_holder
	#target_de_jure_regions_above = yes
	combine_into_one = yes

	valid_to_start = {
		scope:target = {
			any_this_title_or_de_jure_above = {
				exists = holder
				holder = {
					OR = {
						this = scope:attacker
						target_is_liege_or_above = scope:attacker
					}
				}
			}
			empire = title:e_celestia_china
		}
	}

	cost = {
		prestige = {
			value = 0
			# scale base value based on number of counties x 100
			add = {
				every_in_list = {
					list = target_titles
					limit = {
						tier = tier_county
						holder.top_liege = scope:defender
					}
					add = 100
				}
				desc = CB_CLAIM_COST_TARGET_TITLES
			}

			multiply = common_cb_prestige_cost_multiplier
		}
	}

	on_declaration = {
		on_declared_war = yes
	}

	should_invalidate = {
		NOT = {
			scope:attacker = {
				has_de_jure_claim_on = scope:defender
			}
		}
	}

	on_invalidated_desc = msg_de_jure_all_war_invalidated_message

	on_invalidated = {
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = de_jure_cb_victory_desc_attacker
			}
			desc = de_jure_cb_victory_desc
		}

	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		every_in_list = {
			list = target_titles
			de_jure_liege.holder = { save_scope_as = temp_de_jure_liege }
			add_hook_from_temp_de_jure_liege_to_attacker = yes
		}

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		# Setup and execute the changes to titles and vassals.
		setup_de_jure_cb = {
			attacker = scope:attacker
			defender = scope:defender
			change = scope:change
		}
		resolve_title_and_vassal_change = scope:change

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_de_jure_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 100
			LOSER_ALLY_FAME_SCALE = 100
		}

		# truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = de_jure_cb_white_peace_desc_defender
			}
			desc = de_jure_cb_white_peace_desc
		}

	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Create an 'helper' de jure CB which we won't execute, but can use to determine how much Prestige should be given to war participants.
		setup_de_jure_cb = {
			attacker = scope:attacker
			defender = scope:defender
			victory = no
		}
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = scope:cb_prestige_factor # Set by 'setup_de_jure_cb'
				multiply = -5.0
			}
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_de_jure_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 100
			LOSER_ALLY_FAME_SCALE = 100
		}
		# Defender neither gains nor loses any prestige.
		scope:defender = {
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}
		}

		# Truce
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = de_jure_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = de_jure_cb_defeat_desc_attacker
			}
			desc = de_jure_cb_defeat_desc
		}


	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Attacker must pay the defender war reparations.
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
		}

		# Create an 'helper' de jure CB which we won't execute, but can use to determine how much Prestige should be given to war participants.
		setup_de_jure_cb = {
			attacker = scope:attacker
			defender = scope:defender
			victory = no
		}
		# Attacker loses Prestige, all other participants gain Prestige based on their war contribution (Defender gets full Prestige).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_de_jure_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = scale_10_war_defender_win
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 100
			LOSER_ALLY_FAME_SCALE = 100
		}



		# Truce
		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "DEJURE_CB_WAR_NAME"
	war_name_base = "DEJURE_CB_WAR_NAME_BASE"
	cb_name = DEJURE_CB_NAME
	interface_priority = 100

	attacker_wargoal_percentage = 0.8

	max_ai_diplo_distance_to_title = 500
}

china_duchy_conquest_cb = {
	group = conquest
	
	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		is_independent_ruler = yes
		highest_held_title_tier >= tier_duchy
		capital_county.empire = title:e_celestia_china
	}

	allowed_for_character_display_regardless = {
		# Struggle constraint
		custom_tooltip = {
			text = struggle_involvement_cb_check_failure
			struggle_blocks_invasion_conquest_cb_trigger = yes
		}
	}

	allowed_against_character = {
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}
		scope:defender = {
			is_independent_ruler = yes
			any_held_title = {
				empire = title:e_celestia_china
			}
		}
	}
	target_titles = neighbor_land
	target_title_tier = duchy
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	ai_score_mult = {
		value = viking_conquest_ai_score_value

		# As a feudal gov, do not attack tribal
		add = {
			every_in_list = {
				list = target_titles
				if = {
					limit = { feudal_clan_tribal_conquest_constraints = yes }
					add = -1000
				}
			}
		}

		# AI in struggles act insularly for wars that don't have a familial or legal basis.
		multiply = struggle_wars_prioritise_struggle_targets_value
	}

	valid_to_start = {
		scope:target = {
			empire = title:e_celestia_china
			neighboring_county_or_viking_conquest_trigger = { CHARACTER = root }
		}
	}

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						target_is_same_character_or_above = scope:defender
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_religious_war_invalidation_region_message

	on_invalidated = {
	}

	cost = {
		prestige = {
			value = 0
			add = {
				value = medium_prestige_value
				desc = CB_BASE_COST
	 
			}
			multiply = common_cb_prestige_cost_multiplier
		}
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = county_conquest_cb_victory_desc_attacker
			}
			desc = county_conquest_cb_victory_desc
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		# go through the dejure hierarchy under target titles, transfer eligible vassals and sieze counties from ineligible ones
		every_in_list = {
			list = target_titles
			custom_tooltip = CONQUEST_CB_TITLE

			conquest_cb_title_transfer = {
				RELIGIOUS_WAR = no
			}
		}

		every_in_list = {
			list = vassals_taken
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
		}

		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		#
		if = { # Warning that only counties are changing hands
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_duchy
				}
			}
			random_in_list = {
				list = target_titles
				limit = { tier = tier_duchy }
				save_scope_as = de_jure_target
			}
		}
		if = {
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_duchy
					holder = scope:defender
				}
			}
			if = {
				limit = {
					scope:defender = {
						any_held_title = {
							tier = tier_county
							NOT = { target_is_de_jure_liege_or_above = scope:de_jure_target }
						}
					}
				}
				custom_tooltip = conquest_title_not_transferred_tt
			}
			else = { custom_tooltip = conquest_title_destroyed_tt }
		}
		else = {
			if = {
				limit = {
					any_in_list = {
						list = target_titles
						tier = tier_duchy
						is_title_created = yes
					}
				}
				custom_tooltip = conquest_title_usurp_tt
			}
			else = { custom_tooltip = conquest_title_create_tt }
		}
		#
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_white_peace_desc_defender
			}
			desc = county_conquest_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # not impactful as the scale are identical
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}


		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "CHINA_CONQUEST_WAR_NAME"
	war_name_base = "CHINA_CONQUEST_WAR_NAME_BASE"
	cb_name = "CHINA_CONQUEST_DUCHY_CB_NAME"

	interface_priority = 79

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8
}