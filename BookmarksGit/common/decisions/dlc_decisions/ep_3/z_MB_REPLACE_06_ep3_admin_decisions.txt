###################################
# Convert Realm to Administrative #
###################################

convert_to_administrative_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/ep3_cerimonial_decision.dds"
	}
	decision_group_type = major
	desc = convert_to_administrative_decision_desc

	ai_check_interval = 36

	is_shown = {
		has_ep3_dlc_trigger = yes
		OR = {
			government_has_flag = government_is_feudal
			government_has_flag = government_is_clan
		}
		trigger_if = {
			limit = { is_independent_ruler = no }
			liege = { government_allows = administrative }
		}
		trigger_else = {
			is_independent_ruler = yes
		}
	}

	is_valid = {
		has_ep3_dlc_trigger = yes
		OR = {
			government_has_flag = government_is_feudal
			government_has_flag = government_is_clan
		}
		trigger_if = {
			limit = { is_independent_ruler = no }
			liege = { government_allows = administrative }
		}
		trigger_else = {
			trigger_if = {
				limit = {
					culture = { has_cultural_parameter = can_adopt_administrative_government_as_kingdom_tier }
				}
				custom_tooltip = {
					text = king_tier_tt
					primary_title.tier >= tier_kingdom
				}
			}
			trigger_else = {
				custom_tooltip = {
					text = empire_tier_tt
					primary_title.tier = tier_empire
				}
				root = { save_temporary_scope_as = root_scope }
				custom_tooltip = {
					text = small_realm_size_tt
					realm_size >= small_empire_size_value
				}
			}
		}
		trigger_if = {
			limit = {
				is_independent_ruler = yes
				is_ai = no
			}
			prestige_level >= 3
		}
		trigger_if = {
			limit = {
				is_independent_ruler = yes
#				is_ai = no
			}
			custom_tooltip = {
				text = sensible_adopt_admin_powerful_vassals_reqs_tt
				any_powerful_vassal = {
					count = all
					NOT = { has_trait = ambitious }
					opinion = {
						target = root
						# value >= 50	# This is so absurdly trivial of a requirement for any emperor due to secular opinion bonus from Fame.
						value >= 100
					}
					########## Added requirements here ##########
					root = { has_usable_hook = prev } # Powerful vassals need to be coerced or have strong reason to give up their power.
				}
			}
			########## New requirements here ##########
			# No powerful monarchs would allow this and they happily manage their domain just fine.
			custom_tooltip = {
				text = sensible_adopt_admin_no_kings_tt
				any_vassal = {
					count = all
					primary_title.tier < tier_kingdom
				}
			}
			# No THREE duchies held by the same Noble House; They would be too influential and have too much to lose relinquishing their hereditary land rights.
			custom_tooltip = {
				text = sensible_adopt_admin_no_super_families_tt
				NOT = {
					# Check for 2 Duchies
#					any_sub_realm_duchy = {
#						holder = { is_lowborn = no } # Except for Lowborn.
#						NOT = { holder.house = root.house } # Except for the liege's house, who presumably is also dynasty head.
#						save_temporary_scope_as = check_duchy
#						root = {
#							any_sub_realm_duchy = {
#								NOT = { THIS = scope:check_duchy }
#								holder.house = scope:check_duchy.holder.house
#							}
#						}
#					}
					# Check for 3 Duchies
					any_sub_realm_duchy = {
						holder = { is_lowborn = no } # Except for Lowborn.
						NOT = { holder.house = root.house } # Except for the liege's house, who presumably is also dynasty head.
						save_temporary_scope_as = check_duchy_1
						root = {
							any_sub_realm_duchy = {
								NOT = { THIS = scope:check_duchy_1 }
								save_temporary_scope_as = check_duchy_2
								root = {
									any_sub_realm_duchy = {
										NOT = {
											THIS = scope:check_duchy_1
											THIS = scope:check_duchy_2
										}
										holder.house = scope:check_duchy_1.holder.house
										holder.house = scope:check_duchy_2.holder.house
									}
								}
							}
						}
					}
				}
			}
			# Any direct vassal who inherited their title needs compelling reason to relinquish their inheritance.
			custom_tooltip = {
				text = sensible_adopt_admin_all_vassals_reqs_tt
				any_vassal = {
					limit = {
						primary_title.tier > tier_barony
						is_landed = yes
					}
					count = all
					OR = {
						# They want no hereditary lords.
						has_trait = peasant_leader
						has_trait = populist_leader
						# They are losing control of their demesne
						any_held_county = {
							count = all
							OR = {
								county_opinion < 0
								county_control < 50
							}
						}
						AND = { # For non-generational titles, Match 1 Condition.
							any_held_title = {
								limit = {
									tier = tier_county
									# History doesn't work for tracking how CURRENT holder received it; Requires expiring timeframe.
									# recent_history = { type = inheritance }
									OR = {
											recent_history = { type = conquest years = 50 } 
											recent_history = { type = conquest_holy_war years = 50 } 
											recent_history = { type = conquest_claim years = 50 } 
											recent_history = { type = conquest_populist years = 50 } 
											recent_history = { type = election years = 50 } 
											recent_history = { type = created years = 50 } 
											recent_history = { type = usurped years = 50 } 
											recent_history = { type = granted years = 50 } 
											recent_history = { type = revoked years = 50 } 
											recent_history = { type = independency years = 50 } 
											recent_history = { type = faction_demand years = 50 } 
									}	# Work Around to check if this is a generationally held title for at least 2 generations.
									NOT = { previous_holder.house = holder.house } # This would not track inheritance from mother/subordinate parent or cadet houses.
								}
								count = all
							}
							OR = {
								is_imprisoned = yes
								has_trait = incapable
								has_trait = infirm
								has_trait = eunuch_1
								has_trait = beardless_eunuch

								has_trait = content
								has_trait = humble
								has_trait = just
								
								dynasty = root.dynasty
								root = { has_usable_hook = PREV }

								opinion = {
									target = root
									value >= 20
								}
							}
						}
						AND = { # For generational titles, Match 2 Conditions.
							any_held_title = {
								limit = {
									tier = tier_county
									# History doesn't work for tracking how CURRENT holder received it; Requires expiring timeframe.
									# recent_history = { type = inheritance }
									OR = {
										NOR = {
											recent_history = { type = conquest years = 50 } 
											recent_history = { type = conquest_holy_war years = 50 } 
											recent_history = { type = conquest_claim years = 50 } 
											recent_history = { type = conquest_populist years = 50 } 
											recent_history = { type = election years = 50 } 
											recent_history = { type = created years = 50 } 
											recent_history = { type = usurped years = 50 } 
											recent_history = { type = granted years = 50 } 
											recent_history = { type = revoked years = 50 } 
											recent_history = { type = independency years = 50 } 
											recent_history = { type = faction_demand years = 50 } 
										}	# Work Around to check if this is a generationally held title for at least 2 generations.
										previous_holder.house = holder.house # This would not track inheritance from mother/subordinate parent or cadet houses.
									}
								}
								# count = 1
							}
							calc_true_if = {
								amount >= 2
								
								is_imprisoned = yes
								has_trait = incapable
								has_trait = infirm
								has_trait = eunuch_1
								has_trait = beardless_eunuch

								has_trait = content
								has_trait = humble
								has_trait = just
								
								dynasty = root.dynasty
								root = { has_usable_hook = PREV }

								opinion = {
									target = root
									value >= 20
								}
								opinion = {
									target = root
									value >= 70
								} # Intentionally doubled; this effectively counts as 2 when opinion at least 50.
							}
						}
					} # Conditions
				} # Any Vassal Scope
			}
			###########################################
		}
		trigger_if = {
			limit = {
				is_ai = yes # Need to doublecheck; is this an additional requirement for AI on top of the player requirements?
			}
			calc_true_if = {
				amount >= 2
				culture = { has_cultural_pillar = ethos_bureaucratic }
				culture = { has_cultural_pillar = ethos_courtly }
				culture = { has_cultural_pillar = ethos_egalitarian }
				culture = { has_cultural_tradition = tradition_legalistic }
				has_realm_law = crown_authority_3
				capital_county = {
					development_level > medium_development_level
				}
				faith = { has_doctrine = tenet_legalism }
				dynasty = {
					has_dynasty_perk = erudition_legacy_5
				}
				dynasty = {
					has_dynasty_perk = law_legacy_5
				}
			}
		}
	}
	
	is_valid_showing_failures_only = {
		is_at_war = no
	}

	cost = {
		prestige = {
			value = 1000
			if = {
				limit = {
					is_ai = no
					primary_title.tier = tier_kingdom
				}
				multiply = 1.5
			}
			if = { # Much cheaper for vassals wanting to adopt their admin liege's government
				limit = {
					is_independent_ruler = no
				}
				multiply = 0.1
			}
		}
		gold = {
			value = 800
			if = {
				limit = { is_ai = no }
				#Realm size
				if = {
					limit = { root.realm_size >= 300 }
					multiply = 3.5
				}
				else_if = {
					limit = { root.realm_size >= 250 }
					multiply = 3
				}
				else_if = {
					limit = { root.realm_size >= 200 }
					multiply = 2.5
				}
				else_if = {
					limit = { root.realm_size >= 150 }
					multiply = 2
				}
				else_if = {
					limit = { root.realm_size >= 100 }
					multiply = 1.5
				}
			}
			#Era
			culture = {
				if = {
					limit = { has_cultural_era_or_later = culture_era_late_medieval }
					multiply = 1.75
				}
				else_if = {
					limit = { has_cultural_era_or_later = culture_era_high_medieval }
					multiply = 1.25
				}
				else_if = {
					limit = { has_cultural_era_or_later = culture_era_early_medieval }
					multiply = 1
				}
				else = {
					multiply = 0.75
				}
			}
			#Income
			if = {
				limit = { root.monthly_character_income >= 100 }
				multiply = 3
			}
			else_if = {
				limit = { root.monthly_character_income >= 80 }
				multiply = 2.5
			}
			else_if = {
				limit = { root.monthly_character_income >= 60 }
				multiply = 2
			}
			else_if = {
				limit = { root.monthly_character_income >= 40 }
				multiply = 1.5
			}
			else_if = {
				limit = { root.monthly_character_income >= 20 }
				multiply = 1.1
			}

			max = 3000
			
			if = { # Much cheaper for vassals wanting to adopt their admin liege's government
				limit = {
					is_independent_ruler = no
				}
				multiply = 0.1
			}
		}
	}

	effect = {
		save_scope_as = actor
		convert_to_administrative_from_feudalism_effect = yes
		trigger_event = ep3_decisions_event.4060 #Also sends information event to human vassals
		#Letter event for the vassals
		hidden_effect = {
			if = {
				limit = {
					is_ai = no
				}
				add_achievement_global_variable_effect = {
					VARIABLE = achieved_epic_paperwork_achievement
					VALUE = yes
				}
			}
			if = {
				limit = {
					is_ai = no
					religion = religion:islam_religion
					has_title = title:k_rum
					OR = {
						has_title = title:c_byzantion
						any_sub_realm_title = {
							this = title:c_byzantion
						}
					}
				}
				add_achievement_global_variable_effect = {
					VARIABLE = finished_new_management_achievement
					VALUE = yes
				}
			}
			########### Also Use Hooks ###########
			any_vassal = {
				count = all
				root = { use_hook = prev }
			}
			########### Liege Owes Concessions to Every Powerful Vassal in the new Administration ###########
			any_powerful_vassal = {
				count = all
				add_hook = {
					target = root
					type = influence_hook
				}
			}
			######################################
		}
	}

	ai_potential = {
		OR = {
			government_has_flag = government_is_feudal
			government_has_flag = government_is_clan
		}
		is_independent_ruler = yes
	}

	ai_will_do = {
		base = 0
		modifier = {
			OR = {
				primary_title = title:e_byzantium
				primary_title = title:e_roman_empire
			}
			add = 100
		}
		modifier = {
			culture = {
				OR = {
					has_cultural_pillar = ethos_bureaucratic 
					has_cultural_pillar = ethos_courtly 
					has_cultural_pillar = ethos_egalitarian 
				}
			}
			add = 50
		}
		modifier = {
			culture = {
				has_cultural_tradition = tradition_legalistic
			}
			add = 50
		}
		modifier = {
			culture = {
				OR = {
					has_cultural_tradition = tradition_fp3_enlightened_magnates 
					has_cultural_tradition = tradition_loyal_soldiers 
				}
			}
			add = 20
		}
		modifier = {
			culture = {
				OR = {
					has_cultural_tradition = tradition_staunch_traditionalists
					has_cultural_tradition = tradition_ep3_audacious_cadets
				}
			}
			add = -20
		}
		modifier = {
			culture = {
				has_cultural_tradition = tradition_hereditary_hierarchy
			}
			add = -20
		}
		modifier = {
			culture = {
				OR = {
					has_cultural_tradition = tradition_ep3_indomitable_azatani
					has_cultural_tradition = tradition_quarrelsome
					has_cultural_tradition = tradition_warrior_culture
					has_cultural_tradition = tradition_fp3_fierce_independence
				}
			}
			add = -50
		}
		modifier = {
			culture = {
				OR = {
					has_cultural_pillar = ethos_stoic
					has_cultural_pillar = ethos_bellicose 
					has_cultural_pillar = ethos_communal 
				}
			}
			add = -50
		}
		modifier = {
			culture = {
				any_parent_culture_or_above = {
					OR = {
						this = culture:han
						this = culture:greek
					}
				}
			}
			add = 100
		}
	}
}
