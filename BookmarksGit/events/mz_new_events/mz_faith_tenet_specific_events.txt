namespace = mz_faith_tenet_specific

#### 2001-2999 Burial Rites related events
scripted_effect mz_burial_rites_effect = { # Saves proper scopes for custom localization, and applies modifiers
	$LOCATION$ = {
		save_temporary_scope_as = mz_burial_rites_location
		set_variable = {
			name = mz_burial_rites_descendant
			value = root
			years = 50
		}
		set_variable = {
			name = mz_burial_rites_ancestor
			value = scope:ancestor
			years = 50
		}
		if = {
			limit = { 
				OR = {
					any_county_province = { has_building_or_higher = the_pyramids_01 }
					any_county_province = { has_building_or_higher = mz_pyramids_01 }
				}
			}
			add_county_modifier = {
				modifier = mz_burial_rites_bonus_county_strong_modifier
				years = 50
				desc = mz_burial_rites_bonus_county_strong_modifier_custom_desc
			}
		}
		else = {
			add_county_modifier = {
				modifier = mz_burial_rites_bonus_county_weak_modifier
				years = 50
				desc = mz_burial_rites_bonus_county_weak_modifier_custom_desc
			}
		}
	}
	root = { 
		if = {
			limit = { has_character_modifier = mz_burial_rites_penalty_minor_modifier }
			remove_character_modifier = mz_burial_rites_penalty_minor_modifier
		}
		if = {
			limit = { has_character_modifier = mz_burial_rites_penalty_major_modifier }
			remove_character_modifier = mz_burial_rites_penalty_major_modifier
		}
		add_character_modifier = { modifier = mz_burial_rites_bonus_character_modifier }
		if = { 
			limit = { exists = dynasty }
			dynasty = {
				every_dynasty_member = {
					limit = { 
						NOT = { this = root }
						faith = { has_doctrine_parameter = mz_burial_rites_active }
					}
					custom = mz_every_dynasty_member
					add_opinion = {
						target = root
						modifier = mz_burial_rites_opinion
					}
				}
			}
		}
	}
}

mz_faith_tenet_specific.2001 = {
	type = character_event
	title = mz_faith_tenet_specific.2001.t
	desc = mz_faith_tenet_specific.2001.desc
	theme = family
	left_portrait = {
		character = root
		animation = personality_rational
	}
	lower_center_portrait = {
		character = scope:ancestor
	}
	override_background = { reference = temple }

	trigger = { has_variable = ancestor_to_bury }

	immediate = {
		var:ancestor_to_bury = { save_scope_as = ancestor }

		every_held_title = {
			limit = { tier = tier_county }
			add_to_list = mz_personally_held_counties_list
		}

		ordered_in_list = {
			list = mz_personally_held_counties_list
			max = mz_burial_rites_location_cap_value
			order_by = mz_burial_rites_location_value
			if = { # Grab three options.
				limit = {
					NOT = { exists = scope:mz_location_a }
				}
				save_scope_as = mz_location_a
			}
			else_if = {
				limit = {
					NOR = {
						this = scope:mz_location_a
						exists = scope:mz_location_b
					}
				}
				save_scope_as = mz_location_b
			}
			else_if = {
				limit = {
					NOR = {
						this = scope:mz_location_a
						this = scope:mz_location_b
						exists = scope:mz_location_c
					}
				}
				save_scope_as = mz_location_c
			}
		}
		if = { # If the above fails to grab something for some reason, just use the capital
			limit = { 
				NOT = { exists = scope:mz_location_a }
			}
			capital_county = { save_scope_as = location_a }
		}
	}

	option = {
		trigger = { exists = scope:mz_location_a }
		name = {
			trigger = {
				scope:mz_location_a = {
					OR = {
						any_county_province = { has_building_or_higher = the_pyramids_01 }
						any_county_province = { has_building_or_higher = mz_pyramids_01 }
					}
				}
			}
			text = mz_faith_tenet_specific.2001.a_pyramids
		}
		name = {
			trigger = {
				scope:mz_location_a = {
					NOR = {
						any_county_province = { has_building_or_higher = the_pyramids_01 }
						any_county_province = { has_building_or_higher = mz_pyramids_01 }
					}
				}
			}
			text = mz_faith_tenet_specific.2001.a
		}
		mz_burial_rites_effect = { LOCATION = scope:mz_location_a }
		scope:mz_location_a = { save_scope_as = mz_chosen_location }
		ai_chance = { base = 100 }
	}

	option = {
		trigger = { exists = scope:mz_location_b }
		name = {
			trigger = {
				scope:mz_location_b = {
					any_county_province = {
						OR = {
							has_building_or_higher = the_pyramids_01
							has_building_or_higher = mz_pyramids_01
						}
					}
				}
			}
			text = mz_faith_tenet_specific.2001.b_pyramids
		}
		name = { text = mz_faith_tenet_specific.2001.b }
		mz_burial_rites_effect = { LOCATION = scope:mz_location_b }
		scope:mz_location_b = { save_scope_as = mz_chosen_location }
		ai_chance = { base = 0 }
	}

	option = {
		trigger = { exists = scope:mz_location_c }
		name = {
			trigger = {
				scope:mz_location_c = {
					any_county_province = {
						OR = {
							has_building_or_higher = the_pyramids_01
							has_building_or_higher = mz_pyramids_01
						}
					}
				}
			}
			text = mz_faith_tenet_specific.2001.c_pyramids
		}
		name = { text = mz_faith_tenet_specific.2001.c }
		mz_burial_rites_effect = { LOCATION = scope:mz_location_c }
		scope:mz_location_c = { save_scope_as = mz_chosen_location }
		ai_chance = { base = 0 }
	}

	after = { 
		remove_variable = ancestor_to_bury
		trigger_event = {
			days = { 5 10 }
			id = mz_faith_tenet_specific.2002
		}
	}
}

mz_faith_tenet_specific.2002 = {
	type = character_event
	title = mz_faith_tenet_specific.2001.t
	desc = { 
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:mz_chosen_location = {
						any_county_province = {
							OR = {
								has_building_or_higher = the_pyramids_01
								has_building_or_higher = mz_pyramids_01
							}
						}
					}
				}
				desc = mz_faith_tenet_specific.2002.desc_pyramids
			}
			desc = mz_faith_tenet_specific.2002.desc_default
		}
	}
	theme = family
	left_portrait = {
		character = root
		animation = personality_zealous
	}
	lower_center_portrait = {
		character = scope:ancestor
	}
	override_background = { reference = wilderness_scope }

	immediate = {
		scope:mz_chosen_location.title_province = { save_scope_as = background_wilderness_scope }
		show_as_tooltip = {
			mz_burial_rites_effect = { LOCATION = scope:mz_chosen_location }
		}
	}

	option = {
		name = mz_faith_tenet_specific.2002.a
		add_prestige = major_prestige_value
		if = {
			limit = { 
				scope:mz_chosen_location = {
					any_county_province = {
						OR = {
							has_building_or_higher = the_pyramids_01
							has_building_or_higher = mz_pyramids_01
						}
					}
				}
			}
			add_prestige = major_prestige_value
			if = {
				limit = { exists = dynasty }
				dynasty = { add_dynasty_prestige = 50 }
			}
		}
		else = {
			add_prestige = medium_prestige_value
			if = {
				limit = { exists = dynasty }
				dynasty = { add_dynasty_prestige = 20 }
			}
		}
		ai_chance = { base = 100 }
	}
}

#### Pyramid events

scripted_effect mz_pyramids_effect = {
	$LOCATION$ = { 
		title_province = { add_special_building_slot = mz_pyramids_01 }
	}
}

mz_faith_tenet_specific.2101 = {
	type = character_event
	title = mz_faith_tenet_specific.2101.t
	desc = mz_faith_tenet_specific.2101.desc
	theme = crown
	left_portrait = {
		character = root
		animation = personality_bold
	}
	override_background = { reference = throne_room }

	immediate = {
		every_sub_realm_barony = {
			limit = {
				holder = root # Must be held by root
				is_leased_out = no # No leased baronies
				county.faith = { has_doctrine_parameter = mz_pyramid_builders_active }
				title_province = { has_special_building_slot = no }
				NOR = { #A place where universities historically existed early
					this = title:b_fes
					this = title:b_cairo
					this = title:b_bologna
					this = title:b_salamanca
					this = title:b_madrid
					this = title:b_oxford
					this = title:b_cambridge
					this = title:b_padua
					this = title:b_siena
					this = title:b_coimbra
					this = title:b_napoli
					this = title:b_tirakka
				}
			}
			add_to_list = mz_personally_held_eligible_baronies_list
		}
		ordered_in_list = {
			list = mz_personally_held_eligible_baronies_list
			max = mz_pyramids_location_cap_value
			order_by = mz_pyramids_location_value
			if = { # Grab three options.
				limit = {
					NOT = { exists = scope:mz_location_a }
				}
				save_scope_as = mz_location_a
			}
			else_if = { # Only consider one barony per county
				limit = {
					NOR = {
						this.county = scope:mz_location_a.county
						exists = scope:mz_location_b
					}
				}
				save_scope_as = mz_location_b
			}
			else_if = {
				limit = {
					NOR = {
						this.county = scope:mz_location_a.county
						this.county = scope:mz_location_b.county
						exists = scope:mz_location_c
					}
				}
				save_scope_as = mz_location_c
			}
		}
		add_character_flag = mz_pyramid_built
	}

	option = {
		name = mz_faith_tenet_specific.2101.a
		trigger = { exists = scope:mz_location_a }
		send_interface_toast = {
			title = mz_faith_tenet_specific.2101.toast_t
			left_icon = root
			custom_tooltip = mz_faith_tenet_specific.2101.toast_a
			hidden_effect = { 
				mz_pyramids_effect = { LOCATION = scope:mz_location_a }
			}
		}
		ai_chance = { base = 100 } # Just make the AI pick the best choice, don't bother with the others
	}

	option = {
		name = mz_faith_tenet_specific.2101.b
		trigger = { exists = scope:mz_location_b }
		send_interface_toast = {
			title = mz_faith_tenet_specific.2101.toast_t
			left_icon = root
			custom_tooltip = mz_faith_tenet_specific.2101.toast_b
			hidden_effect = { 
				mz_pyramids_effect = { LOCATION = scope:mz_location_b }
			}
		}
		ai_chance = { base = 0 }
	}

	option = {
		name = mz_faith_tenet_specific.2101.c
		trigger = { exists = scope:mz_location_c }
		send_interface_toast = {
			title = mz_faith_tenet_specific.2101.toast_t
			left_icon = root
			custom_tooltip = mz_faith_tenet_specific.2101.toast_c
			hidden_effect = { 
				mz_pyramids_effect = { LOCATION = scope:mz_location_c }
			}
		}
		ai_chance = { base = 0 }
	}

	option = {
		name = mz_faith_tenet_specific.2101.d
		remove_character_flag = mz_pyramid_built
		remove_decision_cooldown = mz_build_pyramids_decision
		ai_chance = { base = 0 }
	}
}

#### Grove Events
mz_faith_tenet_specific.2201 = {
	type = character_event
	title = mz_faith_tenet_specific.2201.t
	desc = mz_faith_tenet_specific.2201.desc
	theme = faith
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:mz_chaplain
		animation = personality_zealous
	}
	override_background = { reference = wilderness_scope }

	immediate = {
		every_realm_province = {
			limit = {
				county = { 
					holder = root
					faith = { has_doctrine_parameter = mz_grove_dedication_active }
				}
				OR = {
					terrain = taiga
					terrain = forest
					terrain = jungle
					terrain = hills
					terrain = drylands
					has_holding = no
				}
			}
			add_to_list = mz_personally_held_eligible_provinces_list
		}
		ordered_in_list = {
			list = mz_personally_held_eligible_provinces_list
			max = mz_grove_location_cap_value
			order_by = mz_grove_location_value
			if = { # Grab best option to be background
				limit = {
					NOT = { exists = scope:background_wilderness_scope }
				}
				save_scope_as = background_wilderness_scope
			}
		}
		if = {
			limit = { 
				faith = { has_doctrine = doctrine_theocracy_temporal } # Why is this named temporal anyway? Weird. Anyway, not for lay clergy.
				exists = cp:councillor_court_chaplain
			}
			cp:councillor_court_chaplain = { save_scope_as = mz_chaplain }
		}
		if = {
			limit = { 
				exists = faith.religious_head
				faith = { has_doctrine_parameter = spiritual_head_of_faith }
			}
			if = {
				limit = { 
					NOT = { root = faith.religious_head } # This is only for opinion boost. A religious head can still use this decision, they just don't get self-opinion.
				}
				faith.religious_head = { save_scope_as = mz_religious_head }
			}
		}
	}

	option = { # War dedication
		name = mz_faith_tenet_specific.2201.a
		hidden_effect = { mz_grant_grove_martial_modifier_effect = yes }
		if = { 
			limit = { exists = scope:mz_chaplain }
			reverse_add_opinion = {
				modifier = pleased_opinion
				target = scope:mz_chaplain
				opinion = 40
			}
		}
		if = { 
			limit = { 
				faith = { has_doctrine_parameter = spiritual_head_of_faith }
				exists = scope:mz_religious_head
			}
			reverse_add_opinion = {
				modifier = pleased_opinion
				target = scope:mz_religious_head
				opinion = 20
			}
		}
		every_vassal = {
			limit = { 
				has_government = theocracy_government
				primary_title.tier > tier_barony
			}
			custom = mz_every_theocratic_count_plus
			add_opinion = {
				modifier = pleased_opinion
				target = root
				opinion = 20
			}
		}
		show_as_tooltip = {
			every_sub_realm_county = {
				custom = mz_county_bonus
				add_county_modifier = {
					modifier = mz_sacred_grove_county_modifier
					years = 10
				}
			}
			every_directly_owned_province = {
				custom = mz_minor_bonus
				root = { 
					add_character_modifier = {
						modifier = mz_grove_martial_minor_modifier 
						years = 10
					}
				}
			}
			every_directly_owned_province = {
				custom = mz_major_bonus
				root = { 
					add_character_modifier = {
						modifier = mz_grove_martial_major_modifier 
						years = 10
					}
				}
			}
		}
		trigger_event = {
			id = mz_faith_tenet_specific.2202
			years = 10
		}
		ai_chance = { 
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.5
			}
			modifier = {
				faith = { has_doctrine_parameter = holy_wars_forbidden }
				factor = 0.1
			}
			modifier = { 
				faith = { has_doctrine_parameter = warmonger }
				factor = 2
			}
			modifier = {
				OR = {
					has_trait = education_martial
					has_focus_or_focus_trait_trigger = { FOCUS = martial_chivalry_focus }
					has_focus_or_focus_trait_trigger = { FOCUS = martial_authority_focus }
					has_focus_or_focus_trait_trigger = { FOCUS = martial_strategy_focus }
				}
				add = 50
			}
			modifier = {
				has_trait = wrathful
				add = 20
			}
		}
	}

	option = { # Wealth dedication
		name = mz_faith_tenet_specific.2201.b
		hidden_effect = { mz_grant_grove_wealth_modifier_effect = yes }
		if = { 
			limit = { exists = scope:mz_chaplain }
			reverse_add_opinion = {
				modifier = pleased_opinion
				target = scope:mz_chaplain
				opinion = 40
			}
		}
		if = { 
			limit = { 
				faith = { has_doctrine_parameter = spiritual_head_of_faith }
				exists = scope:mz_religious_head
			}
			reverse_add_opinion = {
				modifier = pleased_opinion
				target = scope:mz_religious_head
				opinion = 20
			}
		}
		every_vassal = {
			limit = { 
				has_government = theocracy_government
				primary_title.tier > tier_barony
			}
			custom = mz_every_theocratic_count_plus
			add_opinion = {
				modifier = pleased_opinion
				target = root
				opinion = 20
			}
		}
		show_as_tooltip = {
			every_sub_realm_county = {
				custom = mz_county_bonus
				add_county_modifier = {
					modifier = mz_sacred_grove_county_modifier
					years = 10
				}
			}
			every_directly_owned_province = {
				custom = mz_minor_bonus
				root = { 
					add_character_modifier = {
						modifier = mz_grove_wealth_minor_modifier 
						years = 10
					}
				}
			}
			every_directly_owned_province = {
				custom = mz_major_bonus
				root = { 
					add_character_modifier = {
						modifier = mz_grove_wealth_major_modifier 
						years = 10
					}
				}
			}
		}
		trigger_event = {
			id = mz_faith_tenet_specific.2202
			years = 10
		}
		ai_chance = { 
			base = 50
			ai_value_modifier = {
				ai_greed = 0.5
			}
			modifier = {
				OR = {
					has_trait = education_stewardship
					has_focus_or_focus_trait_trigger = { FOCUS = stewardship_wealth_focus }
					has_focus_or_focus_trait_trigger = { FOCUS = stewardship_domain_focus }
					has_focus_or_focus_trait_trigger = { FOCUS = stewardship_duty_focus }
				}
				add = 50
			}
			modifier = {
				has_trait = diligent
				add = 20
			}
			min = 1
		}
	}

	option = { # Household dedication
		name = mz_faith_tenet_specific.2201.c
		hidden_effect = { mz_grant_grove_health_modifier_effect = yes }
		if = { 
			limit = { exists = scope:mz_chaplain }
			reverse_add_opinion = {
				modifier = pleased_opinion
				target = scope:mz_chaplain
				opinion = 40
			}
		}
		if = { 
			limit = { 
				faith = { has_doctrine_parameter = spiritual_head_of_faith }
				exists = scope:mz_religious_head
			}
			reverse_add_opinion = {
				modifier = pleased_opinion
				target = scope:mz_religious_head
				opinion = 20
			}
		}
		every_vassal = {
			limit = { 
				has_government = theocracy_government
				primary_title.tier > tier_barony
			}
			custom = mz_every_theocratic_count_plus
			add_opinion = {
				modifier = pleased_opinion
				target = root
				opinion = 20
			}
		}
		show_as_tooltip = {
			every_sub_realm_county = {
				custom = mz_county_bonus
				add_county_modifier = {
					modifier = mz_sacred_grove_county_modifier
					years = 10
				}
			}
			every_directly_owned_province = {
				custom = mz_minor_bonus
				root = { 
					add_character_modifier = {
						modifier = mz_grove_health_minor_modifier 
						years = 10
					}
				}
			}
			every_directly_owned_province = {
				custom = mz_major_bonus
				root = { 
					add_character_modifier = {
						modifier = mz_grove_health_major_modifier 
						years = 10
					}
				}
			}
		}		
		trigger_event = {
			id = mz_faith_tenet_specific.2202
			years = 10
		}
		ai_chance = { 
			base = 50
			ai_value_modifier = {
				ai_boldness = -0.5
			}
			modifier = {
				OR = {
					has_focus_or_focus_trait_trigger = { FOCUS = learning_medicine_focus }
					has_focus_or_focus_trait_trigger = { FOCUS = intrigue_skulduggery_focus }
					has_focus_or_focus_trait_trigger = { FOCUS = diplomacy_family_focus }
				}
				add = 50
			}
			modifier = {
				has_trait = paranoid
				add = 100
			}
			modifier = {
				add = {
					value = health
					if = { 
						limit = { health < 0 }
						add = 100
					}
					multiply = -10
				}
			}
			modifier = {
				add = {
					value = stress
					multiply = 0.3
				}
			}
			modifier = {
				has_trait = athletic
				add = 20
			}
			min = 1
		}
	}
}

mz_faith_tenet_specific.2202 = {
	hidden = yes

	immediate = { 
		remove_all_character_modifier_instances = mz_grove_martial_major_modifier
		remove_all_character_modifier_instances = mz_grove_martial_minor_modifier
		remove_all_character_modifier_instances = mz_grove_health_major_modifier
		remove_all_character_modifier_instances = mz_grove_health_minor_modifier
		remove_all_character_modifier_instances = mz_grove_wealth_major_modifier
		remove_all_character_modifier_instances = mz_grove_wealth_minor_modifier
	}
}

#### Debug Events
mz_faith_tenet_specific.2999 = { # Special empty error-catching event similar to one used for steles
	hidden = yes
	orphan = yes

	trigger = {
		exists = var:mz_burial_rites_descendant
		exists = var:mz_burial_rites_ancestor
	} # These variables are used for localization but the game yells at us if we don't use them elsewhere

	immediate = { } # No effects here
}