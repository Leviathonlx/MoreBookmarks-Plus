template POPSTextStyle
{
	using = Font_Type_Standard
	using = Font_Size_Small
	align = left
	default_format = "#medium"

	block "pops_text_style"
	{
	}
}

template POPSButtonTextStyle
{
	block "pops_button_text_style"
	{
		name = "pops_button_text"
		parentanchor = vcenter|hcenter
		font = StandardGameFont
		fontsize = 15
		fontcolor = { 0.86 0.86 0.73 1 }
		autoresize = yes
		position = { 0 0 }
		align = center
	}
}

template POPSErrorTextStyle
{
	block "pops_error_text_style"
	{
		font = StandardGameFont
		align = left
		fontcolor = { 1 0 0 1 }
		fontsize = 13
	}
}

template POPSButtonStyle
{
	block "pops_button_style"
	{
		texture = "gfx/editor_gui/editor_button.dds"
		gfxtype = framedbuttongfx
		spriteType = CorneredStretched
		spriteborder = { 4 4 }
		effectname = "NoHighlight"
		framesize = { 16 16 }
		upframe = 1
		downframe = 2
		overframe = 3
		disableframe = 4
		intersectionmask = yes
	}
}

template POPSDropdownButtonStyle
{
	block "pops_dropdown_button_style"
	{
		texture = "gfx/editor_gui/editor_dropdown.dds"
		spriteType = CorneredStretched
		gfxtype = framedbuttongfx
		effectname = "NoHighlight"
		spriteborder = { 4 4 }
		spriteborder_right = 24
		button_trigger = none
		framesize = { 32 16 }
		upframe = 1
		downframe = 2
		overframe = 3
		disableframe = 4
	}
}

template pops_dropdown_enum
{
	block "pops_dropdown_enum"
	{
		alwaystransparent = no
		active_item = {
			widget = {
				size = { 250 30 }
				block "active_item"
				{

				}

				button = {
					size = { 100% 100% }
					using = POPSDropdownButtonStyle
				}

				editor_textbox = {
					block "item_text"
					{
						text = ""
					}
					position = { 10 0 }
					parentanchor = vcenter|left
					fontsize = 12
				}
			}
		}

		item = {
			widget = {
				size = { 250 20 }
				block "item"
				{
				}

				button = {
					size = { 100% 100% }
					texture = "gfx/editor_gui/editor_dropdown_item.dds"
					spriteType = CorneredTiled
					spriteborder = { 1 1 }
					gfxtype = framedbuttongfx
					framesize = { 8 8 }
					upframe = 1
					downframe = 2
					overframe = 2
					disableframe = 1
					button_trigger = none
				}

				editor_textbox = {
					block "item_text"
					{
						text = ""
					}
					position = { 10 8 }
					fontsize = 12
				}
			}
		}

		list = {
			scrollarea = {
				position = { 2 30 }
				autoresizescrollarea = yes
				alwaystransparent = yes
				maximumsize = { 250 210 }
				block "scrollarea"
				{
				}

				background = {
					margin = { 2 2 }
					margin_bottom = 6
					margin_right = 6
					texture = "gfx/editor_gui/editor_dropdown_list.dds"
					spriteType = CorneredStretched
					spriteborder = { 6 6 }
					spriteborder_right = 8
					spriteborder_bottom = 8
					shaderfile = "gfx/FX/pdxgui_default.shader"
				}

				scrollwidget = {
					dynamicgridbox = {
						alwaystransparent = no
					}
				}

				scrollbar_vertical = {
					using = editor_vertical_scrollbar
				}

				scrollbar_horizontal = {
					using = editor_horizontal_scrollbar
				}
			}
		}
	}
}

types POPS
{
	type pops_vertical_spacer = widget {
		block "pops_vertical_spacer"
		{
			size = { 0 5 }
		}
	}

	type pops_horizontal_spacer = widget {
		block "pops_horizontal_spacer"
		{
			size = { 5 0 }
		}
	}

	type pops_window = window {

		block "pops_window"
		{
			using = Window_Movable

			vbox = {
				using = Window_Margins

				block "content_layout"
				{}
			}
		}
	}

	type pops_button = button {
		block "pops_button_size"
		{
			size = { 150 50 }
			minimumsize = { 150 50 }
		}

		using = POPSButtonStyle

		buttonText = {
			textbox = {
				using = POPSButtonTextStyle
			}
		}
	}

	type pops_button_wide = pops_button {
		block "pops_button_size"
		{
			size = { 200 50 }
			minimumsize = { 150 50 }
		}
	}

	type pops_load_indicator = progressbar
	{
		# parentanchor = vcenter|hcenter
		size = { 44 44 }
		gfxtype = framedprogressbargfx
		texture = "gfx/interface/loading_progress.dds"
		framesize = { 44 44 }
		loopinterval = 1.5
		max = 0
		block "load_indicator"
		{
			visible = no
		}
	}

	type pops_button_load_indicator = button_standard {
		pops_load_indicator = {}
	}

	type pops_textbox = textbox {
		text = ""
		block "textbox_size"
		{
			size = { 200 30 }
		}
		using = POPSTextStyle
		block "textboxstyle"
		{
		}
	}

	type pops_error_textbox = textbox {
		text = ""
		multiline = yes
		layoutpolicy_vertical = expanding
		using = POPSErrorTextStyle
		block "textboxstyle"
		{
		}
	}

	type pops_required_textbox = textbox {
		block "required_field"
		{
			raw_text = "*"
		}
		minimumsize = { 10 -1 }
		using = POPSTextStyle
		autoresize = yes
		block "textboxstyle"
		{
		}
		fontcolor = { 1 0 0 1 }
	}

	type pops_dropdown = dropDown {
		layoutpolicy_horizontal = expanding
		block "pops_dropdown_name"
		{
			name = "pops_dropdown"
		}
		block "pops_dropdown"
		{
		}
		using = pops_dropdown_enum
	}

	type pops_textbox_entry = hbox {
		layoutpolicy_horizontal = expanding
		restrictparent_min = yes
		layoutpolicy_vertical = fixed
		
		editbox_standard_with_label = {
			blockoverride "editbox_label"
			{
				block "title"
				{
					raw_text = "#D Title:#!"
				}
			}
			layoutpolicy_horizontal = expanding
			block "editbox_size"
			{
				size = { 130 30 }
			}
		}
	}

	type pops_dropdown_entry = hbox {
		layoutpolicy_horizontal = expanding
		pops_required_textbox={}
		pops_vertical_spacer={}
		pops_textbox = {
			block "title"
			{
				raw_text = "#D Title:#!"
			}
		}
		pops_dropdown = {
		}
	}

	type pops_checkbutton = hbox {
		checkbutton = {
			gfxtype = checkbuttongfx
			shaderfile = "gfx/FX/pdxgui_pushbutton.shader"
			texture = "gfx/editor_gui/editor_checkbox.dds"
			framesize = { 16 16 }
			size = { 32 32 }

			block "checkbutton"
			{
			}
		}

		pops_horizontal_spacer={}

		pops_textbox = {
			multiline = yes
			#size = { 300 100% }
			maximumsize = { 300 800 }
			minimumsize = { 200 50 }
			align = top

			block "label"
			{
				raw_text = "#D Label#!"
			}
		}
	}
}
