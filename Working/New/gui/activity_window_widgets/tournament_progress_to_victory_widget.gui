vbox = {
	name = "tournament_progress_to_victory_widget"
	datacontext = "[Activity.GetCurrentPhase]"
	datacontext = "[Activity.GetCurrentPhase.GetPhase]"
	visible = "[And( And( Not(VariableSystem.Exists('activity_locale_view') ), DataModelHasItems( ActivityLocaleWindow.GetCurrentPhaseGuestSubset( 'contestant' ) ) ), Not( IsContestType( 'tournament_phase_ceremony' ) ) )]"
	visible_at_creation = no # required to make sure we trigger the '_show' state
	layoutpolicy_horizontal = expanding

	alwaystransparent = no

	minimumsize = { 300 -1 }
	maximumsize = { 300 -1 }
	spacing = 4

	background = {
		texture = "gfx/interface/component_tiles/tile_window_background_subwindow.dds"
		spriteType = Corneredtiled
		spriteborder = { 18 18 }
		margin = { 16 16 }
		texture_density = 2

		modify_texture = {
			name = "overlay"
			texture = "gfx/interface/component_overlay/overlay_effect.dds"
			spriteType = Corneredstretched
			spriteborder = { 0 0 }
			blend_mode = overlay
		}
	}

	hbox = {
		margin = { 0 4 }
		visible = "[Not( Activity.IsCurrentPhaseActive )]"


		text_single = {
			text = locale_window_widget_progress_to_victory_next_contest
			max_width = 280
		}
	}

	vbox = {
		layoutpolicy_horizontal = expanding
		visible = "[Not( Activity.IsCurrentPhaseActive )]"

		margin_bottom = 16
		spacing = 4

		text_label_center = {
			layoutpolicy_horizontal = expanding

			text = locale_window_widget_progress_to_victory_header
			using = Font_Size_Big
			using = Font_Type_Flavor
		}

		text_single = {
			visible = "[Not( Activity.IsCurrentPhaseActive )]"
			max_width = 280
			text = locale_window_widget_leaderboard_qualification
			default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
			fontsize = 14
		}

		widget = {
			size = { 240 64 }
			allow_outside = yes

			tooltip = locale_window_widget_progress_to_victory_tooltip

			widget_passive_phase_progress_to_victory = {
				parentanchor = center

				blockoverride "widget_size" {
					size = { 230 40 }
				}
			}

			widget = {
				parentanchor = left|vcenter
				size = { 64 64 }
				position = { -22 0 }

				allow_outside = yes

				icon = {
					texture = "gfx/interface/window_activities/tournament/icon_chance_of_victory_bg.dds"
					parentanchor = center
					size = { 64 64 }

					allow_outside = yes
				}

				icon_flat_standard = {
					parentanchor = center
					size = { 35 35 }
					texture = "gfx/interface/icons/flat_icons/war_outcome_victory.dds"
				}
			}
		}

		text_single = {
			text = locale_window_widget_progress_to_victory_label
			max_width = 280
		}
	}

	button_standard = {
		layoutpolicy_horizontal = expanding
		size = { 296 30 }

		visible = "[Not( GetVariableSystem.Exists( 'expand_tournament_leaderboard' ) )]"

		onclick = "[GetVariableSystem.Toggle( 'expand_tournament_leaderboard' )]"

		tooltip = locale_window_widget_show_leaderboard_tt

		button_expand = {
			parentanchor = center
			frame = 2
			onclick = "[GetVariableSystem.Toggle( 'expand_tournament_leaderboard' )]"
		}
	}

	vbox = {
		layoutpolicy_horizontal = expanding
		visible = "[GetVariableSystem.Exists( 'expand_tournament_leaderboard' )]"

		background = {
			using = Background_Area
		}

		text_label_center = {
			layoutpolicy_horizontal = expanding
			max_width = 280

			text = locale_window_widget_leaderboard
			default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
			fontsize = 22
			fontsize_min = 16
			using = Font_Type_Flavor
		}

		vbox_tournament_favoured_contestants = {
			name = "tournament_contestant_passive_phase"
			visible = "[And( Not( Activity.IsCurrentPhaseActive ), DataModelHasItems( ActivityLocaleWindow.GetCurrentPhaseGuestSubset( 'contestant' ) ) )]"

			state = {
				name = _show
				on_start = "[ActivityLocaleWindow.SetAllPhasesGuestSubsetSortingDescending('contestant', 'progress_to_victory_current')]"
			}

			blockoverride "most_favoured_datacontext"
			{
				# TODO: Uncomment this when PSGE-5672 is resolved.
				#datamodel = "[ActivityLocaleWindow.GetCurrentPhaseGuestSubset( 'contestant' )]"

				# Uses a bit of a hack to ensure the datacontext is updated
				# when the underlying datamodel is sorted.
				datamodel = "[DataModelFirst( ActivityLocaleWindow.GetCurrentPhaseGuestSubset( 'contestant' ), '(int32)1' )]"
			}

			blockoverride "contestants_attributes"
			{
				datamodel = "[DataModelSkipFirst( DataModelFirst( ActivityLocaleWindow.GetCurrentPhaseGuestSubset( 'contestant' ), '(int32)8' ), '(int32)1' )]"
			}

			blockoverride "visible_bottom_bar"
			{
				visible = "[GreaterThan_int32( GetDataModelSize( ActivityLocaleWindow.GetCurrentPhaseGuestSubset( 'contestant' ) ), '(int32)8' )]"
			}

			blockoverride "bottom_bar_text"
			{
				text = "locale_window_widget_leaderboard_remaining_contestants"
			}
		}

		vbox_tournament_favoured_contestants = {
			name = "tournament_contestant_active_phase"
			visible = "[And( Activity.IsCurrentPhaseActive, DataModelHasItems( ActivityLocaleWindow.GetCurrentPhaseGuestSubset( 'qualified' ) ) )]"

			state = {
				name = _show
				on_start = "[ActivityLocaleWindow.SetAllPhasesGuestSubsetSortingDescending('qualified', 'progress_to_victory_current')]"
			}

			blockoverride "most_favoured_datacontext"
			{
				# TODO: Uncomment this when PSGE-5672 is resolved.
				#datamodel = "[ActivityLocaleWindow.GetCurrentPhaseGuestSubset( 'qualified' )]"

				# Uses a bit of a hack to ensure the datacontext is updated
				# when the underlying datamodel is sorted.
				datamodel = "[DataModelFirst( ActivityLocaleWindow.GetCurrentPhaseGuestSubset( 'qualified' ), '(int32)1' )]"
			}

			blockoverride "contestants_attributes"
			{
				datamodel = "[DataModelSkipFirst( DataModelFirst( ActivityLocaleWindow.GetCurrentPhaseGuestSubset( 'qualified' ), '(int32)8' ), '(int32)1' )]"
			}

			blockoverride "visible_bottom_bar"
			{
				visible = "[GreaterThan_int32( GetDataModelSize( ActivityLocaleWindow.GetCurrentPhaseGuestSubset( 'qualified' ) ), '(int32)8' )]"
			}

			blockoverride "bottom_bar_text"
			{
				text = "locale_window_widget_leaderboard_other_qualified"
			}
		}

		button_standard = {
			size = { 296 30 }

			onclick = "[GetVariableSystem.Toggle( 'expand_tournament_leaderboard' )]"

			tooltip = locale_window_widget_hide_leaderboard_tt

			button_expand = {
				parentanchor = center
				frame = 2
				mirror = vertical
				alwaystransparent = yes
			}
		}
	}
}
