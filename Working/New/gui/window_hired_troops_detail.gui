window = {
	name = "hired_troop_detail_view"
	widgetid = "hired_troop_detail_view"
	datacontext = "[HiredTroopDetailView.GetHiredTroop]"
	parentanchor = top|right
	position = { -610 90 }

	movable = no
	layer = middle

	using = Window_Background
	using = Window_Decoration

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		position_x = -610
		on_start = "[GetVariableSystem.Set( 'hired_troop_detail_view_open', 'true'  )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		position_x = -580
		on_start = "[GetVariableSystem.Clear( 'hired_troop_detail_view_open' )]"
	}

	vbox = {
		using = Window_Margins
		set_parent_size_to_minimum = yes

		state = {
			name = "mercenary_details_refresh"
			alpha = 0
			duration = 0.2
			next = "b"
			using = Animation_Curve_Default
		}

		state = {
			name = "b"
			alpha = 1
			duration = 0.2
			using = Animation_Curve_Default
		}

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "[HiredTroop.GetName]"
			}

			blockoverride "button_close"
			{
				onclick = "[HiredTroopDetailView.Close]"
			}
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			hbox = {
				name = "header_details"
				layoutpolicy_horizontal = expanding
				margin = { 5 0 }
				spacing = 5

				coa_realm_medium = {
					datacontext = "[HiredTroop.GetTitle.GetHolder]"
					visible = "[Not( HiredTroop.IsAdministrativeArmy )]"
				}
				coa_title_medium_crown = {
					datacontext = "[HiredTroop.GetTitle]"
					visible = "[HiredTroop.IsAdministrativeArmy]"
					scale = 0.9
				}

				vbox = {
					layoutpolicy_vertical = expanding
					spacing = 5

					vbox_holy_order_troop_header_details = {}

					vbox_mercenary_company_header_details = {}

					vbox_administrative_army_header_details = {}

					vbox_hireable_ruler_header_details = {}
				}

				expand = {}
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				spacing = 5

				vbox = {
					layoutpolicy_horizontal = expanding
					margin = { 15 0 }
					margin_bottom = 5

					background = {
						using = Background_Area
					}

					text_label_left = {
						layoutpolicy_horizontal = expanding
						text = "HIRED_TROOPS_REGIMENTS"
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						margin = { 0 5 }

						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							spacing = 5

							hbox = {
								layoutpolicy_horizontal = expanding
								spacing = 5

								icon = {
									size = { 30 30 }
									texture = "gfx/interface/icons/icon_soldier.dds"
								}

								text_single = {
									name = "soldiers_count"
									layoutpolicy_horizontal = expanding
									text = "HIRED_TROOPS_VIEW_LIST_NUMBER_OF_SOLDIERS"
									default_format = "#high"
									using = Font_Size_Big
									align = nobaseline
								}

								#hbox = {
								#	visible = "[GreaterThan_int32( HiredTroop.GetKnightCount, '(int32)0' )]"
								#	spacing = 5
								#
								#	icon = {
								#		texture = "gfx/interface/icons/icon_knight_small.dds"
								#		size = { 30 30 }
								#	}
								#
								#	text_single = {
								#		name = "knights_count"
								#		layoutpolicy_horizontal = expanding
								#		layoutpolicy_vertical = expanding
								#
								#		text = "HIRED_TROOPS_VIEW_LIST_NUMBER_OF_KNIGHTS"
								#		align = nobaseline
								#		default_format = "#high"
								#		fontsize_min = 14
								#		max_width = 95
								#		using = Font_Size_Big
								#
								#		tooltip = "[HiredTroop.GetKnightsTooltip]"
								#	}
								#}
							}

							hbox = {
								layoutpolicy_horizontal = expanding

								progressbar_standard = {
									name = "strength_bar"
									size = { 380 15 }
									value = "[HiredTroop.GetSoldiersProgressBarRatio]"
								}
							}
						}

						expand = {}
					}
				}

				vbox = {
					name = "regiments_details"
					layoutpolicy_horizontal = expanding

					vbox = {
						visible = "[LessThanOrEqualTo_int32(GetDataModelSize(HiredTroop.GetRegiments), '(int32)4')]"
						margin = { 15 0 }
						margin_top = 10
						layoutpolicy_horizontal = expanding

						fixedgridbox = {
							name = "regiments"
							visible = "[LessThanOrEqualTo_int32(GetDataModelSize(HiredTroop.GetRegiments), '(int32)4')]"
							addcolumn = 190
							addrow = 110
							datamodel = "[HiredTroop.GetRegiments]"
							flipdirection = yes
							datamodel_wrap = 2

							item = {
								widget = {
									size = { 185 105 }

									datacontext = "[HiredTroopRegiment.GetRegiment]"

									widget = {
										size = { 100% 100% }
										visible = "[Not(HiredTroopRegiment.IsLevies)]"

										tooltipwidget = regiment_container_tooltip
									}

									background = {
										name = "image"
										visible = "[HiredTroopRegiment.IsLevies]"

										texture = "gfx/interface/illustrations/men_at_arms_big/levies.dds"
										alpha = 0.7
										using = Mask_Rough_Edges
										margin = { -2 -2 }
									}

									background = {
										name = "image"
										visible = "[Not(HiredTroopRegiment.IsLevies)]"

										texture = "[HiredTroopRegiment.GetMenAtArmsType.GetHorizontalImage]"
										alpha = 0.7
										using = Mask_Rough_Edges
										margin = { -2 -2 }
									}

									background = {
										using = Background_Frame
									}

									flowcontainer = {
										parentanchor = bottom|left
										direction = vertical
										margin = { 10 10 }
										ignoreinvisible = yes
										spacing = 3

										flowcontainer = {
											visible = "[HiredTroopRegiment.IsLevies]"
											spacing = 3

											icon = {
												parentanchor = vcenter
												size = { 25 25 }
												texture = "gfx/interface/icons/icon_soldier.dds"
											}

											text_single = {
												name = "soldiers_label"
												text = HIRED_TROOPS_VIEW_SOLDIER_COUNT
												default_format = "#high"
												using = Font_Size_Medium
												align = nobaseline
											}
										}

										flowcontainer = {
											visible = "[Not(HiredTroopRegiment.IsLevies)]"
											spacing = 3

											icon = {
												size = { 25 25 }
												texture = "[HiredTroopRegiment.GetMenAtArmsType.GetIcon]"
											}

											text_single = {
												name = "soldiers_label"
												text = HIRED_TROOPS_VIEW_SOLDIER_COUNT
												default_format = "#high"
												using = Font_Size_Medium
												align = nobaseline
											}
										}

										progressbar_standard = {
											name = "strength_bar"
											size = { 160 10 }
											value = "[HiredTroopRegiment.GetProgressBarRatio]"
										}
									}
								}
							}
						}
					}

					#### REGIMENTS ####
					scrollbox = {
						visible = "[GreaterThan_int32(GetDataModelSize(HiredTroop.GetRegiments), '(int32)4')]"
						layoutpolicy_horizontal = expanding
						maximumsize = { -1 300 }
						autoresizescrollarea = yes
						scrollbarpolicy_horizontal = always_off

						scrollbar_vertical = {
							using = Scrollbar_Vertical
						}

						blockoverride "scrollbox_margins" {
							margin_top = 15
							margin_bottom = 10
						}

						blockoverride "scrollbox_content" {
							vbox = {
								name = "regiments_area"

								fixedgridbox = {
									name = "regiments"
									addcolumn = 190
									addrow = 110
									datamodel = "[HiredTroop.GetRegiments]"
									flipdirection = yes
									datamodel_wrap = 2

									item = {
										widget = {
											datacontext = "[HiredTroopRegiment.GetRegiment]"
											size = { 185 105 }

											widget = {
												visible = "[Not(HiredTroopRegiment.IsLevies)]"
												size = { 100% 100% }

												tooltipwidget = regiment_container_tooltip
											}

											background = {
												name = "image"
												visible = "[HiredTroopRegiment.IsLevies]"
												texture = "gfx/interface/illustrations/men_at_arms_big/levies.dds"
												margin = { -2 -2 }

												using = Mask_Rough_Edges
												alpha = 0.7
											}

											background = {
												name = "image"
												visible = "[Not(HiredTroopRegiment.IsLevies)]"
												texture = "[HiredTroopRegiment.GetMenAtArmsType.GetHorizontalImage]"
												margin = { -2 -2 }

												using = Mask_Rough_Edges
												alpha = 0.7
											}

											background = {
												using = Background_Frame
											}

											flowcontainer = {
												parentanchor = bottom|left
												direction = vertical
												margin = { 10 10 }
												ignoreinvisible = yes

												flowcontainer = {
													visible = "[HiredTroopRegiment.IsLevies]"
													spacing = 5

													icon = {
														parentanchor = vcenter
														size = { 30 30 }
														texture = "gfx/interface/icons/icon_soldier.dds"
													}

													text_single = {
														name = "soldiers_label"
														text = HIRED_TROOPS_VIEW_SOLDIER_COUNT
														default_format = "#high"
														using = Font_Size_Medium
													}
												}

												flowcontainer = {
													visible = "[Not(HiredTroopRegiment.IsLevies)]"
													spacing = 5

													icon = {
														size = { 30 30 }
														texture = "[HiredTroopRegiment.GetMenAtArmsType.GetIcon]"
													}

													text_single = {
														name = "soldiers_label"
														text = HIRED_TROOPS_VIEW_SOLDIER_COUNT
														default_format = "#high"
														using = Font_Size_Medium
													}
												}

												progressbar_standard = {
													name = "strength_bar"
													size = { 160 10 }
													value = "[HiredTroopRegiment.GetProgressBarRatio]"
												}
											}
										}
									}
								}
							}
						}
					}
				}

				vbox = {
					name = "leader_details"
					layoutpolicy_horizontal = expanding

					margin = { 15 5 }
					spacing = 5

					text_label_left = {
						name = "leader_label_ho"
						visible = "[HiredTroop.IsHolyOrder]"
						layoutpolicy_horizontal = expanding
						text = "HIRED_TROOPS_VIEW_HO_GRANDMASTER_LABEL"
						default_format = "#low"
					}

					text_label_left = {
						name = "leader_label_ma"
						visible = "[HiredTroop.IsMercenaryCompany]"
						layoutpolicy_horizontal = expanding
						text = "HIRED_TROOPS_VIEW_MC_CAPTAIN_LABEL"
						default_format = "#low"
					}

					text_label_left = {
						name = "leader_label_aa"
						visible = "[HiredTroop.IsAdministrativeArmy]"
						layoutpolicy_horizontal = expanding
						text = "HIRED_TROOPS_VIEW_AA_GOVERNOR_LABEL"
						default_format = "#low"
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 5

						portrait_head_small = {
							datacontext = "[HiredTroop.GetTitle.GetHolder]"
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							text_multi = {
								name = "leader_name"
								layoutpolicy_horizontal = expanding
								autoresize = yes
								max_width = 294
								text = "[HiredTroop.GetTitle.GetHolder.GetUIName]"
								default_format = "#high"
							}

							hbox = {
								name = "governor_skills"
								visible = "[HiredTroop.IsAdministrativeArmy]"
								datacontext = "[HiredTroop.GetTitle.GetHolder]"
								layoutpolicy_horizontal = expanding
								spacing = 5

								text_single = {
									text = ADMIN_WINDOW_THEME_GOVERNOR_EFFICIENCY
									tooltip = ADMIN_WINDOW_THEME_GOVERNOR_EFFICIENCY_TT
									default_format = "#low"
								}

								expand = {}
							}

							hbox = {
								name = "commander_leader_skills"
								visible = "[Or( Or( HiredTroop.IsHolyOrder, HiredTroop.IsMercenaryCompany ), HiredTroop.IsHireableRuler )]"
								layoutpolicy_horizontal = expanding
								spacing = 5
								margin_top = 5

								skill_icon_label = {
									name = "martial_skill"
									datacontext = "[HiredTroop.GetMartialSkillItem]"
								}

								hbox = {
									name = "commander_traits"
									datacontext = "[HiredTroop.GetTitle.GetHolder]"
									datamodel = "[HiredTroop.GetCommanderTraits]"

									item = {
										icon_trait = {
											blockoverride "icon_size"
											{
												size = { 30 30 }
											}

											blockoverride "glow_radius"
											{
												glow_radius = 4
											}
										}
									}
								}

								expand = {}
							}

							expand = {}
						}

						expand = {}
					}
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				margin = { 15 5 }
				margin_bottom = 10
				spacing = 5

				background = {
					using = Background_Area
				}

				vbox = {
					name = "hire_area"
					visible = "[Not(HiredTroop.IsHiredByPlayer)]"
					spacing = 5

					text_single = {
						name = "mercenary_hire_info"
						visible = "[HiredTroop.IsMercenaryCompany]"
						text = "HIRED_TROOPS_VIEW_MC_HIRE_INFO"
					}

					text_single = {
						visible = "[HiredTroop.IsHolyOrder]"
						name = "holy_order_hire_info"
						text = "HIRED_TROOPS_VIEW_HO_HIRE_INFO"
					}

					text_multi = {
						visible = "[And( HiredTroop.IsHired, HiredTroop.GetHolyOrder.IsPlayerPatron )]"
						text = "HIRED_TROOPS_HIRED_BY"
						autoresize = yes
						max_width = 280
					}

					text_single = {
						name = "hireable_ruler_hire_info"
						visible = "[HiredTroop.IsHireableRuler]"
						text = "HIRED_TROOPS_VIEW_HR_COST_INFO"
					}

					text_single = {
						name = "admin_cost_area"
						visible = "[And(HiredTroop.IsAdministrativeArmy, And(GetPlayer.IsIndependentRuler, Not(HiredTroop.IsHiredByPlayer)))]"
						text = "HIRED_TROOPS_REASSIGN_COST"
						tooltip = "[HiredTroop.GetAdminReassignCostTooltip]"
					}

					hbox = {
						spacing = 5

						button_primary = {
							name = "hire_button_non_interaction"
							visible = "[Not( Or( HiredTroop.IsHireableRuler, HiredTroop.IsAdministrativeArmy ) )]"
							onclick = "[HiredTroop.Hire]"
							enabled = "[HiredTroop.CanBeHired]"
							text = "HIRED_TROOPS_VIEW_HIRE"

							using = tooltip_ne
							tooltip = "[HiredTroop.GetHireTooltip]"
						}

						button_primary = {
							name = "hire_button_non_interaction_admin"
							visible = "[And(HiredTroop.IsAdministrativeArmy, GetPlayer.IsIndependentRuler)]"
							onclick = "[HiredTroop.Hire]"
							enabled = "[HiredTroop.CanBeHired]"
							text = "HIRED_TROOPS_REQUEST_AS_EMPEROR"
						
							using = tooltip_ne
							tooltip = "[HiredTroop.GetHireTooltip]"
						}

						button_primary = {
							name = "hire_button_interaction"
							visible = "[HiredTroop.IsHireableRuler]"
							datacontext = "[HiredTroop.GetHireableRuler]"

							onclick = "[Character.OpenPlayerInteraction( 'hire_laamp_mercenaries_interaction' )]"
							enabled = "[Character.IsPlayerInteractionValid( 'hire_laamp_mercenaries_interaction' )]"
							text = "HIRED_TROOPS_VIEW_HIRE"
							tooltip = "[Character.GetPlayerInteractionTooltip( 'hire_laamp_mercenaries_interaction' )]"

							using = tooltip_ne
						}

						button_standard = {
							name = "reassign_button"
							visible = "[HiredTroop.CanBeReassigned]"
							onclick = "[HiredTroopDetailView.OpenTitleTroopAssignmentView]"
							enabled = "[HiredTroop.CanBeHired]"
							tooltip = "[HiredTroop.GetHireTooltip]"

							text = "HIRED_TROOPS_VIEW_REASSIGN"
						}

						hbox = {
							visible = "[HiredTroop.IsAdministrativeArmy]"
							datacontext = "[HiredTroop.GetTitle.GetHolder]"

							button_standard = {
								name = "request_admin_troops_from_emperor"
								visible = "[And( Not(Character.IsPlayer), Character.IsPlayerInteractionShown('request_emperor_title_troops_interaction') )]"
								enabled = "[Character.IsPlayerInteractionValid('request_emperor_title_troops_interaction')]"
								onclick = "[Character.OpenPlayerInteractionWithTargetTitle('request_emperor_title_troops_interaction', HiredTroop.GetTitle)]"
								tooltip = "[Character.GetPlayerInteractionTooltip('request_emperor_title_troops_interaction')]"

								text = "HIRED_TROOPS_REQUEST_FROM_EMPEROR"
							}

							button_standard = {
								name = "hire_peer_admin_vassal"
								visible = "[Character.IsPlayerInteractionShown('request_ally_title_troops_interaction')]"
								enabled = "[Character.IsPlayerInteractionValid('request_ally_title_troops_interaction')]"
								onclick = "[Character.OpenPlayerInteractionWithTargetTitle('request_ally_title_troops_interaction', HiredTroop.GetTitle)]"
								tooltip = "[Character.GetPlayerInteractionTooltip('request_ally_title_troops_interaction')]"

								text = "HIRED_TROOPS_REQUEST_FROM_GOVERNOR"
							}
						}
					}
				}

				vbox = {
					visible = "[And(HiredTroop.IsAdministrativeArmy, HiredTroop.IsHiredByPlayer)]"
					margin_top = 10

					button_primary = {
						name = "return_button"
						visible = "[HiredTroop.GetTitle.CanReturnTitleMaaToOwner]"
						onclick = "[HiredTroop.GetTitle.ReturnTitleMaaToOwner]"

						text = "HIRED_TROOPS_VIEW_RETURN"
					}
				}

				button_primary = {
					name = "take_back_button"
					visible = "[Character.IsPlayerInteractionShown('request_title_troops_back_interaction')]"
					datacontext = "[HiredTroop.GetTitle.GetHolder]"
					
					enabled = "[Character.IsPlayerInteractionValid('request_title_troops_back_interaction')]"
					onclick = "[Character.OpenPlayerInteractionWithTargetTitle('request_title_troops_back_interaction', HiredTroop.GetTitle)]"
					tooltip = "[Character.GetPlayerInteractionTooltip('request_title_troops_back_interaction')]"

					text = "HIRED_TROOPS_VIEW_RECLAIM"
				}

				vbox = {
					name = "extend_area"
					visible = "[And(HiredTroop.IsMercenaryCompany, HiredTroop.IsHiredByPlayer)]"
					spacing = 5

					text_single = {
						name = "time_left"
						datacontext = "[HiredTroop.GetMercenaryCompany]"
						text = "HIRED_TROOPS_VIEW_HIRED_BY_ME"
						default_format = "#weak"
					}

					text_single = {
						name = "hire_info"
						text = "HIRED_TROOPS_VIEW_MC_HIRE_INFO"
						align = nobaseline
					}

					hbox = {
						spacing = 5

						button_primary = {
							datacontext = "[HiredTroop.GetMercenaryCompany]"
							tooltip = "RAISE_HIRED_TROOP"
							onclick = "[RaiseMercenaryCompany(MercenaryCompany.Self)]"
							text = "RAISE_HIRED_TROOP"
							enabled = "[And(MercenaryCompany.IsHiredByLocalPlayer, MercenaryCompany.CanBeRaised)]"
						}

						button_standard = {
							name = "extend_button"
							onclick = "[HiredTroop.Extend]"
							enabled = "[HiredTroop.CanBeExtended]"
							text = "HIRED_TROOPS_VIEW_MC_EXTEND"

							using = tooltip_ne
							tooltip = "[HiredTroop.GetExtendTooltip]"
						}
					}
				}
			}
		}
	}
}


types HiredTroopHolyOrderDetails
{
	type vbox_holy_order_troop_header_details = vbox
	{
		visible = "[HiredTroop.IsHolyOrder]"
		layoutpolicy_horizontal = expanding

		text_single = {
			text = "HIRED_TROOPS_VIEW_HO_NUM_HOLDINGS"
			layoutpolicy_horizontal = expanding
		}

		text_single = {
			text = "HIRED_TROOPS_VIEW_HO_CAPITAL"
			layoutpolicy_horizontal = expanding
		}

		text_multi = {
			text = "HIRED_TROOPS_VIEW_HO_PATRON"
			layoutpolicy_horizontal = expanding
			autoresize = yes
			max_width = 280
		}
	}
}

types HiredTroopMercenaryCompanyDetails
{
	type vbox_mercenary_company_header_details = vbox
	{
		visible = "[HiredTroop.IsMercenaryCompany]"
		layoutpolicy_horizontal = expanding

		text_single = {
			name = "culture_text"
			layoutpolicy_horizontal = expanding
			text = "HIRED_TROOPS_VIEW_MC_CULTURE"
			default_format = "#high"
			using = Font_Size_Medium
		}

		text_single = {
			layoutpolicy_horizontal = expanding
			text = "HIRED_TROOPS_VIEW_MC_CAPITAL"
			default_format = "#low"
		}
	}
}

types HiredTroopAdministrativeArmyDetails
{
	type vbox_administrative_army_header_details = vbox
	{
		visible = "[HiredTroop.IsAdministrativeArmy]"
		layoutpolicy_horizontal = expanding

		text_single = {
			name = "culture_text"
			layoutpolicy_horizontal = expanding
			text = "HIRED_TROOPS_VIEW_AA_HEADER_NAME"
			default_format = "#high"
			max_width = 350
			using = Font_Size_Medium
		}

		text_multi = {
			name = province_army_status
			layoutpolicy_horizontal = expanding

			datacontext = "[HiredTroop.GetAdministrativeTitle]"
			text = "TITLE_TROOPS_MAPMODE_TOOLTIP_STATUS"
			default_format = "#low"
			autoresize = yes
			max_width = 350
		}
	}
}

types HiredTroopHireableRulerDetails
{
	type vbox_hireable_ruler_header_details = vbox
	{
		visible = "[HiredTroop.IsHireableRuler]"
		layoutpolicy_horizontal = expanding

		text_single = {
			name = "culture_text"
			layoutpolicy_horizontal = expanding
			text = "HIRED_TROOPS_VIEW_HR_NAME"
			default_format = "#high"
			using = Font_Size_Medium
		}

		text_single = {
			layoutpolicy_horizontal = expanding
			text = "HIRED_TROOPS_VIEW_HR_CAPITAL"
			default_format = "#low"
		}
	}
}
