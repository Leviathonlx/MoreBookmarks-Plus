types Achievements
{
	type achievement_spacer_horizontal = widget {
		size = { 5 0 }
	}
	type achievement_spacer_vertical = widget {
		size = { 0 3 }
	}
}

window = {
	name = "achievement_popup_window"
	alwaystransparent = yes
	scissor = no
	movable = no
	size = { 300 500 }
	widgetanchor = top|left
	focuspolicy = all
	block "popup_window"
	{}


	vbox = {
		restrictparent_min = yes
		block "popup_window_layout"
		{}

		dynamicgridbox = {
			alwaystransparent = yes
			datamodel = "[AchievementPopup.AccessJustUnlockedAchievements]"
			layoutpolicy_vertical = expanding
			block "popups_gridbox"
			{}

			item = {
				button = {
					size = { 300 64 }
					maximumsize = { 300 64 }
					visible = yes
					focuspolicy = click
					onclick = "[GUIAchievement.OnClick]"
					block "achievement_unlock_popup"
					{}
					hbox = {
						margin = { 5 5 }
						
						using = Window_Background_Subwindow
					
						icon = {
							texture = "[GUIAchievement.AccessTexture]"
							size = { 64 64 }
						}
						
						spacer = {
							size = { 5 5 }
						}
						
						state = {
							name = on_create
							duration = 0.5
							trigger_on_create = yes
							alpha = 0
							delay = 5
							on_finish = "[GUIAchievement.Remove]"
							block "popup_on_create_state"
							{}
						}

						vbox = {
							margin = { 0 3 }
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							text_single = {
								text = "ACHIEVEMENT_UNLOCKED"
								margin_right = 3
								autoresize = no
								layoutpolicy_horizontal = expanding
								default_format = "#low"
								minimumsize = { -1 10 }
								block "achievement_unlocked_text"
								{}
							}

							text_single = {
								text = "[GUIAchievement.GetName]"
								layoutpolicy_horizontal = expanding
								minimumsize = { -1 16 }
								default_format = "#high"
								autoresize = no
								using = Font_Size_Medium
								align = nobaseline
								margin_right = 3
								block "achievement_name"
								{}
							}
						}
					}
				}
			}
		}
	}
}