window = {
	name = "title_appointment"
	movable = no
	allow_outside = yes
	layer = windows_layer

	using = Window_Size_Sidebar
	using = Window_Background_Sidebar

	state = {
		name = _show
		using = Animation_FadeIn_Standard
		using = Sound_WindowShow_Standard

		on_start = "[GetVariableSystem.Set( 'hide_bottom_left_HUD', 'true' )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Standard
		using = Sound_WindowHide_Standard

		on_start = "[GetVariableSystem.Clear( 'hide_bottom_left_HUD' )]"
	}

	vbox = {
		layoutpolicy_horizontal = expanding
		using = Window_Margins_Sidebar
		datacontext = "[SuccessionAppointmentWindow.GetTitle]"

		hbox = {
			layoutpolicy_horizontal = expanding

			background = {
				using = Background_Header_Tall
			}

			coa_title_big_crown = {}

			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						margin_top = 20

						text_single = {
							layoutpolicy_horizontal = expanding
							text = "[Title.GetHolder.GetTopLiege.GetPrimaryTitle.GetName]"
							default_format = "#weak"
							max_width = 350
						}

						text_single = {
							layoutpolicy_horizontal = expanding
							text = "TITLE_APPOINTMENT_HEADER"
							max_width = 350
						}

						text_single = {
							layoutpolicy_horizontal = expanding
							text = "TITLE_APPOINTMENT_LAW"
							max_width = 350
						}

						text_single = {
							layoutpolicy_horizontal = expanding
							text = "TITLE_APPOINTMENT_CURRENT_HOLDER"
							max_width = 350
						}

						expand = {}
					}

					vbox = {
						layoutpolicy_vertical = expanding

						buttons_window_control = {
							blockoverride "button_close"
							{
								onclick = "[SuccessionAppointmentWindow.Close]"
							}

							blockoverride "button_back"
							{
								visible = "[HasViewHistory]"
								onclick = "[OpenFromViewHistory]"
								tooltip = "[GetViewHistoryTooltip]"
							}

							blockoverride "button_me"
							{
								onclick = "[DefaultOnCharacterClick( GetPlayer.GetID )]"
							}
						}

						expand = {}
					}
				}
			}
		}

		scrollbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "scrollbox_content" {

				vbox_character_list = {
					datacontext = "[SuccessionAppointmentWindow.GetCandidates]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					blockoverride "skill_sort_buttons" {}

					blockoverride "container_implementation" {
						fixedgridbox = {
							name = "characters_grid"
							datamodel = "[CharacterSelectionList.GetList]"
							layoutpolicy_horizontal = expanding
							addcolumn = 522
							addrow = 162

							item = {
								widget = {
									size = { 522 140 }
									datacontext = "[CharacterListItem.GetCharacter]"

									vbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding
										margin = { 8 4 }

										background = {
											using = Background_Area
										}

										background = {
											visible = no # TODO: visible if character is part of your house
											spriteType = Corneredstretched
											spriteborder = { 15 15 }
											using = Color_Blue
											alpha = 0.6
											texture = "gfx/interface/component_masks/mask_frame.dds"

											margin = { 0 4 }
											margin_left = 10

											modify_texture = {
												blend_mode = alphamultiply
												alpha = 0.9
												mirror = horizontal
												texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
											}

											modify_texture = {
												mirror = vertical
												blend_mode = alphamultiply
												texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
											}
										}

										background = {
											visible = no # TODO: visible if character is part of your house
											spriteType = Corneredtiled
											using = Color_Blue
											alpha = 0.6
											texture = "gfx/interface/component_masks/patterns/mask_pattern_02.dds"

											margin = { 0 4 }
											margin_left = 10
											margin_right = 50

											modify_texture = {
												blend_mode = alphamultiply
												alpha = 0.9
												mirror = horizontal
												texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
											}

											modify_texture = {
												spriteType = Corneredtiled
												spriteborder = { 15 15 }
												blend_mode = alphamultiply
												texture = "gfx/interface/component_masks/mask_texture_01.dds"
											}

											modify_texture = {
												mirror = vertical
												blend_mode = alphamultiply
												texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
											}
										}

										# Ranking and Name
										hbox = {
											spacing = 12
											layoutpolicy_horizontal = expanding
											margin = { 12 4 }
											background = {
												using = Background_Area_ExtraDark
												margin_left = 8

												modify_texture = {
													blend_mode = alphaMultiply
													texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
												}
											}

											text_single = {
												text = TITLE_APPOINTMENT_RANK
												tooltip = "TITLE_APPOINTMENT_RANK_TOOLTIP"
												default_format = "#T"
												align = nobaseline
											}

											text_single = {
												layoutpolicy_horizontal = expanding
												text = "[Character.GetUINameNoTooltip|U]"
												max_width = 344
												align = nobaseline
											}
											expand = {}
										}

										hbox = {
											layoutpolicy_horizontal = expanding
											spacing = 4

											portrait_head = {}

											hbox = {
												layoutpolicy_horizontal = expanding
												datacontext = "[Character.GetHouse]"

												coa_house_medium = {

													powerful_family_bonus = {
														parentanchor = bottom|right
													}
												}

												vbox = {
													layoutpolicy_horizontal = expanding
													margin_left = 12

													text_single = {
														layoutpolicy_horizontal = expanding
														text = "[Character.GetRelationToString( GetPlayer )]"
														tooltip = "[Character.GetRelationToString( GetPlayer )]"
														max_width = 230
													}

													vbox_candidate_details = {
														layoutpolicy_horizontal = expanding
													}
												}
											}

											button_support_candidacy = {}
											spacer = {
												size = { 8 0 }
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}

		widget = {
			name = "player_candidate"
			layoutpolicy_horizontal = expanding
			datacontext = "[SuccessionAppointmentWindow.GetTopCandidate]"
			visible = "[SuccessionAppointmentWindow.HasTopCandidate]"

			size = { 280 170}

			vbox = {
				margin = { 8 12 }
				margin_right = 24
				datacontext = "[CharacterListItem.GetCharacter]"

				vbox = {
					margin = { 12 0 }
					layoutpolicy_horizontal = expanding

					background = {
						using = Background_Area
						margin_bottom = 30
						margin_left = -8
						margin_right = 8
					}

					hbox = {
						spacing = 4
						margin = { 12 4 }

						layoutpolicy_horizontal = expanding

						background = {
							using = Background_Area_Dark

							modify_texture = {
								blend_mode = alphaMultiply
								texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
							}
						}

						text_single = {
							text = "TITLE_APPOINTMENT_SUCCESSION_TOP_CANDIDATE"
							margin_right = 8
							align = nobaseline
						}

						text_single = {
							text = "TITLE_APPOINTMENT_RANK"
							tooltip = "TITLE_APPOINTMENT_RANK_TOOLTIP"
							default_format = "#T"
							align = nobaseline
						}

						text_single = {
							text = "[Character.GetShortUINameNoTooltip]"
							align = nobaseline
						}

						expand = {}
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						margin_left = 20

						vbox = {
							layoutpolicy_vertical = expanding

							vbox_candidate_details = {
								layoutpolicy_horizontal = expanding
							}

							expand = {}
						}

						vbox = {
							layoutpolicy_vertical = expanding
							datacontext = "[Character.GetHouse]"
							margin_left = 12

							coa_house_medium = {
								powerful_family_bonus = {
									parentanchor = bottom|right
								}
							}
						}

						expand = {}
						button_support_candidacy = {
							datacontext = "[CharacterListItem.GetCharacter]"
						}
					}
				}
			}

			portrait_shoulders = {
				datacontext = "[CharacterListItem.GetCharacter]"
				parentanchor = center
				blockoverride "coa" {}
				position = { 112 -4 }
			}
		}
	}


	window_character_filter = {
		datacontext = "[SuccessionAppointmentWindow.GetCandidates]"
		position = { 600 50 }

		blockoverride "addition_filter" {
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('range_filter')]"
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding

				datacontext = "[CharacterSelectionList.GetCategory('personal_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('ruler_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('adult_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('gender_filter')]"
					}

					divider = {
						layoutpolicy_horizontal = expanding
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('married_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('imprisoned_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('hook_filter')]"
					}
				}
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('membership_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('religion_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('culture_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('dynasty_house_filter')]"
					}
				}
			}
		}
	}
}

types TitleAppointment
{
	type vbox_candidate_details = vbox
	{
		maximumsize = { 260 -1 }

		text_single = {
			layoutpolicy_horizontal = expanding
			max_width = 240
			margin_bottom = 4
			text = "TITLE_APPOINTMENT_SUCCESSION_SCORE"

			tooltipwidget = {
				widget_value_breakdown_tooltip = {
					datacontext = "[SuccessionAppointmentWindow.GetSuccessionScoreBreakdown( Character.Self )]"
				}
			}
		}

		text_single = {
			layoutpolicy_horizontal = expanding
			text = "TITLE_APPOINTMENT_GOVERNOR_EFFICIENCY"
			tooltip = "ADMIN_WINDOW_THEME_GOVERNOR_EFFICIENCY_VALID_TT"
			max_width = 240
		}
	}

	type button_support_candidacy = button_round  {
		name = "support_candidacy"
		size = { 48 48 }
		onclick = "[Character.OpenPlayerInteractionWithTargetTitle( 'influence_candidacy_interaction', Title.Self )]"
		enabled = "[Character.IsPlayerInteractionValid( 'influence_candidacy_interaction' )]"
		tooltip = "[Character.GetPlayerInteractionTooltip( 'influence_candidacy_interaction' )]"

		button_promote_candidate = {
			alwaystransparent = yes
			parentanchor = center
			position = { 1 -1 }
			size = { 32 32 }
		}
	}
}
