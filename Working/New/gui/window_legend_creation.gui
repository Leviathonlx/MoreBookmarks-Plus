window = {
	name = "legend_creation"
	datacontext = "[LegendCreationWindow.AccessPotentialProtagonists]"

	layer = middle
	parentanchor = center
	allow_outside = yes

	using = Window_Movable
	using = Window_Background
	using = Window_Decoration
	using = Window_Size_CharacterList

	state = {
		name = _show
		using = Animation_FadeIn_Quick
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
	}

	vbox = {
		using = Window_Margins

		datacontext = "[LegendCreationWindow.GetSeed]"
		datacontext = "[GetPlayer]"

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "CREATE_LEGEND_TITLE"
			}
			blockoverride "button_close"
			{
				onclick = "[LegendCreationWindow.Close]"
			}
		}

		text_multi = {
			layoutpolicy_horizontal = expanding
			margin = { 4 4 }
			autoresize = yes
			max_width = 650
			text = "CREATE_LEGEND_DESC"
			align = center
		}

		fixed_gridbox_character_list = {
			name = "invited_characters"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "button_texture"
			{
				background = {
					texture = "gfx/interface/buttons/button_entry_characterlist.dds"
					spriteType = Corneredtiled
					margin = { 10 0 }
					using = Color_Orange
					alpha = 0
					using = Mask_Rough_Edges
				}
			}

			blockoverride "button"
			{
				down = "[ObjectsEqual( CharacterListItem.GetCharacter, LegendCreationWindow.GetProtagonist.Self )]"
			}

			blockoverride "character_gridbox"
			{
				addcolumn = 630
				addrow = 105
				datamodel_reuse_widgets = yes
			}

			blockoverride "divider" {}

			blockoverride "item_size"
			{
				size = { 630 110 }
			}

			blockoverride "sort_buttons"
			{
				hbox_list_sort_buttons = {
					layoutpolicy_horizontal = expanding

					blockoverride "margins" {
						margin_left = 20
						margin_right = 30
						margin_top = 5
						spacing = 5
					}
				}
			}
		}

		vbox = {
			name = "completion_rewards"
			widgetid = "completion_rewards"
			layoutpolicy_horizontal = expanding

			using = Create_Resetting_Fold_Out

			button_expandable_toggle_field = {
				blockoverride "text"
				{
					text = "LEGEND_REWARDS"
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding

				visible = "[PdxGuiFoldOut.IsUnfolded]"

				oncreate = "[BindTabsContext]"
				oncreate = "[PdxGuiTabs.SetResetOnShown( '(bool)no')]"
				oncreate = "[PdxGuiTabs.AddTab( 'famed' )]"
				oncreate = "[PdxGuiTabs.AddTab( 'illustrious' )]"
				oncreate = "[PdxGuiTabs.AddTab( 'mythical' )]"
				oncreate = "[PdxGuiTabs.ListenFor( 'seed_quality' )]"

				hbox_tab_buttons = {
					name = "quality_tabs"

					blockoverride "tab_name"
					{
						text = "[PdxGuiTabItem.LocalizeTab( 'legend_quality' )]"
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					
					scrollbox = {
						name = "effects_scrollarea"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						size = { 0 220}

						blockoverride "scrollbox_content"
						{
							text_multi = {
								layoutpolicy_horizontal = expanding
								autoresize = yes
								max_width = 630
								text = "[LegendCreationWindow.GetCompletionDesc( PdxGuiTabs.GetActiveTab.GetKey )]"
							}
						}
					}
				}
			}
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			margin = { 16 16 }
			spacing = 8

			background = {
				using = Background_Area
			}

			legend_seed_cost_hbox = {}

			text_multi = {
				layoutpolicy_horizontal = expanding
				margin = { 2 2 }
				autoresize = yes
				max_width = 650
				text = "CREATE_LEGEND_WARNING_DESC"
				align = center
			}

			button_primary = {
				text = "CREATE"
				enabled = "[LegendCreationWindow.CanCreate]"
				tooltip_when_disabled = "[LegendCreationWindow.GetCanCreateDesc]"

				onclick = "[LegendCreationWindow.Create]"
				onclick = "[LegendCreationWindow.Close]"
			}
		}
	}

	window_character_filter = {
		parentanchor = top|left
		widgetanchor = left
		position = { -20 20 }

		blockoverride "addition_filter" {
			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('age_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('adult_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('age_filter')]"
					}
				}
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('personal_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('alive_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('gender_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('culture_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('religion_filter')]"
					}
				}
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('politics_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('dynasty_house_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('ruler_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('hostage_filter')]"
					}
				}
			}
		}
	}
}
