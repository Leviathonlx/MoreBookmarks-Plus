window = {
	name = "potential_faction_member_window"
	position = { -590 110 }
	movable = no
	resizable = no
	parentanchor = right
	layer = middle
	allow_outside = yes

	using = Window_Background
	using = Window_Decoration_Spike
	using = Window_Size_CharacterList_Small

	state = {
		name = _show
		using = Animation_FadeIn_Quick

		position_x = -590

	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick

		position_x = -560
	}

	vbox = {
		using = Window_Margins

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "POTENTIAL_FACTION_MEMBERS_HEADER"
			}

			blockoverride "button_close"
			{
				onclick = "[PotentialFactionMemberWindow.Close]"
			}
		}

		vbox_character_list = {
			datacontext = "[PotentialFactionMemberWindow.GetListItems]"
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding

			blockoverride "skill_sort_buttons" {}
			blockoverride "item_size" {
				size = { 480 110 }
				layoutpolicy_horizontal = expanding
			}

			blockoverride "button_content"
			{
				vbox = {
					margin = { 10 5 }

					text_single = {
						name = "name"
						layoutpolicy_horizontal = expanding
						autoresize = no
						text = "[Character.GetUINameNoTooltip]"
						using = Font_Size_Medium
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 8
						margin_top = 3

						text_single = {
							name = "opinion_liege"
							visible = "[Not(Character.GetLiege.IsLocalPlayer)]"
							text = "CHARACTER_WINDOW_OPINION_OF_LIEGE"
							align = nobaseline
						}


						portrait_opinion = {
							name = "liege_opinion"
							visible = "[Not(Character.GetLiege.IsLocalPlayer)]"
						
							blockoverride "opinion_text"
							{
								text = "[Character.GetOpinionOf( Character.GetLiege  )|=]"
								fonttintcolor = "[Character.GetOpinionOfTint( Character.GetLiege  )]"
							}

							blockoverride "ott_heading_text"
							{
								text = "[Character.GetOpinionHeadingText( Character.GetLiege  )]"
							}

							blockoverride "ott_opinion_value_text"
							{
								text = "[Character.GetOpinionOf( Character.GetLiege  )|=]"
								fonttintcolor = "[Character.GetOpinionOfTint( Character.GetLiege  )]"
							}

							blockoverride "ott_opinion_breakdown_text"
							{
								text = "[Character.GetOpinionBreakdownText( Character.GetLiege  )]"
							}
						}

						expand = {}

					}
					
					hbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						hbox = {
							tooltip = "[CharacterListItem.GetText('military_strength_tooltip')]"
							layoutpolicy_horizontal = expanding
							spacing = 5

							icon = {
								name = "icon_combat_strength"
								size = { 30 30 }
								texture = "gfx/interface/icons/icon_soldier.dds"
							}

							text_single = {
								name = "military_total_strength"
								layoutpolicy_horizontal = expanding
								text = "[CharacterListItem.GetInt('military_strength')]"
								default_format = "#high"
								using = Font_Size_Big
							}
						}

						text_single = {
							name = "status"
							text = "[CharacterListItem.GetText('status')]"
						}
					}
				}
			}
		}
	}

	window_character_filter = {
		datacontext = "[PotentialFactionMemberWindow.GetListItems]"
		blockoverride "addition_filter" {
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('religion_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('culture_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('hook_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('imprisoned_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('adult_filter')]"
			}
		}
	}
}
