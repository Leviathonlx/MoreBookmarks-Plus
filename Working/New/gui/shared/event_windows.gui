####################################
# Event window types and templates #
####################################

types Events
{
	## Dimmer - Faint temporary overlay to bring focus attention on the event window
	type event_window_dimmer_widget = widget {
		name = "event_focus_dimmer"
		visible = "[Not(GameHasMultiplePlayers)]"
		size = { 100% 100% }

		icon = {
			visible = "[Not(GetVariableSystem.Exists( 'event_window_mouse_leave'))]"
			parentanchor = center
			size = { 200% 200% }
			alwaystransparent = yes
			texture = "gfx/interface/component_masks/mask_fade_circle.dds"
			color = { 0.1 0.1 0.1 1 }
			alpha = 0

			state = {
				name = appear
				trigger_on_create = yes
				delay = 0.2
				using = Animation_Curve_Default
				alpha = 0.6
				duration = 0.8
			}

			state = {
				name = _hide
				using = Animation_Curve_Default
				duration = 3
				alpha = 0
			}
		}
	}

	type event_portrait_status_icons_left = container {
		flowcontainer = {
			ignoreinvisible = yes
			direction = horizontal

			coa_realm_small_crown = {
				visible = "[Character.HasLandedTitles]"
				parentanchor = bottom
			}

			portrait_status_icons = {
				parentanchor = bottom
				margin_bottom = 5
			}
		}
	}

	type event_portrait_status_icons_right = container {
		flowcontainer = {
			ignoreinvisible = yes
			direction = horizontal

			portrait_status_icons = {}

			coa_realm_small_crown = {
				visible = "[Character.HasLandedTitles]"
			}
		}
	}

	type button_eventoption = button_event_standard
	{
		name = "event_option_button"
		size = { 500 36 }
		enabled = "[EventOption.IsValid]"

		default_clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_icon_select"
		onclick = "[EventOption.Select]"
		clicksound = "[EventOption.GetClickSound]"

		block "onmousehierarchy_callbacks" {
			onmousehierarchyenter = "[EventOption.OnEnter]"
			onmousehierarchyleave = "[EventOption.OnLeave]"
		}

		icon = {
			texture = "gfx/interface/buttons/button_event.dds"
			alpha = 1
			spriteType = Corneredtiled
			spriteborder = { 3 3 }
			framesize = { 249 78 }
			size = { 100% 100% }

			modify_texture = {
				name = "mask"
				texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
				spriteType = Corneredtiled
				spriteborder_left = 40
				spriteborder_right = 40
				blend_mode = alphamultiply
			}
		}

		# Trick to not have the option text steal tooltips from the trait/skill grid
		hbox = {
			tooltip = "[EventOption.GetTooltip]"
			tooltip_visible = "[Not( StringIsEmpty( EventOption.GetTooltip ) )]"

			block "option_tooltip_position"
			{
				using = tooltip_ws
				tooltip_offset = { -80 0 }
			}

			# Wider tooltips for the effects
			tooltipwidget = {
				using = DefaultTooltipWidget
			}
		}

		modify_texture = {
			name = "mask"
			texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
			spriteType = Corneredtiled
			spriteborder_left = 40
			spriteborder_right = 40
			blend_mode = alphamultiply
		}

		animation_glow_event = {
			name = "special_option"
			visible = "[And(EventOption.HasFlag('special'), Not(EventOption.HasFlag('dangerous')))]"
		}

		animation_glow_event = {
			name = "dangerous_option"
			visible = "[EventOption.HasFlag('dangerous')]"
			using = Color_Red
		}

		### BUTTON CONTENT ####
		hbox = {
			margin = { 5 0 }

			hbox = {
				fixedgridbox = {
					name = "reason_icons"
					datamodel = "[EventOption.Reasons]"
					addcolumn = 34
					addrow = 34
					flipdirection = yes

					item = {
						container = {
							icon = {
								name = "trait_icon"
								datacontext = "[ReasonItem.GetTrait]"

								visible = "[ReasonItem.IsTrait]"
								alwaystransparent = yes

								texture = "[Trait.GetIcon(GetPlayer)]"
								size = { 34 34 }

								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_TRAIT"
								using = tooltip_nw
							}

							icon = {
								name = "skill_icon"
								datacontext = "[ReasonItem.GetSkillItem]"

								visible = "[ReasonItem.IsSkill]"
								alwaystransparent = yes

								texture = "gfx/interface/icons/icon_skills.dds"
								size = { 34 34 }
								framesize = { 60 60 }
								frame = "[SkillItem.GetFrame]"

								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_SKILL"
								using = tooltip_ws
							}

							icon = {
								name = "dread_icon"
								visible = "[ReasonItem.IsFlag( 'dread' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/icon_dread.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_DREAD"
							}

							icon = {
								name = "activity_intent_icon"
								visible = "[ReasonItem.IsFlag( 'activity_intent' )]"
								size = { 34 34 }
								texture = "[GetPlayer.GetInvolvedActivity.GetType.GetIcon]"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_ACTIVITY_INTENT"
							}

							icon = {
								name = "influence_icon"
								visible = "[ReasonItem.IsFlag( 'influence_level')]"
								size = { 34 34 }
								texture = "[GetPlayer.GetInfluenceLevelTexture]"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_INFLUENCE_LEVEL"
							}

							icon = {
								name = "prestige_icon"
								visible = "[ReasonItem.IsFlag( 'prestige_level' )]"
								size = { 34 34 }
								texture = "[GetPlayer.GetPrestigeLevelTexture]"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_PRESTIGE_LEVEL"
							}

							icon = {
								name = "piety_icon"
								visible = "[ReasonItem.IsFlag( 'piety_level' )]"
								size = { 34 34 }
								texture = "[GetPlayer.GetPietyLevelTexture]"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_PIETY_LEVEL"
							}

							icon = {
								name = "faith_icon"
								visible = "[ReasonItem.IsFlag( 'faith' )]"
								size = { 34 34 }
								texture = "[GetPlayer.GetFaith.GetIcon]"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_FAITH"
							}

							icon = {
								name = "friendship_icon"
								visible = "[ReasonItem.IsFlag( 'friend' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/portraits/friend.dds"
								frame = 1
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_FRIEND"
							}

							icon = {
								name = "hook_icon"
								visible = "[ReasonItem.IsFlag( 'hook' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/hook.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_HOOK"
							}

							icon = {
								name = "relation_positive"
								visible = "[ReasonItem.IsFlag( 'relation_positive' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/message_feed/friend.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_POSITIVE_RELATION"
							}

							icon = {
								name = "scheme_success_icon"
								visible = "[ReasonItem.IsFlag( 'gives_scheme_success' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/schemes/icon_scheme_success.dds"
								tooltip = "EVENT_WINDOW_OPTION_GIVES_SCHEME_SUCCESS"
							}

							icon = {
								name = "scheme_phase_duration_icon"
								visible = "[ReasonItem.IsFlag( 'gives_scheme_phase_duration' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/schemes/icon_scheme_speed.dds"
								tooltip = "EVENT_WINDOW_OPTION_GIVES_SCHEME_PHASE_DURATION"
							}

							icon = {
								name = "scheme_success_agents_icon"
								visible = "[ReasonItem.IsFlag( 'give_me_success_agents' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/schemes/icon_scheme_success.dds"
								tooltip = "EVENT_WINDOW_OPTION_AGENTS_SUCCESS"
							}

							icon = {
								name = "scheme_phase_duration_agents_icon"
								visible = "[ReasonItem.IsFlag( 'give_me_speed_agents' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/schemes/icon_scheme_speed.dds"
								tooltip = "EVENT_WINDOW_OPTION_AGENTS_SPEED"
							}

							icon = {
								name = "scheme_secrecy_agents_icon"
								visible = "[ReasonItem.IsFlag( 'give_me_secrecy_agents' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/schemes/icon_secrecy.dds"
								tooltip = "EVENT_WINDOW_OPTION_AGENTS_SECRECY"
							}

							icon = {
								name = "scheme_balanced_agents_icon"
								visible = "[ReasonItem.IsFlag( 'give_me_balanced_agents' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/schemes/icon_balanced_approach.dds"
								tooltip = "EVENT_WINDOW_OPTION_AGENTS_BALANCED"
							}

							icon = {
								name = "castle_holding_icon"
								visible = "[ReasonItem.IsFlag( 'castle_holding' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/icon_holding_castle.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_CASTLE"
							}

							icon = {
								name = "city_holding_icon"
								visible = "[ReasonItem.IsFlag( 'city_holding' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/icon_holding_city.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_CITY"
							}

							icon = {
								name = "church_holding_icon"
								visible = "[ReasonItem.IsFlag( 'church_holding' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/icon_holding_church.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_CHURCH"
							}

							icon = {
								name = "purpose_mercenaries_icon"
								visible = "[ReasonItem.IsFlag( 'purpose_mercenaries' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/government_types/landless_adventurer_government.dds"
								tooltip = "EVENT_WINDOW_OPTION_PURPOSE_MERCENARIES"
							}

							icon = {
								name = "purpose_wanderers_icon"
								visible = "[ReasonItem.IsFlag( 'purpose_wanderers' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/government_types/landless_adventurer_government.dds"
								tooltip = "EVENT_WINDOW_OPTION_PURPOSE_WANDERERS"
							}

							icon = {
								name = "purpose_scholars_icon"
								visible = "[ReasonItem.IsFlag( 'purpose_scholars' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/government_types/landless_adventurer_government.dds"
								tooltip = "EVENT_WINDOW_OPTION_PURPOSE_SCHOLARS"
							}

							icon = {
								name = "purpose_explorers_icon"
								visible = "[ReasonItem.IsFlag( 'purpose_explorers' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/government_types/landless_adventurer_government.dds"
								tooltip = "EVENT_WINDOW_OPTION_PURPOSE_EXPLORERS"
							}

							icon = {
								name = "purpose_brigands_icon"
								visible = "[ReasonItem.IsFlag( 'purpose_brigands' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/government_types/landless_adventurer_government.dds"
								tooltip = "EVENT_WINDOW_OPTION_PURPOSE_BRIGANDS"
							}

							icon = {
								name = "purpose_legitimists_icon"
								visible = "[ReasonItem.IsFlag( 'purpose_legitimists' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/government_types/landless_adventurer_government.dds"
								tooltip = "EVENT_WINDOW_OPTION_PURPOSE_LEGITIMISTS"
							}

							icon = {
								name = "purpose_brigands_and_mercenaries_icon"
								visible = "[ReasonItem.IsFlag( 'purpose_brigands_and_mercenaries' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/government_types/landless_adventurer_government.dds"
								tooltip = "EVENT_WINDOW_OPTION_PURPOSE_BRIGANDS_AND_MERCENARIES"
							}

							icon = {
								name = "purpose_explorers_and_wanderers_icon"
								visible = "[ReasonItem.IsFlag( 'purpose_explorers_and_wanderers' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/government_types/landless_adventurer_government.dds"
								tooltip = "EVENT_WINDOW_OPTION_PURPOSE_EXPLORERS_AND_WANDERERS"
							}

							icon = {
								name = "purpose_legitimists_and_scholars_icon"
								visible = "[ReasonItem.IsFlag( 'purpose_legitimists_and_scholars' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/government_types/landless_adventurer_government.dds"
								tooltip = "EVENT_WINDOW_OPTION_PURPOSE_LEGITIMISTS_AND_SCHOLARS"
							}

							icon = {
								name = "high_almoner_icon"
								visible = "[ReasonItem.IsFlag( 'high_almoner' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/high_almoner_court_position.dds"
								tooltip = "EVENT_WINDOW_OPTION_HIGH_ALMONER"
							}

							icon = {
								name = "antiquarian_icon"
								visible = "[ReasonItem.IsFlag( 'antiquarian' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/antiquarian_court_position.dds"
								tooltip = "EVENT_WINDOW_OPTION_ANTIQUARIAN"
							}
							icon = {
								name = "have_second_icon"
								visible = "[ReasonItem.IsFlag( 'have_second' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/second_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_HAVE_SECOND"
							}
							icon = {
								name = "have_quartermaster_icon"
								visible = "[ReasonItem.IsFlag( 'have_quartermaster' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/quartermaster_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_HAVE_QUARTERMASTER"
							}
							icon = {
								name = "have_armourer_icon"
								visible = "[ReasonItem.IsFlag( 'have_armourer' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/armorer_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_HAVE_ARMOURER"
							}
							icon = {
								name = "have_chief_forager_icon"
								visible = "[ReasonItem.IsFlag( 'have_chief_forager' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/chief_forager_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_HAVE_CHIEF_FORAGER"
							}
							icon = {
								name = "have_master_thief_icon"
								visible = "[ReasonItem.IsFlag( 'have_master_thief' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/master_thief_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_HAVE_MASTER_THIEF"
							}
							icon = {
								name = "have_head_groom_icon"
								visible = "[ReasonItem.IsFlag( 'have_head_groom' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/head_groom_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_HAVE_HEAD_GROOM"
							}
							icon = {
								name = "have_huntperson_icon"
								visible = "[ReasonItem.IsFlag( 'have_huntperson' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/huntperson_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_HAVE_HUNTPERSON"
							}
							icon = {
								name = "have_witness_icon"
								visible = "[ReasonItem.IsFlag( 'have_witness' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/witness_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_HAVE_WITNESS"
							}
							icon = {
								name = "have_camp_cook_icon"
								visible = "[ReasonItem.IsFlag( 'have_camp_cook' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/camp_cook_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_HAVE_CAMP_COOK"
							}
							icon = {
								name = "have_master_bard_icon"
								visible = "[ReasonItem.IsFlag( 'have_master_bard' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/master_bard_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_HAVE_MASTER_BARD"
							}
							icon = {
								name = "have_stooge_icon"
								visible = "[ReasonItem.IsFlag( 'have_stooge' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/stooge_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_HAVE_STOOGE"
							}
							icon = {
								name = "have_master_of_arms_icon"
								visible = "[ReasonItem.IsFlag( 'have_master_of_arms' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/master_of_arms_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_HAVE_MASTER_OF_ARMS"
							}
							icon = {
								name = "have_master_of_spoils_icon"
								visible = "[ReasonItem.IsFlag( 'have_master_of_spoils' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/master_of_spoils_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_HAVE_MASTER_OF_SPOILS"
							}

							icon = {
								name = "unlocked_armorer_icon"
								visible = "[ReasonItem.IsFlag( 'unlocked_armorer' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/armorer_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_UNLOCKED_ARMORER"
							}

							icon = {
								name = "many_followers_icon"
								visible = "[ReasonItem.IsFlag( 'many_followers' )]"
								size = { 34 34 }
								texture = "gfx/interface/skinned/hud_maintab/maintab_court.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_MANY_FOLLOWERS"
							}

							icon = {
								name = "piety_amount_icon"
								visible = "[ReasonItem.IsFlag( 'piety' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/event_types/type_faith.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_PIETY"
							}

							icon = {
								name = "gallant_icon"
								visible = "[ReasonItem.IsFlag( 'gallant' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/traits/gallant.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_GALLANT"
							}

							icon = {
								name = "knight_errant_icon"
								visible = "[ReasonItem.IsFlag( 'knight_errant' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/traits/knight_of_the_swan.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_KNIGHT_ERRANT"
							}

							icon = {
								name = "unlocked_master_of_arms_icon"
								visible = "[ReasonItem.IsFlag( 'unlocked_master_of_arms' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/master_of_arms_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_UNLOCKED_MASTER_OF_ARMS"
							}

							icon = {
								name = "governor_icon"
								visible = "[ReasonItem.IsFlag( 'governor_efficiency' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/traits/governor.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_UNLOCKED_GOVERNOR_EFFICIENCY"
							}

							icon = {
								name = "supply_tent_01_icon"
								visible = "[ReasonItem.IsFlag( 'has_building_supply_tent_01_or_higher' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/quartermaster_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_BUILDING_SUPPLY_TENT_01_OR_HIGHER"
							}
							icon = {
								name = "barber_tent_01_icon"
								visible = "[ReasonItem.IsFlag( 'has_building_barber_tent_01_or_higher' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/trait_level_tracks/lifestyle_physician.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_BUILDING_BARBER_TENT_01_OR_HIGHER"
							}
							icon = {
								name = "baggage_train_01_icon"
								visible = "[ReasonItem.IsFlag( 'has_building_baggage_train_01_or_higher' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/character_interactions/icon_contract_escort.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_BUILDING_BAGGAGE_TRAIN_01_OR_HIGHER"
							}
							icon = {
								name = "mess_tent_01_icon"
								visible = "[ReasonItem.IsFlag( 'has_building_mess_tent_01_or_higher' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/camp_cook_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_BUILDING_MESS_TENT_01_OR_HIGHER"
							}
							icon = {
								name = "mess_tent_03_icon"
								visible = "[ReasonItem.IsFlag( 'has_building_mess_tent_03_or_higher' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/camp_cook_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_BUILDING_MESS_TENT_03_OR_HIGHER"
							}
							icon = {
								name = "camp_fire_01_icon"
								visible = "[ReasonItem.IsFlag( 'has_building_camp_fire_01_or_higher' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/trait_level_tracks/lifestyle_reveler.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_BUILDING_CAMP_FIRE_01_OR_HIGHER"
							}
							icon = {
								name = "proving_grounds_01_icon"
								visible = "[ReasonItem.IsFlag( 'has_building_proving_grounds_01_or_higher' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/master_of_arms_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_BUILDING_PROVING_GROUNDS_01_OR_HIGHER"
							}
							icon = {
								name = "camp_perimeter_01_icon"
								visible = "[ReasonItem.IsFlag( 'has_building_camp_perimeter_01_or_higher' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/archer_captain_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_BUILDING_CAMP_PERIMETER_01_OR_HIGHER"
							}
							icon = {
								name = "mess_tent_cooks_icon"
								visible = "[ReasonItem.IsFlag( 'has_building_mess_tent_cooks' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/camp_cook_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_BUILDING_MESS_TENT_COOKS"
							}
							icon = {
								name = "mess_tent_brewers_icon"
								visible = "[ReasonItem.IsFlag( 'has_building_mess_tent_brewers' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/cupbearer_court_position.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_BUILDING_MESS_TENT_BREWERS"
							}
							icon = {
								name = "supply_tent_reserve_provisions_icon"
								visible = "[ReasonItem.IsFlag( 'has_building_supply_tent_reserve_provisions' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/chief_forager_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_BUILDING_SUPPLY_TENT_RESERVE_PROVISIONS"
							}
							icon = {
								name = "supply_tent_reserve_water_icon"
								visible = "[ReasonItem.IsFlag( 'has_building_supply_tent_reserve_water' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/head_porter_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_BUILDING_SUPPLY_TENT_RESERVE_WATER"
							}
							icon = {
								name = "camp_perimeter_fixed_layout_icon"
								visible = "[ReasonItem.IsFlag( 'has_building_camp_perimeter_fixed_layout' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/vassal_stances/minority.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_BUILDING_CAMP_PERIMETER_FIXED_LAYOUT"
							}
							icon = {
								name = "camp_fire_nightly_debates_icon"
								visible = "[ReasonItem.IsFlag( 'has_building_camp_fire_nightly_debates' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/icon_battle_advantage.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_BUILDING_CAMP_FIRE_NIGHTLY_DEBATES"
							}
							icon = {
								name = "baggage_train_ample_steeds_icon"
								visible = "[ReasonItem.IsFlag( 'has_building_baggage_train_ample_steeds' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/light_infantry_captain_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_BUILDING_BAGGAGE_TRAIN_AMPLE_STEEDS"
							}
							icon = {
								name = "callous_and_baggage_train_ample_steeds_icon"
								visible = "[ReasonItem.IsFlag( 'is_callous_has_building_baggage_train_ample_steeds' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/traits/callous.dds"
								tooltip = "EVENT_WINDOW_OPTION_IS_CALLOUS_AND_HAS_BUILDING_BAGGAGE_TRAIN_AMPLE_STEEDS"
							}

							#Visit Settlement-related event option icons
							##GENERAL
							icon = {
								name = "buy_provisions_icon"
								visible = "[ReasonItem.IsFlag( 'buy_provisions' )]"
								framesize = { 60 60 }
								frame = 0
								size = { 34 34 }
								texture = "gfx/interface/icons/icon_camp_supply.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_PROVISIONS"
							}
							icon = {
								name = "sell_artifacts_icon"
								visible = "[ReasonItem.IsFlag( 'sell_artifacts' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/artifact/artefact_icons_unique_artifact_excalibur.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_ARTIFACTS"
							}
							icon = {
								name = "spawn_contracts_icon"
								visible = "[ReasonItem.IsFlag( 'spawn_contracts' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/message_feed/contract.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_CONTRACTS"
							}
							icon = {
								name = "tavern_icon"
								visible = "[ReasonItem.IsFlag( 'visit_tavern' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/activities/activity_feast.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_TAVERN"
							}
							##TAVERN
							icon = {
								name = "storyteller_icon"
								visible = "[ReasonItem.IsFlag( 'storyteller' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/master_bard_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_TAVERN_STORYTELLER"
							}
							icon = {
								name = "recruitment_icon"
								visible = "[ReasonItem.IsFlag( 'recruitment' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/character_interactions/council.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_TAVERN_RECRUITMENT"
							}
							icon = {
								name = "potential_spouse_icon"
								visible = "[ReasonItem.IsFlag( 'potential_spouse' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/character_interactions/icon_scheme_seduce.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_TAVERN_POTENTIAL"
							}
							icon = {
								name = "hood_icon"
								visible = "[ReasonItem.IsFlag( 'hooded_character' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/memory_types/intrigue.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_TAVERN_HOOD"
							}

							##CHURCH HOLDING
							icon = {
								name = "healer_icon"
								visible = "[ReasonItem.IsFlag( 'visit_healer' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/memory_types/icon_wounded.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_CHURCH_HOLDING_HEALER"
							}
							icon = {
								name = "church_icon"
								visible = "[ReasonItem.IsFlag( 'visit_church' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/camp_priest_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_CHURCH_HOLDING_CHURCH"
							}
							icon = {
								name = "garden_icon"
								visible = "[ReasonItem.IsFlag( 'visit_garden' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/court_gardener_court_position.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_CHURCH_HOLDING_GARDEN"
							}
							icon = {
								name = "physician_icon"
								visible = "[ReasonItem.IsFlag( 'recruit_physician' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/court_physician_court_position.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_CHURCH_HOLDING_PHYSICIAN"
							}

							##CASTLE HOLDING
							icon = {
								name = "training_grounds_icon"
								visible = "[ReasonItem.IsFlag( 'visit_training_grounds' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/light_infantry_captain_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_CASTLE_HOLDING_TRAINING"
							}
							icon = {
								name = "visit_garrison_icon"
								visible = "[ReasonItem.IsFlag( 'visit_garrison' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/theme_administration_types/icon_game_concept_military_administration.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_CASTLE_HOLDING_GARRISON"
							}
							icon = {
								name = "reinforce_maa_icon"
								visible = "[ReasonItem.IsFlag( 'reinforce_maa' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/icon_soldier.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_CASTLE_HOLDING_REINFORCE"
							}
							icon = {
								name = "bodyguard_icon"
								visible = "[ReasonItem.IsFlag( 'recruit_bodyguard' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/bodyguard_court_position.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_CASTLE_HOLDING_BODYGUARD"
							}

							##CITY HOLDING
							icon = {
								name = "weaponsmith_icon"
								visible = "[ReasonItem.IsFlag( 'visit_weaponsmith' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/trait_level_tracks/foot.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_CITY_HOLDING_WEAPONSMITH"
							}
							icon = {
								name = "armorsmith_icon"
								visible = "[ReasonItem.IsFlag( 'visit_armorsmith' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/armorer_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_CITY_HOLDING_ARMORSMITH"
							}
							icon = {
								name = "jeweler_icon"
								visible = "[ReasonItem.IsFlag( 'visit_jeweler' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/master_of_spoils_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_VISIT_SETTLEMENT_CITY_HOLDING_JEWELER"
							}
							#Quartermaster already covered by "have_quartermaster_icon"
							
							icon = {
								name = "estate_building_wine_cellar_icon"
								visible = "[ReasonItem.IsFlag( 'estate_building_wine_cellar' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/map_icons/map_icon_estate.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_ESTATE_BUILDING_WINE_CELLAR"
							}
							icon = {
								name = "skilled_follower_icon"
								visible = "[ReasonItem.IsFlag( 'skilled_follower' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/traits/adventurer_follower.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_SKILLED_FOLLOWER"
							}
							icon = {
								name = "scholar_icon"
								visible = "[ReasonItem.IsFlag( 'scholar' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/traits/scholar.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_SCHOLAR"
							}
							icon = {
								name = "language_icon"
								visible = "[ReasonItem.IsFlag( 'language' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/character_interactions/icon_scheme_learn_language.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_LANGUAGE"
							}

							icon = {
								name = "diplomacy_trait_icon"
								visible = "[ReasonItem.IsFlag( 'has_diplomacy_trait' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/traits/education_diplomacy_base.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_DIPLOMACY_TRAIT"
							}
							icon = {
								name = "martial_trait_icon"
								visible = "[ReasonItem.IsFlag( 'has_martial_trait' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/traits/education_martial_base.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_MARTIAL_TRAIT"
							}
							icon = {
								name = "commander_trait_icon"
								visible = "[ReasonItem.IsFlag( 'has_commander_trait' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/traits/flexible_leader.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_COMMANDER_TRAIT"
							}
							icon = {
								name = "stewardship_trait_icon"
								visible = "[ReasonItem.IsFlag( 'has_stewardship_trait' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/traits/education_stewardship_base.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_STEWARDSHIP_TRAIT"
							}
							icon = {
								name = "intrigue_trait_icon"
								visible = "[ReasonItem.IsFlag( 'has_intrigue_trait' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/traits/education_intrigue_base.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_INTRIGUE_TRAIT"
							}
							icon = {
								name = "learning_trait_icon"
								visible = "[ReasonItem.IsFlag( 'has_learning_trait' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/traits/education_learning_base.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_LEARNING_TRAIT"
							}

							icon = {
								name = "religious_trait_icon"
								visible = "[ReasonItem.IsFlag( 'has_religious_trait' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/traits/crusader_king.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_RELIGIOUS_TRAIT"
							}
							icon = {
								name = "have_camp_priest_icon"
								visible = "[ReasonItem.IsFlag( 'have_camp_priest' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/camp_priest_camp_officer.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_HAVE_CAMP_PRIEST"
							}

							icon = {
								name = "poi_amount_icon"
								visible = "[ReasonItem.IsFlag( 'poi_amount' )]"
								size = { 34 34 }
								texture = "gfx/interface/icons/court_position_types/travel_leader_court_position.dds"
								tooltip = "EVENT_WINDOW_OPTION_AVAILABLE_POI_AMOUNT"
							}
						}
					}
				}

				warning_icon = {
					visible = "[And( EventOption.IsTimeoutOption, And( GameHasMultiplePlayers, LessThanOrEqualTo_int32( EventWindowData.GetDaysRemaining, '(int32)30' ) ) )]"
					name = "timeout_icon"
					size = { 30 30 }
					tooltip = EVENT_WINDOW_DAYS_REMAINING
				}
			}

			###### SPACER ######
			hbox = {
				name = "spacer_effects"
				datamodel = "[EventOption.Effects]"

				item = {
					container = {
						container = {
							visible = "[OptionEffectItem.IsTrait]"
							alwaystransparent = yes

							spacer = {
								datacontext = "[OptionEffectItem.GetTrait]"
								size = { 34 34 }
							}
						}

						spacer = {
							visible = "[OptionEffectItem.IsStress]"
							size = { 34 34 }
						}

						spacer = {
							visible = "[OptionEffectItem.IsScheme]"
							size = { 34 34 }
						}

						spacer = {
							visible = "[OptionEffectItem.IsDeath]"
							size = { 34 34 }
						}
					}
				}
			}

			text_single = {
				layoutpolicy_horizontal = expanding
				margin = { 5 0 }
				alwaystransparent = yes

				text = "[EventOption.GetText]"
				autoresize = no
				default_format = "#high"
				align = center|nobaseline
				fontsize_min = 12
			}

			##### SPACER #####
			hbox = {
				hbox = {
					name = "reason_spacers"
					datamodel = "[EventOption.Reasons]"
					item = {
						spacer = {
							size = { 34 34 }
						}
					}
				}

				hbox = {
					name = "timeout_spacer"
					visible = "[And( EventOption.IsTimeoutOption, And( GameHasMultiplePlayers, LessThanOrEqualTo_int32( EventWindowData.GetDaysRemaining, '(int32)30' ) ) )]"

					spacer = {
						size = { 34 34 }
					}
				}
			}

			hbox = {
				name = "effects_grid"
				datamodel = "[EventOption.Effects]"

				item = {
					container = {
						container = {
							visible = "[OptionEffectItem.IsTrait]"
							alwaystransparent = yes

							icon = {
								datacontext = "[OptionEffectItem.GetTrait]"
								name = "trait_icon"
								size = { 34 34 }
								texture = "[Trait.GetIcon(GetPlayer)]"
							}

							icon = {
								visible = "[OptionEffectItem.IsGain]"
								texture = "gfx/interface/icons/symbols/icon_plus_small.dds"
								name = "gain"
								size = { 20 20 }
							}

							icon = {
								visible = "[OptionEffectItem.IsLoss]"
								texture = "gfx/interface/icons/symbols/icon_minus_small.dds"
								name = "loss"
								size = { 20 20 }
							}
						}

						container = {
							visible = "[OptionEffectItem.IsStress]"
							alwaystransparent = yes

							icon = {
								visible = "[And(OptionEffectItem.IsGain,Not(OptionEffectItem.IsCritical))]"
								texture = "gfx/interface/icons/stress/icon_stress_gain.dds"
								name = "stress_gain"
								size = { 34 34 }
							}

							icon = {
								visible = "[OptionEffectItem.IsLoss]"
								texture = "gfx/interface/icons/stress/icon_stress_loss.dds"
								name = "stress_loss"
								size = { 34 34 }
							}

							icon = {
								visible = "[OptionEffectItem.IsCritical]"
								texture = "gfx/interface/icons/stress/icon_stress_gain_critical.dds"
								name = "stress_critical"
								size = { 34 34 }
							}
						}

						icon = {
							name = "death"
							visible = "[OptionEffectItem.IsDeath]"
							size = { 34 34 }
							texture = "gfx/interface/icons/icon_dead.dds"
						}

						icon = {
							name = "scheme"
							visible = "[OptionEffectItem.IsScheme]"
							size = { 34 34 }
							texture = "[OptionEffectItem.GetScheme.GetIcon]"
						}
					}
				}
			}
		}
	}

	type event_window_background_widget = margin_widget
	{
		size = { 100% 100% }
		alwaystransparent = yes
		datacontext = "[EventWindowData.GetEventBackgroundData]"

		icon = {
			name = "event_picture_with_mask"
			visible = "[And( Not( EventWindowBackgroundData.HasVideo ), EventWindowBackgroundData.HasVideoMask ) )]"
			texture = "[EventWindowBackgroundData.GetTexture]"
			size = { 100% 100% }

			modify_texture = {
				video = "[EventWindowBackgroundData.GetVideoMask]"
				blend_mode = alphamultiply

				block "event_mask_properties"
				{
					loop = no
				}
			}

			block "event_picture_properties"
			{
			}
		}

		icon = {
			name = "event_picture"
			visible = "[Not( Or( EventWindowBackgroundData.HasVideo, EventWindowBackgroundData.HasVideoMask) )]"
			texture = "[EventWindowBackgroundData.GetTexture]"
			size = { 100% 100% }

			block "event_mask" {
				modify_texture = {
					name = mask
					texture = "gfx/interface/window_event/mask_event_image_large.dds"
					blend_mode = alphamultiply

					block "event_mask_properties"
					{
						loop = no
					}
				}
			}

			block "event_picture_properties"
			{
			}
		}

		video_icon = {
			name = "event_video"
			visible = "[EventWindowBackgroundData.HasVideo]"
			video = "[EventWindowBackgroundData.GetVideo]"
			size = { 100% 100% }
			loop = no

			block "event_video_properties"
			{
			}
		}
	}

	type event_window_transition_widget = margin_widget {
		size = { 100% 100% }
		alwaystransparent = no
		datacontext = "[EventWindowData.GetEventTransitionData]"
		visible = "[EventWindowData.IsShowingTransition]"

		icon = {
			name = "event_transition_picture_with_mask"
			visible = "[And( Not( EventWindowTransitionData.HasVideo ), EventWindowTransitionData.HasVideoMask )]"
			texture = "[EventWindowTransitionData.GetTexture]"
			size = { 100% 100% }

			modify_texture = {
				video = "[EventWindowTransitionData.GetVideoMask]"
				blend_mode = alphamultiply
				restart_on_show = yes

				block "event_transition_mask_properties"
				{
					loop = no
				}
			}

			block "event_transition_picture_properties"
			{
			}
		}

		icon = {
			name = "event_transition_picture"
			visible = "[Not( Or( EventWindowTransitionData.HasVideo, EventWindowTransitionData.HasVideoMask) )]"
			texture = "[EventWindowTransitionData.GetTexture]"
			size = { 100% 100% }

			block "event_transition_picture_properties"
			{
			}
		}

		video_icon = {
			name = "event_transition_video"
			visible = "[EventWindowTransitionData.HasVideo]"
			video = "[EventWindowTransitionData.GetVideo]"
			size = { 100% 100% }
			loop = no
			restart_on_show = yes

			block "event_transition_video_properties"
			{
			}
		}
	}

	type event_window_effect_2d_widget = margin_widget {
		size = { 100% 100% }
		datacontext = "[EventWindowData.GetEvent2DEffectData]"
		visible = "[And( Not( EventWindowData.IsShowingTransition ), EventWindow2DEffectData.HasEffect )]"

		video_icon = {
			name = "event_effect_2d_video_no_mask"
			video = "[EventWindow2DEffectData.GetVideo]"
			visible = "[Not( EventWindow2DEffectData.HasMask )]"
			size = { 100% 100% }
			loop = "[EqualTo_CFixedPoint( EventWindow2DEffectData.GetDuration, '(CFixedPoint)0.0' )]"
			restart_on_show = yes

			block "event_effect_2d_video_properties"
			{
			}
		}

		## VIDEO EVENT EFFECT

		video_icon = {
			name = "event_effect_2d_video_with_mask"
			video = "[EventWindow2DEffectData.GetVideo]"
			visible = "[EventWindow2DEffectData.HasMask]"
			size = { 100% 100% }
			loop = "[EqualTo_CFixedPoint( EventWindow2DEffectData.GetDuration, '(CFixedPoint)0.0' )]"
			restart_on_show = yes

			block "event_effect_2d_video_properties"
			{
			}
		}
	}
}



template artifact_event_flowcontainer {

	tooltipwidget = {
		artifact_tooltip = {}
	}

	icon_artifact = {
		parentanchor = hcenter
	}

	text_label_center = {
		alwaystransparent = yes
		text = "[Artifact.GetNameNoTooltip]"
		max_width = 160
		parentanchor = hcenter
		align = center
		fontsize_min = 12
		multiline = yes
	}
}

template Event_Window_Debug_Info
{
	button_round = {
		alwaystransparent = no
		tooltip = "REGENERATE_EVENT_CONTENTS"
		using = tooltip_below

		using = Animation_ShowHide_Quick

		block "event_reset_onclick"
		{
			onclick = "[EventWindow.ResetContents]"
		}

		button_replace = {
			parentanchor = center
			alwaystransparent = yes
		}
	}

	button_round = {
		size = { 40 40 }

		button_icon = {
			size = { 100% 100% }
			texture = "gfx/interface/icons/flat_icons/data_system.dds"
			tooltip = "TOGGLE_DATA_SYSTEM"
			using = tooltip_below
			onclick = "[ExecuteConsoleCommand('Localization.ToggleSkipDataSystemInLocOutput')]"
			fontsize = 24
		}
	}

	button_round = {
		size = { 40 40 }

		button_icon = {
			size = { 30 30 }
			parentanchor = center
			texture = "gfx/interface/icons/flat_icons/history.dds"
			tooltip = "TOGGLE_DEBUG_OPTION_TOOLTIPS"
			using = tooltip_below
			onclick = "[EventWindowData.ToggleDebugOptionTooltips]"
			fontsize = 24
		}
	}

	button_round = {
		size = { 40 40 }
		button_copy = {
			parentanchor = center
			onclick = "[EventWindowData.CopyToClipboard]"
			tooltip = "COPY_EVENT_CONTENTS"
		}
	}

	button_round = {
		name = "debug_icon"
		size = { 40 40 }
		button_search = {
			parentanchor = center
			size = { 26 26 }
			tooltip = "EVENT_DEBUG_TOOLTIP"
			using = tooltip_se
			onclick = "[EventWindowData.DebugOpen]"
			button_ignore = none
		}
	}

	container = {
		tooltip = "[EventWindowData.GetTriggerBreakdown]"
		using = tooltip_es
		icon = {
			visible = "[EventWindowData.IsTriggerFulfilled]"
			size = { 40 40 }
			texture = "gfx/interface/icons/symbols/icon_check.dds"
		}

		icon = {
			visible = "[Not( EventWindowData.IsTriggerFulfilled )]"
			size = { 40 40 }
			texture = "gfx/interface/icons/symbols/icon_cross.dds"
		}
	}

	button = {
		size = { 40 40 }

		button = {
			size = { 100% 100% }
			tooltip = "[EventWindowData.GetDebugInfo]"
			using = tooltip_es
			onclick = "[EventWindowData.CopyToClipboard]"
			onrightclick = "[EventWindowData.DebugOpen]"
			button_ignore = none
			raw_text = "?"
			fontsize = 24
		}
	}
}

template Event_Window_Debug_OptionTooltips
{
	allow_outside = "[EventWindowData.ShowDebugOptionTooltips]"
	vbox = {
		name = "event_window_debug_tooltip_list"
		visible_at_creation = no
		visible = "[EventWindowData.ShowDebugOptionTooltips]"
		alwaystransparent = no

		position = { 20 -18 }
		size = { 600 100% }
		parentanchor = left|bottom
		widgetanchor = right|bottom

		vbox = {
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding
			alwaystransparent = no

			datamodel = "[EventWindowData.GetOptions]"
			expand = {}
			item = {
				hbox = {
					datacontext = "[GetDeepestTooltipInfo]"
					alwaystransparent = no

					layoutpolicy_horizontal = expanding
					expand = {}
					# This is a copy of gui template 'DefaultTooltipWidget'
					container = {
						using = GeneralTooltipSetup
						alwaystransparent = no

						widget = {
							name = "background"
							using = DefaultTooltipBackground
							size = { 100% 100% }
							alwaystransparent = no
						}

						flowcontainer = {
							direction = vertical
							margin_right = 10

							textbox = {
								name = "TooltipText"
								text = "[EventOption.GetTooltip]"
								using = DefaultTooltipText
								margin = { 20 20 }
								margin_top = 10
								alwaystransparent = no
							}

							textbox = {
								name = "TooltipTextShortcut"
								using = DefaultTooltipText
								parentanchor = right
								margin_top = -20
								margin_bottom = 15
								margin_right = 15
							}
						}
					}
				}
			}
		}
	}
}

template Event_Window_Default_Transition_States
{
	state = {
		name = _show
		using = Animation_FadeIn_Standard
		duration = 0.25
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Standard
		duration = 0.5
	}
}
