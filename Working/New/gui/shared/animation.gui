
######################################################
############### ANIMATION TEMPLATES ##################
######################################################

# Curves
template Animation_Curve_Default
{
    bezier = { 0.25 0.1 0.25 1 }
}

template Animation_Transition_Start
{
    bezier = { 0.5 0 0 0 }
}

template Animation_Transition_End
{
    bezier = { 1 1 0.5 1 }
}

# Fade animations

template Animation_FadeIn_Standard
{
    using = Animation_Curve_Default
    duration = 0.25

    alpha = 1
}

template Animation_FadeOut_Standard
{
    using = Animation_Curve_Default
    duration = 0.25

    alpha = 0
}

template Animation_FadeIn_Quick
{
    using = Animation_Curve_Default
    duration = 0.15

    alpha = 1
}

template Animation_FadeOut_Quick
{
    using = Animation_Curve_Default
    duration = 0.15

    alpha = 0
}

# Fade animation movement

template Animation_FadeIn_BottomLeft
{
    position = { 0 0 }
}
template Animation_FadeOut_BottomLeft
{
     position = { -60 60 }
}

# Package of standard show/hide states
template Animation_ShowHide_Standard
{
    state = {
        name = _show
        using = Animation_FadeIn_Standard
    }

    state = {
        name = _hide
        using = Animation_FadeOut_Standard
    }
}

template Animation_ShowHide_Quick
{
    state = {
        name = _show
        using = Animation_FadeIn_Quick
    }

    state = {
        name = _hide
        using = Animation_FadeOut_Quick
    }
}

template Animation_Tab_Switch
{
    state = {
        name = _show
        using = Animation_FadeIn_Quick
    }

    state = {
        name = _hide
        alpha = 0
    }
}

### Window content refresh animation
template Animation_Refresh_FadeOut
{
    alpha = 0.5
    next = "fadein"
    using = Animation_Curve_Default
}

template Animation_Refresh_FadeIn
{
    name = "fadein"
    alpha = 1
    duration = 0.4
    bezier = { 0.5 0 1 0.5 }
}

template Animation_Glow_Pulse
{
    state = {
        trigger_on_create = yes

        name = max_glow
        next = min_glow
        duration = 1
        using = Animation_Curve_Default

        glow_alpha = 0.8
    }

    state = {
        name = min_glow
        next = max_glow
        duration = 1.6
        using = Animation_Curve_Default

        glow_alpha = 0.4
    }
}

### MAP ICONS

template Animation_MapIcon_Fade
{
    state = {
        name = _show
        duration = 0.15
        alpha = 1

        block "icon_size" {}
    }

    state = {
        name = _hide
        size = { 0 0 }
        duration = 0.15
        alpha = 0
    }

}


### GLOW TEMPLATES
template Glow_Standard
{
    glow_generation_rules= {
        glow_alpha_mask = 0
        glow_blur_passes = 10
        glow_texture_downscale = 2.5f
        glow_ignore_inside_pixels = yes
    }
}

### glow on flat icons when a progress has been completed, tested on legacies in dynasty view
template Glow_icon
{
    modify_texture = {
        name = "shimmer"
        texture = "gfx/interface/component_effects/effect_blue_shine.dds"
        blend_mode = colordodge
        translate_uv = { 0.2 0.2 }
    }

    modify_texture = {
        name = "shimmer_2"
        texture = "gfx/interface/component_effects/effect_blue_shine.dds"
        blend_mode = colordodge
        translate_uv = { 0.2 0.2 }
    }

    state = {
        name = shimmer
        next = pause
        trigger_on_create = yes
        duration = 1.2

        bezier = { 0 0.9 1 0.4 }

        modify_texture = {
            name = "shimmer"
            translate_uv = { -1 1 }
        }

        modify_texture = {
            name = "shimmer_2"
            translate_uv = { -1 1 }
        }
    }

    state = {
        name = pause
        next = shimmer
        duration = 0
        delay = 2

        modify_texture = {
            name = "shimmer"
            translate_uv = { 1 -1 }
        }


        modify_texture = {
            name = "shimmer_2"
            translate_uv = { 1 -1 }
        }
    }
}

### glow on progress icons. pulse matches flat icons
template Glow_progress_icon
{
    modify_texture = {
        name = "glow"
        texture = "gfx/interface/component_overlay/overlay_texture.dds"
        blend_mode = colordodge
        visible = "[EqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)5')]"
    }
    
    state = {
        trigger_when = "[EqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)5')]"
        name = a
        next = b
    
        using = Animation_Curve_Default
        duration = 0.6
    
        modify_texture = {
            name = "glow"
            alpha = 0.8
        }
    }
    
    state = {
        name = b
        next = c
    
        using = Animation_Curve_Default
        duration = 0.6
        delay = 0.4
        
    
        modify_texture = {
            name = "glow"
            alpha = 0
        }
    }
    
    state = {
        name = c
        next = a
    
        using = Animation_Curve_Default
        duration = 1.6
    
        modify_texture = {
            name = "glow"
            alpha = 0
        }
    }
}


### ANIMATIONS

types Animations
{
    # "Look at me!" For textbuttons
    type animation_attention_text = icon {
        name = "emphasis_effect"
        parentanchor = center
        size = { 100% 100% }

        spriteType = Corneredtiled
        spriteborder = { 10 10 }

        texture = "gfx/interface/component_effects/attention_text.dds"
        using = Color_Orange

        state = {
            trigger_on_create = yes
            name = a
            next = b

            using = Animation_Curve_Default
            duration = 0.8
            alpha = 1
        }

        state = {
            name = b
            next = a

            using = Animation_Curve_Default
            duration = 1.5
            alpha = 0.5
        }
    }

    # A one off flash "Look at me!" For textbuttons
    type animation_attention_text_single = icon {
        name = "emphasis_effect"
        parentanchor = center
        size = { 100% 100% }

        spriteType = Corneredtiled
        spriteborder = { 10 10 }

        texture = "gfx/interface/component_effects/attention_text.dds"
        using = Color_Orange
        alpha = 0

        state = {
        	block "start_state"
        	{
        	}
            next = b

            using = Animation_Curve_Default
            duration = 0.8
            alpha = 1
        }

        state = {
            name = b
            next = c

            using = Animation_Curve_Default
            duration = 1.5
            alpha = 0.5
        }

        state = {
            name = c
            next = d

            using = Animation_Curve_Default
            duration = 0.8
            alpha = 1
        }
        state = {
            name = d

            using = Animation_Curve_Default
            duration = 1.5
            alpha = 0
        }
    }

    ### current special event option look
    type animation_glow_event = icon {
        size = { 100% 100% }
        parentanchor = center
        frame = 2
        texture = "gfx/interface/buttons/button_mouseover_event.dds"
        spriteType = Corneredstretched
        spriteborder = { 20 20 }
        framesize = { 238 63 }

        modify_texture = {
            name = "overlay"
            texture = "gfx/interface/buttons/button_standard_overlay.dds"
            spriteType = Corneredstretched
            spriteborder = { 3 3 }
            blend_mode = overlay
        }

        modify_texture = {
            name = "mask"
            texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
            blend_mode = alphamultiply
        }

        state = {
            trigger_on_create = yes
            name = a
            next = b

            using = Animation_Curve_Default
            duration = 2
            alpha = 1
        }

        state = {
            name = b
            next = a

            using = Animation_Curve_Default
            duration = 2.4
            alpha = 0.5
        }
    }

    # Use this to signal that an action means serious business, ie. on a button that starts a war
    type animation_aggressive = widget {
        parentanchor = center
        size = { 100% 100% }

        state = {
            name = _show
            trigger_on_create = yes
        }

        proportional_icon = {
            size = { 100% 100% }
            alwaystransparent = yes

            texture = "gfx/interface/window_siege/base_holding_fire.dds"
            using = Mask_Rough_Edges

            modify_texture = {
                name = "mask"
                texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
                blend_mode = alphamultiply
                mirror = vertical
            }
            
            modify_texture = {
                name = "orange"
                texture = "gfx/interface/colors/orange.dds"
                blend_mode = colordodge
                alpha = 0.2
            }

            modify_texture = {
                name = "fire"
                framesize = { 200 120 }
                texture = "gfx/interface/component_effects/fire_03.dds"
                blend_mode = colordodge
            }

            using = Animation_ShowHide_Standard
            using = Animation_Frames_100_Modify
        }
    }

    ## One pulse HUD animation, needs a texture
    type animation_sonar = icon {
        name = "effect_sonar"
        parentanchor = center
        size = { 100% 100% }
      
        alwaystransparent = yes
        alpha = 0
        scale = 0

        state = {
            trigger_on_create = yes
            name = a
            next = c

            using = Animation_Curve_Default
            duration = 0.3
            alpha = 1
            scale = 0
        }

        state = {
            name = c
            next = b

            using = Animation_Curve_Default
            duration = 0.9
            alpha = 0
            scale = 3
        }

        state = {
            name = b
            using = Animation_Curve_Default
            duration = 1
            alpha = 0
            scale = 0
        }
    }

    type animation_button_highlight = icon {
        name = "button_highlight"
        parentanchor = center
        size = { 100% 100% }
      
        alwaystransparent = yes
        alpha = 0
        scale = 0

        state = {
            trigger_on_create = yes
            name = a
            next = b

            using = Animation_Curve_Default
            duration = 1.5
            alpha = 1
            scale = 1.2
        }

        state = {
            name = b
            next = a

            using = Animation_Curve_Default
            duration = 1.5
            alpha = 0.2
            scale = 1.8
        }
    }


    type animation_progessbar_center_glow = widget {
        using = Animation_ShowHide_Standard

        widget = {
            size = { 100% 100% }

            widget = {
                size = { 100% 100% }
                scissor = yes

                button = {
                    parentanchor = right
                    size = { 100 100% }
                    framesize = { 192 112 }
                    texture = "gfx/interface/component_effects/sparks.dds"
                    alpha = 0.12
                    alwaystransparent = yes

                    gfxtype = animatedbuttongfx
                    loopinterval = 4

                    modify_texture = {
                        texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
                        blend_mode = alphamultiply
                    }
                }

                icon = {
                    parentanchor = right
                    size = { 80 100% }
                    texture = "gfx/interface/colors/white.dds"
                    shaderfile = "gfx/FX/pdxgui_repeat_texture.shader"
                    alpha = 0.4

                    #   block "glow_color"
                    #  {
                    using = Color_Bright_Yellow

                    #   }

                    modify_texture = {
                        texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
                        blend_mode = alphamultiply
                    }

                    modify_texture = {
                        name = "clouds"
                        texture = "gfx/interface/component_masks/mask_clouds.dds"
                        blend_mode = alphamultiply
                        spriteType = corneredtiled
                        texture_density = 2
                    }

                    state = {
                        name = a
                        next = b
                        trigger_on_create = yes

                        modify_texture = {
                            name = "clouds"
                            translate_uv = { -1 0 }
                        }
                    }

                    state = {
                        name = b
                        next = a
                        duration = 2

                        modify_texture = {
                            name = "clouds"
                            translate_uv = { 1 0 }
                        }
                    }
                }
            }

            icon = {
                parentanchor = right|vcenter
                position = { 20 0 }
                size = { 80 100% }
                texture = "gfx/interface/progressbars/progressbar_center_glow.dds"

                # block "glow_color"
                # {
                #     using = Color_Bright_Yellow

                # }

                state = {
                    name = a
                    next = b
                    trigger_on_create = yes
                    duration = 0.1
                    alpha = 1
                }

                state = {
                    name = b
                    next = a
                    duration = 0.2
                    alpha = 0.9
                }
            }
        }
    }
}
