textbox = {
	name = "console_output_item"
	maximumsize = { 389 -1 }
	align = left|top
	using = editor_font
	multiline = yes
	autoresize = yes
	alwaystransparent = no
	fontsize = 15
	pseudo_localization_enabled = no
}

flowcontainer = {
	name = "console_window"
	parentanchor = left|vcenter
	position = { 20 0 }
	alwaystransparent = no
	filter_mouse = all
	layer = confirmation
	direction = vertical
	spacing = 2
	ignoreinvisible = yes
	allow_outside = yes

	flowcontainer = {
		spacing = 3
		ignoreinvisible = yes
		allow_outside = yes

		margin_widget = {
			size = { 400 510 }
			margin = { 10 5 }

			using = dockable_background

			scrollarea = {
				name = "console_output_scrollarea"
				size = { 389 500 }

				scrollwidget = {
					flowcontainer = {
						name = "console_output"
						direction = "vertical"
						ignoreinvisible = no

						# Help-text to be super-helpful
						editor_textbox = {
							maximumsize = { 389 -1 }
							align = left|top
							multiline = yes
							autoresize = yes
							alwaystransparent = no
							fontsize = 13
							pseudo_localization_enabled = no
							raw_text = "#weak;italic Use 'help <command_name>' for information, and <tab> or <pagedown> to autocomplete commands and arguments."
						}
					}
				}

				scrollbar_vertical = {
					using = editor_vertical_scrollbar
				}

				scrollbar_horizontal = {
					using = editor_horizontal_scrollbar
				}
			}
		}

		dockable_button = {
			size = { 24 24 }
			raw_text = "M"
			onclick = "[ConsoleWindow.ToggleMenu]"
		}

		flowcontainer = {
			name = "menu"
			visible = "[ConsoleWindow.IsMenuShown]"
			spacing = 3

			scrollarea = {
				name = "menu_scroll_area"
				size = { 200 505 }
				scrollbarpolicy_horizontal = always_off

				# background = {
				# 	using = Debug_Background_Dark
				# }

				scrollbar_vertical = {
					using = editor_vertical_scrollbar
				}

				scrollwidget = {
					fixedgridbox = {
						name = "menu_grid"
						addcolumn = 150
						addrow = 24

						item = {
							container = {

								icon = {
									visible = "[ConsoleMenuItem.IsCurrentGroup]"
									position = { 0 0 }
									size = { 106 28 }
								}

								dockable_button = {
									position = { 3 3 }
									size = { 180 22 }
									onclick = "[ConsoleMenuItem.Select]"

									text = "[ConsoleMenuItem.GetName]"

									tooltip = "[ConsoleMenuItem.GetHelp]"
									using = tooltip_es
								}
							}
						}
					}
				}
			}

			scrollarea = {
				name = "command_scroll_area"
				size = { 400  505 }
				scrollbarpolicy_horizontal = always_off

				scrollbar_vertical = {
					using = editor_vertical_scrollbar
				}

				scrollwidget = {
					fixedgridbox = {
						name = "command_grid"
						position = { 0 0 }
						addcolumn = 400
						addrow = 29

						item = {
							dockable_button = {
								size = { 400 24 }
								onclick = "[ConsoleMenuItem.Select]"
								tooltip = "[ConsoleMenuItem.GetHelp]"
								text = "[ConsoleMenuItem.GetName]"
							}
						}
					}
				}
			}
		}
	}

	editor_textinput = {
		name = "console_edit"
		size = { 400 40 }
		margin = { 5 0 }
		alwaystransparent = no
		focuspolicy = all
		fontsize = 15
	}

	spacer = {
		size = { 3 3 }
	}

	window = {
		name = "toolbars_window"
		movable = no
		size = { 400 180 }

		using = dockable_background

		vbox = {
			margin = { 10 5 }
			margin_bottom = 10

			restrictparent_min = yes

			hbox = {
				layoutpolicy_horizontal = expanding
				spacing = 5
				margin = { 0 5 }
				margin_left = 5

				editor_textbox = {
					raw_text = "Debug Menus"
					autoresize = yes
					fontcolor = { 1 1 1 0.5 }
				}

				expand = {}

				dockable_button = {
					name = "run_file_button"
					onclick = "[ExecuteConsoleCommand('run run.txt')]"
					raw_tooltip = "Run file #weak (Edit Run.txt to change what this button does)#!"
					using = tooltip_ne

					icon = {
						parentanchor = center
						position = { 1 1 }
						size = { 30 30 }
						texture = "gfx/interface/icons/character_interactions/send_poem_interaction.dds"
					}
				}

				dockable_button = {
					name = "ai_observe_button"
					onclick = "[ExecuteConsoleCommand('observe')]"
					raw_tooltip = "Go into Observe Mode"
					using = tooltip_ne

					icon = {
						parentanchor = center
						position = { 1 1 }
						size = { 25 25 }
						texture = "gfx/interface/icons/icon_commander_trait.dds"
					}
				}

				dockable_button = {
					name = "ai_console_button"
					onclick = "[ExecuteConsoleCommand('AI.ToggleAll')]"
					raw_tooltip = "Enable/Disable the AI for all characters"
					using = tooltip_ne

					icon = {
						parentanchor = center
						position = { 1 1 }
						size = { 25 25 }
						texture = "gfx/interface/icons/icon_group_of_characters.dds"
					}
				}

				dockable_button = {
					name = "yesmen_console_button"
					onclick = "[ExecuteConsoleCommand('yesmen')]"
					onrightclick = "[ExecuteConsoleCommand('yesmen_instant')]"
					button_ignore = none
					raw_tooltip = "Enable/Disable Yesmen. Right-click for instant interaction responses"
					using = tooltip_ne

					icon = {
						parentanchor = center
						size = { 25 25 }
						texture = "gfx/interface/icons/icon_soldier.dds"

						icon = {
							name = "gold_negative_console_button_minus"
							position = { 4 7 }
							size = { 23 23 }
							texture = "gfx/interface/icons/symbols/icon_check.dds"
						}
					}
				}

				dockable_button = {
					name = "kill_console_button"
					onclick = "[ExecuteConsoleCommand('kill')]"
					raw_tooltip = "Kill Currently Played Character"
					using = tooltip_ne

					icon = {
						parentanchor = center
						size = { 30 30 }
						texture = "gfx/interface/icons/icon_dead.dds"
					}
				}

				dockable_button = {
					name = "prestige_console_button"
					onclick = "[ExecuteConsoleCommand('prestige 1000')]"
					onrightclick = "[ExecuteConsoleCommand('prestige -1000')]"
					button_ignore = none

					raw_tooltip = "Left-click: Gain 1000 Prestige, Right-click: Lose 1000 Prestige"
					using = tooltip_ne

					icon = {
						parentanchor = center
						position = { 0 1 }
						size = { 30 30 }
						texture = "gfx/interface/icons/currencies/icon_prestige_04.dds"
					}
				}

				dockable_button = {
					name = "piety_console_button"
					onclick = "[ExecuteConsoleCommand('piety 1000')]"
					onrightclick = "[ExecuteConsoleCommand('piety -1000')]"
					button_ignore = none
					raw_tooltip = "Left-click: Gain 1000 Piety, Right-click: Lose 1000 Piety"
					using = tooltip_ne

					icon = {
						parentanchor = center
						size = { 30 30 }
						texture = "gfx/interface/icons/currencies/icon_piety_christian_04.dds"
					}
				}

				dockable_button = {
					name = "gold_console_button"
					onclick = "[ExecuteConsoleCommand('gold 5000')]"
					onrightclick = "[ExecuteConsoleCommand('gold -5000')]"
					button_ignore = none
					raw_tooltip = "Left-click: Gain 5000 Gold, Right-click: Lose 5000 Gold"
					using = tooltip_ne

					icon = {
						parentanchor = center
						position = { 0 1 }
						size = { 30 30 }
						texture = "gfx/interface/icons/icon_gold.dds"
					}
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding

				dockable_button = {
					layoutpolicy_horizontal = expanding
					size = { 0 30 }
					raw_text = "Environment"
					onclick = "[ExecuteConsoleCommand('gui.CreateDockable gui/debug/debug_menus.gui environment_debug_window')]"
					tintcolor = { 200 20 0 0.8 }
					raw_tooltip = "Switch between environment lighting cubemaps"
				}

				dockable_button = {
					layoutpolicy_horizontal = expanding
					size = { 0 30 }
					raw_text = "Tweak"
					onclick = "[ExecuteConsoleCommand('gui.CreateDockable gui/debug/debug_menus.gui tweak_window')]"
					tintcolor = { 200 20 0 0.8 }
					raw_tooltip = "Show Tweakable Values"
				}

				dockable_button = {
					layoutpolicy_horizontal = expanding
					size = { 0 30 }
					raw_text = "Portrait Editor"
					onclick = "[ExecuteConsoleCommand('pe')]"
					tintcolor = { 200 20 0 0.8 }
					raw_tooltip = "Portrait Editor"
				}

				dockable_button = {
					size = { 40 30 }
					raw_text = "Purge"
					onclick = "[ExecuteConsoleCommand('PurgePortraits')]"
					tintcolor = { 1 0.5 0.1 0.8 }
					raw_tooltip = "Purge Portrait cache"
				}

			}

			hbox = {
				layoutpolicy_horizontal = expanding

				dockable_button = {
					layoutpolicy_horizontal = expanding
					size = { 0 30 }
					raw_text = "Language"
					onclick = "[ExecuteConsoleCommand('gui.CreateDockable gui/debug/debug_menus.gui language_window')]"
					tintcolor = { 200 20 0 0.8 }
				}

				dockable_button = {
					layoutpolicy_horizontal = expanding
					size = { 0 30 }
					raw_text = "Court"
					onclick = "[ExecuteConsoleCommand('gui.CreateDockable gui/debug/debug_menus.gui court_debug_menu')]"
					tintcolor = { 200 20 0 0.8 }
					raw_tooltip = "Court debug menu"
				}

				dockable_button = {
					layoutpolicy_horizontal = expanding
					size = { 0 30 }
					raw_text = "Map"
					onclick = "[ExecuteConsoleCommand('gui.CreateDockable gui/debug/debug_menus.gui map_debug_menu')]"
					tintcolor = { 200 20 0 0.8 }
					raw_tooltip = "Map Object debug menu"
				}

				dockable_button  = {
					layoutpolicy_horizontal = expanding
					size = { 0 30 }
					raw_text = "Flag Preview"
					onclick = "[ExecuteConsoleCommand('gui.CreateDockable gui/debug/debug_menus.gui flag_preview_window')]"
					tintcolor = { 200 20 0 0.8 }
				}
			}


			hbox = {
				layoutpolicy_horizontal = expanding

				dockable_button = {
					layoutpolicy_horizontal = expanding
					size = { 0 30 }
					raw_text = "Watch Windows"
					onclick = "[ExecuteConsoleCommand('watch')]"
					tintcolor = { 1 0.5 0.1 0.8 }
				}

				dockable_button = {
					layoutpolicy_horizontal = expanding
					size = { 0 30 }
					raw_text = "Explore Objects"
					onclick = "[ExecuteConsoleCommand('explorer')]"
					tintcolor = { 1 0.5 0.1 0.8 }
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding

				dockable_button = {
					layoutpolicy_horizontal = expanding
					size = { 0 30 }
					raw_text = "Reload Textures"
					onclick = "[ExecuteConsoleCommand('reload texture')]"
					tintcolor = { 0.9 0.9 0 0.8 }
					raw_tooltip = "Reload all game textures from disk"
				}

				dockable_button  = {
					layoutpolicy_horizontal = expanding
					size = { 0 30 }
					raw_text = "GUI Editor"
					onclick = "[ExecuteConsoleCommand('gui_editor')]"
					tintcolor = { 0.9 0.9 0 0.8 }
					raw_tooltip = "Visualize and edit GUI widgets"
				}

				dockable_button = {
					layoutpolicy_horizontal = expanding
					size = { 0 30 }
					raw_text = "Gui.Debug"
					onclick = "[ExecuteConsoleCommand('Gui.Debug')]"
					tintcolor = { 0.9 0.9 0 0.8 }
					raw_tooltip = "Visualize GUI widgets"
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding

				#dockable_button = {
				#	layoutpolicy_horizontal = expanding
				#	size = { 0 30 }
				#	raw_text = "Test Window"
				#	onclick = "[ExecuteConsoleCommand('gui.CreateWidget gui/debug/test_gui.gui test_window')]"
				#	tintcolor = { 0.9 0.9 0 0.8 }
				#	raw_tooltip = "Window for GUI testing (test_gui.gui)"
				#}

				dockable_button = {
					layoutpolicy_horizontal = expanding
					size = { 0 30 }
					raw_text = "UI Library"
					onclick = "[ExecuteConsoleCommand('GUI.CreateWidget gui/debug/window_component_library.gui component_library_window')]"
					tintcolor = { 0.9 0.9 0 0.8 }
					raw_tooltip = "Open UI Library"
					visible = "[Not(ReleaseMode)]"
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding

				dockable_button = {
					layoutpolicy_horizontal = expanding
					size = { 0 30 }
					raw_text = "Debug Mode"
					onclick = "[ExecuteConsoleCommand('debug_mode')]"
					tintcolor = { 1.0 0.5 1.0 0.8 }
					raw_tooltip = "Enter/Exit Debug Mode"

					editor_textbox = {
						visible = "[InDebugMode]"
						parentanchor = right|vcenter
						position = { -11 0 }
						align = right|nobaseline
						raw_text = "Active"
						default_format = "#low"
						autoresize = yes

						background = {
							texture = "gfx/interface/_debug/pink_square_chill.png"
							spriteType = Corneredtiled
							spriteborder = { 1 1 }
							margin = { 6 1 }
						}
					}
				}

				dockable_button = {
					visible = "[IsDefaultGUIMode]"
					size = { 150 30 }
					raw_text = "Toggle Release Mode"
					onclick = "[ExecuteConsoleCommand('release_mode')]"
					tintcolor = { 0.5 0.5 0.5 0.8 }
					raw_tooltip = "Toggles build number, Error Horse, FPS Warning visibility in HUD"
				}
			}
		}
	}
}
