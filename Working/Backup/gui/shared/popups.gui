types Popups
{
	type activity_pulse_action_popup_right = widget
	{
		name = "pulse_action_popup"

		datacontext = "[Activity.GetLastWeeklyPulseAction]"

		visible_at_creation = no
		size = { 700 96 }

		parentanchor = top|right
		position = { -25 65 }
		allow_outside = yes
		layer = middle

		state = {
			name = activity_window_new_pulse_action
			on_start = "[PdxGuiWidget.Show]"
		}

		state = {
			name = _show
			next = activity_hide_activity_pulse_popup
			using = Animation_FadeIn_Standard
			on_start = "[PdxGuiWidget.AccessChild('toast_icon').TriggerAnimation('show')]"
			on_start = "[PdxGuiWidget.AccessChild('toast_paper').TriggerAnimation('show')]"
			on_start = "[PdxGuiWidget.AccessChild('toast_content').TriggerAnimation('show')]"
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Standard
			duration = 1
			on_start = "[PdxGuiWidget.AccessChild('toast_icon').TriggerAnimation('hide')]"
			on_start = "[PdxGuiWidget.AccessChild('toast_paper').TriggerAnimation('hide')]"
			on_start = "[PdxGuiWidget.AccessChild('toast_content').TriggerAnimation('hide')]"
		}

		state = {
			name = activity_hide_activity_pulse_popup
			delay = 5
			on_start = "[PdxGuiWidget.Hide]"
		}

		widget = {
			visible = "[ActivityPulseEffect.IsValid]"
			size = { 100% 100% }

			widgetanchor = center
			parentanchor = center
			alwaystransparent = yes

			block "bg_parchment" {
				background = {
					texture = "gfx/interface/hud/toast_blue_bg.dds"
					spriteType = Corneredstretched
					spriteborder = { 0 10 }
					margin = { 12 0 }

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_seamless_torn_edge_vertical.dds"
						spriteType = corneredtiled
						spriteborder_right = 2250
						blend_mode = alphamultiply
					}
				}

				widget = {
					size = { 24 120 }
					widgetanchor = right|vcenter
					parentanchor = left|vcenter

					background = {
						layoutpolicy_vertical = expanding
						texture = "gfx/interface/hud/toast_blue_bg_edge.dds"
						spriteType = Corneredstretched
						spriteborder = { 5 20 }
					}
				}
			}

			state = {
				name = show
				next = a
				duration = 0.15

				animation = {
					alpha = 1
					bezier = { 0.7 0 0.7 1 }
				}
			}

			state = {
				name = a

				duration = 0.25
				bezier = { 0.3 0 0.7 1 }

				animation = {
					size = { 585 100 }
					bezier = { 0.8 0.3 0 1 }
				}

				animation = {
					alpha = 1
					bezier = { 0.7 0 0.7 1 }
				}
			}

			state = {
				name = hide
				using = Animation_FadeOut_Quick
				size = { -1 80 }
			}

			widget = {
				name = "toast_content"
				widgetanchor = center
				parentanchor = center
				size = { 700 100 }

				hbox = {
					layoutpolicy_horizontal = expanding
					widgetanchor = center
					parentanchor = center
					spacing = 8

					spacer = {
						size = { 10 0 }
					}

					widget = {
						name ="portrait_left"
						size = { 120 90 }

						portrait_head_small = {
							name = "portrait_left"
							datacontext = "[ActivityPulseEffect.GetLeft.Char]"
							visible = "[Character.IsValid]"
							parentanchor = center

							blockoverride "coa" {}
							blockoverride "status_icons" {}
							blockoverride "opinion_box" {}
							blockoverride "imprisonment" {}
							blockoverride "player_overlay" {}
							blockoverride "grayscale"{}
							blockoverride "TODO_debug_info" {}
						}

						coa_title_medium = {
							name = "title_left"
							datacontext = "[ActivityPulseEffect.GetLeft.Title]"
							visible = "[Title.IsValid]"
							parentanchor = center
						}

						icon_artifact = {
							name = "artifact_left"
							datacontext = "[ActivityPulseEffect.GetLeft.Artifact]"
							visible = "[Artifact.IsValid]"
							parentanchor = center
						}
					}

					vbox = {
						name = "message"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						margin_bottom = 4

						hbox = {
							name = "title"
							spacing = 4

							icon = {
								name = "action_icon"
								size = { 40 40 }
								texture = "[ActivityPulseAction.GetIcon]"
								using = tooltip_ws
							}

							text_single = {
								name = "action_title"
								text = "[ActivityPulseEffect.GetTitle]"
								fontsize_min = 10
								max_width = 420

								using = Font_Size_Medium
								using = Font_Type_Flavor
							}

							background = {
								using = Toast_Header
								using = Color_Blue
							}

						}

						text_multi = {
							name = "effects"
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							align = top|hcenter
							margin = { 4 0 }
							margin_bottom = 4

							text = [ActivityPulseEffect.GetEffectText]
							default_format = "#light_background"
							fontsize_min = 10
							max_width = 420
							using = Text_Light_Background_Overrides

							alwaystransparent = yes
						}

						expand = {}
					}

					widget = {
						name = "portrait_right"
						size = { 120 90 }

						portrait_head_small = {
							name = "portrait_right"
							datacontext = "[ActivityPulseEffect.GetRight.Char]"
							visible = "[Character.IsValid]"
							parentanchor = center

							blockoverride "coa" {}
							blockoverride "status_icons" {}
							blockoverride "opinion_box" {}
							blockoverride "imprisonment" {}
							blockoverride "player_overlay" {}
							blockoverride "grayscale"{}
							blockoverride "TODO_debug_info" {}
						}

						coa_title_medium = {
							name = "title_right"
							datacontext = "[ActivityPulseEffect.GetRight.Title]"
							visible = "[Title.IsValid]"
							parentanchor = center
						}

						icon_artifact = {
							name = "artifact_right"
							datacontext = "[ActivityPulseEffect.GetRight.Artifact]"
							visible = "[Artifact.IsValid]"
							parentanchor = center
						}
					}

					spacer = {
						size = { 10 0 }
					}
				}
			}
		}
	}

	type activity_pulse_action_popup_left = activity_pulse_action_popup_right
	{
		blockoverride "bg_parchment" {
			background = {
				texture = "gfx/interface/hud/toast_blue_bg.dds"
				mirror = horizontal
				spriteType = Corneredstretched
				spriteborder = { 0 10 }
				margin = { 12 0 }

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_seamless_torn_edge_vertical.dds"
					spriteType = corneredtiled
					spriteborder_right = 2250
					blend_mode = alphamultiply
				}
			}

			widget = {
				size = { 24 120 }
				widgetanchor = left|vcenter
				parentanchor = right|vcenter

				background = {
					layoutpolicy_vertical = expanding
					texture = "gfx/interface/hud/toast_blue_bg_edge.dds"
					mirror = horizontal
					spriteType = Corneredstretched
					spriteborder = { 5 20 }
				}
			}
		}
	}
}
