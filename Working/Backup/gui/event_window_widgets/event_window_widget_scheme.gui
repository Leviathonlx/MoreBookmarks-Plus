hbox = {
	name = "event_window_widget_scheme"
	layoutpolicy_horizontal = expanding
	datacontext = "[EventWindowWidget.GetScope.sScheme('scheme')]"
	visible = "[Scheme.GetSchemeType.IsValid]"
	allow_outside = yes
	margin = { 10 5 }

	background = {
		using = Background_Area_With_Header
	}

	vbox = {
		hbox = {
			layoutpolicy_horizontal = expanding

			button_group = {
				onclick = "[ToggleGameViewData('intrigue_window', GetPlayer.GetID)]"

				hbox = {

					text_single = {
						text = "SCHEME_WINDOW_ITEM_NAME"
						max_width = 260
						using = Font_Size_Medium
						align = left|nobaseline
						margin_left = 5
						tooltip = "SCHEME_WINDOW_TT_ITEM"
					}

					icon = {
						visible = "[Scheme.IsExposed]"
						size = { 30 30 }
						texture = "gfx/interface/icons/schemes/icon_discovered_scheme.dds"
						tooltip = "SCHEME_WINDOW_EXPOSED_TOOLTIP"
					}

					widget = {
						size = { 30 28 }
						button_play = {
							parentanchor = bottom
							onclick = "[ToggleGameViewData('intrigue_window', GetPlayer.GetID)]"
							tooltip = "tooltip_open_scheme_view"
						}
					}
					expand = {}
				}
			}

			expand = {}
		}

		hbox = {
			layoutpolicy_horizontal = expanding

			progressbar_segmented_chance = {
				name = "progress"
				tooltip = "SCHEME_ITEM_PROGRESS_TOOLTIP"
				datamodel = "[GetSegmentedProgressChanceBar( GetDefine( 'NScheme', 'STEPS_TO_PROGRESS' ), GetDefine( 'NScheme', 'PROGRESS_FRAMES' ), Scheme.GetProgress, Scheme.GetProgressChance )]"
			}

			expand = {}
		}
	}

	expand = {}

	vbox = {
		layoutpolicy_vertical = expanding

		hbox = {
			spacing = 20

			flowcontainer = {
				tooltip = "SCHEME_WINDOW_SUCCESS_TOOLTIP"
				spacing = 5

				icon = {
					name = success_icon
					size = { 25 25 }

					texture = "gfx/interface/icons/schemes/icon_scheme_success.dds"
				}

				text_single = {
					name = "success"
					parentanchor = vcenter
					text = "SCHEME_WINDOW_SUCCESS_CHANCE"
					using = Font_Size_Small
				}
			}

			flowcontainer = {
				visible = "[Scheme.IsSecret]"
				spacing = 5
				tooltip = "SCHEME_WINDOW_SECRECY_TOOLTIP"

				icon = {
					name = "secrecy_icon"
					size = { 25 25 }
					texture = "gfx/interface/icons/schemes/icon_secrecy.dds"
				}

				text_single = {
					name = "secrecy"
					parentanchor = vcenter
					text = "SCHEME_WINDOW_SECRECY"
					using = Font_Size_Small
				}
			}

		}

		expand = {}

		text_single = {
			name = "estimated_time"
			text = "SW_ESTIMATED_TIME"
			layoutpolicy_horizontal = expanding
			using = Font_Size_Small
			align = left
			tooltip = "[SelectLocalization( Scheme.IsReady, 'SCHEME_READY_TOOLTIP', Scheme.GetEstimatedTimeRemaining )]"
		}
	}
}
