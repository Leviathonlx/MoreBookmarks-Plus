######################################################
############### MARRIAGE CONFIRMATION ################
######################################################
window = {
	name = "marriage_interaction_notification_window"
	parentanchor = center
	position = { 0 40 }
	size = { 650 700 }
	layer = middle

	using = Window_Background
	using = Window_Decoration_Spike

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
	}

	vbox = {
		using = Window_Margins
		restrictparent_min = yes

		header_pattern_interaction = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "[CharacterInteractionNotificationWindow.GetContextName]"
			}

			blockoverride "button_close"
			{
				onclick = "[CharacterInteractionNotificationWindow.Close]"
			}
		}

		vbox_sender_portrait_message = {
			layoutpolicy_horizontal = expanding
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			margin_bottom = 10
			margin_top = 10

			background = {
				using = Background_Area
			}

			hbox = {
				datacontext = "[MarriageInteractionNotificationWindow.GetMarriageInfo]"
				datacontext = "[MarriageInfo.GetBaseOffer]"
				portrait_head = {
					name = "left_main_portrait"
					datacontext = "[MatchOffer.GetSecondaryActor]"
					tooltip_visible = "[Character.IsValid]"
				}

				icon = {
					name = "marriage_type"
					texture = "gfx/interface/icons/marriage_types.dds"
					size = { 60 60 }
					framesize = { 60 60 }
					frame = "[MarriageInfo.GetMarriageIconFrame]"
				}

				portrait_head = {
					name = "right_main_portrait"
					datacontext = "[MatchOffer.GetSecondaryRecipient]"

					blockoverride "portrait_transformation"
					{
						portrait_scale = { -1 1 }
						portrait_offset = { 1 0 }
					}
				}
			}
		}

		vbox_marriage_interaction_marriage_details = {
			spacing = 5
			datacontext = "[MarriageInteractionNotificationWindow.GetMarriageInfo]"
			datacontext = "[MarriageInfo.GetBaseOffer]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "icon_frame" {}

			blockoverride "marriage_details_after"
			{

				# divider_light = {
				# 	layoutpolicy_horizontal = expanding
				# }

				### Prestige
				vbox = {

					layoutpolicy_horizontal = expanding
					margin = { 10 10}
					background = {
						using = Background_Area_Dark
						margin = { 0 5 }
						margin_right = 5
						alpha = 0.5

						using = Mask_Rough_Edges
					}

					hbox = {
						expand = {}

						layoutpolicy_horizontal = expanding

						text_multi = {
							datacontext = "[MatchOffer.GetSecondaryActor]"
							name = "prestige_desc_our"
							max_width = 510
							autoresize = yes
							text = "MARRIAGE_PRESTIGE_DESC_OUR"
							tooltip = "MARRIAGE_PRESTIGE_TOOLTIP_OUR"
						}

						expand = {}
					}

					hbox = {
						expand = {}

						layoutpolicy_horizontal = expanding

						text_multi = {
							datacontext = "[MatchOffer.GetSecondaryRecipient]"
							name = prestige_desc_their
							max_width = 510
							autoresize = yes
							text = "MARRIAGE_PRESTIGE_DESC_THEIR"
							default_format = "#low"
							tooltip = "MARRIAGE_PRESTIGE_TOOLTIP_THEIR"
						}

						expand = {}
					}
				}
			}
		}


		hbox = {
			name = "answer_area"
			margin_bottom = 15
			margin_top = 10
			spacing = 10

			button_standard = {
				name = "reject_button"
				size = { 230 42 }
				text = "[CharacterInteractionNotificationWindow.GetAnswerRejectText]"
				onclick = "[CharacterInteractionNotificationWindow.Reject]"
				enabled = "[CharacterInteractionNotificationWindow.CanReject]"
			}

			button_primary = {
				name = "accept_button"
				size = { 230 42 }
				text = "[CharacterInteractionNotificationWindow.GetAnswerAcceptText]"
				onclick = "[CharacterInteractionNotificationWindow.Accept]"
				enabled = "[CharacterInteractionNotificationWindow.CanAccept]"
			}
		}
	}
}
