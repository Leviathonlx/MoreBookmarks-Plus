window = {
	using = editor_window
	name = "ai_war_coordinator_watch_window"
	parentanchor = top|left
	size = { 50% 600 }
	position = { 50% 50% }
	widgetanchor = center
	layer = top

	button = {
		using = editor_button
		name = "close_button"
		position = { -4 5 }
		size = { 20 20 }
		parentanchor = top|right
		raw_text = "x"
		align = center|nobaseline
		onclick = "[AIWarCoordinatorWatchWindow.Close]"
		shortcut = "close_window"
	}

	button = {
		using = editor_button
		position = { -28 5 }
		size = { 20 20 }
		parentanchor = top|right
		raw_text = "-"
		align = center|nobaseline
		onclick = "[AIWarCoordinatorWatchWindow.Minimize]"
	}


	button = {
		using = editor_button
		size = { 150 25 }
		position = { 10 30 }
		raw_text = "[SelectLocalization( AIWarCoordinatorWatchWindow.IsAllAttackersActive, 'Disable All Attackers', 'Enable All Attackers' )]"
		align = center|nobaseline
		onclick = "[AIWarCoordinatorWatchWindow.ToggleAllAttackers]"
	}

	button = {
		using = editor_button
		size = { 150 25 }
		position = { 170 30 }
		raw_text = "[SelectLocalization( AIWarCoordinatorWatchWindow.IsAllDefendersActive, 'Disable All Defenders', 'Enable All Defenders' )]"
		align = center|nobaseline
		onclick = "[AIWarCoordinatorWatchWindow.ToggleAllDefenders]"
	}

	button = {
		using = editor_button
		size = { 150 25 }
		position = { 340 30 }
		raw_text = "Reset All Shown Units"
		align = center|nobaseline
		onclick = "[AIWarCoordinatorWatchWindow.ResetAllShownUnits]"
	}

	scrollarea = {
		position = { 1% 60 }
		size = { 98% 535 }

		scrollbarpolicy_horizontal = always_off

		scrollbar_vertical = {
			using = editor_vertical_scrollbar
		}

		scrollwidget = {
			fixedgridbox = {
				name = "war_grid"
				datamodel = "[AIWarCoordinatorWatchWindow.AccessWarInfoItems]"
				size = { 100% 100% }
				position = { 0 0 }
				addcolumn = 100%
				addrow = 115
				maxhorizontalslots = 1

				item = {
					widget = {
						size = { 100% 110 }

						vbox = {
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding						

							hbox = {
								layoutpolicy_vertical = expanding
								layoutpolicy_horizontal = expanding	

								textbox = {
									fontsize = 14
									align = left|top
									autoresize = yes
									text = "[WarInfo.GetWar.GetName]"
								}

								expand = {}
							}

							# Test info
							war_coordinator_info = {
								datacontext = "[WarInfo.AccessGuiAttackerAiWarCoordinator]"
								blockoverride "type" {
									raw_text = "Attacker:"
								}
							}

							war_coordinator_info = {
								datacontext = "[WarInfo.AccessGuiDefenderAiWarCoordinator]"
								blockoverride "type" {
									raw_text = "Defender:"
								}
							}
							
						}
					}
				}
			}
		}
	}
}

window = {
	using = editor_window
	name = "unit_watch_window"
	parentanchor = top|left
	size = { 350 300 }
	position = { 50% 50% }
	widgetanchor = center
	layer = top

	button = {
		using = editor_button
		name = "close_button"
		position = { -4 5 }
		size = { 20 20 }
		parentanchor = top|right
		raw_text = "x"
		align = center|nobaseline
		onclick = "[AIUnitWatchWindow.Close]"
		shortcut = "close_window"
	}

	scrollarea = {
		position = { 5 30 }
		size = { 340 265 }

		scrollbarpolicy_horizontal = always_off

		scrollbar_vertical = {
			using = editor_vertical_scrollbar
		}

		scrollwidget = {
			fixedgridbox = {
				datamodel = "[AIUnitWatchWindow.AccessUnits]"
				size = { 100% 100% }
				position = { 0 0 }
				addcolumn = 100%
				addrow = 50
				maxhorizontalslots = 1

				item = {
					widget = {
						size = { 100% 50 }
						unit_info = { }
					}
				}
			}
		}
	}
}

types WarCoordinatorWatchWindow
{
	type war_coordinator_info = hbox {
		layoutpolicy_vertical = expanding
		layoutpolicy_horizontal = expanding	
		spacing = 10

		visible = "[GuiAIWarCoordinator.IsValid]"

		textbox = {
			fontsize = 14
			align = left|top
			autoresize = yes
			block "type" {
			}
		}

		button = {
			using = editor_button
			size = { 80 25 }
			raw_text = "[SelectLocalization( GuiAIWarCoordinator.IsActive, 'Disable', 'Enable' )]"
			align = center|nobaseline
			onclick = "[GuiAIWarCoordinator.ToggleActivity]"
		}

		button = {
			using = editor_button
			size = { 80 25 }
			raw_text = "[SelectLocalization( GuiAIWarCoordinator.IsShown, 'Hide', 'Show' )]"
			align = center|nobaseline
			onclick = "[GuiAIWarCoordinator.ToggleVisibility]"
		}

		button = {
			using = editor_button
			size = { 80 25 }
			raw_text = "Show Units"
			align = center|nobaseline
			visible = "[GuiAIWarCoordinator.IsShown]"
			onclick = "[GuiAIWarCoordinator.ShowUnitsList]"
		}
		expand = {}
	}
}

types UnitWatchWindow
{
	type unit_info = hbox {
		layoutpolicy_vertical = expanding
		layoutpolicy_horizontal = expanding	
		spacing = 5

		visible = "[GuiUnitInfo.IsValid]"

		button = {
			using = editor_button
			tooltip = "[GuiUnitInfo.GetWarName]"
			size = { 100 25 }
			raw_text = "[GuiUnitInfo.GetId]"
			align = center|nobaseline
			onclick = "[GuiUnitInfo.PanToUnit]"
		}

		textbox = {
			fontsize = 14
			align = left|top
			autoresize = yes
			raw_text = "[GuiUnitInfo.GetOwnerName]"
		}

		expand = {}
	}
}