### LIST TEMPLATE

window = {
	name = "dynasty_house_members_view"
	widgetid = "dynasty_house_members_view"
	size = { 750 90% }
	position = { 600 60 }
	resizable = no
	layer = middle
	allow_outside = yes

	using = Window_Movable
	using = Window_Background
	using = Window_Decoration
	using = Window_Size_CharacterList

	datacontext = "[DynastyHouseMembersWindow.GetCharacterList]"
	datacontext = "[CharacterSelectionList.GetFilterWithDefault('alive_filter', '(int32)1')]"

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		position_x = 600
		on_start = "[GetVariableSystem.Set( 'dynasty_house_members_view_open', 'true'  )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		position_x = 580
		on_start = "[GetVariableSystem.Clear( 'dynasty_house_members_view_open' )]"
	}

	vbox = {
		using = Window_Margins

		header_pattern = {
			layoutpolicy_horizontal = expanding
			
			blockoverride "header_text"
			{
				text = "[DynastyHouseMembersWindow.GetHeader]"
			}

			blockoverride "button_close"
			{
				onclick = "[DynastyHouseMembersWindow.Close]"
			}
		}

		vbox_character_list = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
	
			blockoverride "container_implementation" {
				fixedgridbox = {
					addcolumn = 650
					addrow = 92
	
					name = "characters_grid"
					datamodel_reuse_widgets = yes
					datamodel = "[CharacterSelectionList.GetList]"
					visible = "[Not(CharacterSelectionList.IsBuildingList)]"
	
					item = {
						widget_character_list_item_finder = {
							size = { 650 94 }
						}
					}
				}
	
				text_single = {
					visible = "[Not(CharacterSelectionList.HasItems)]"
					layoutpolicy_vertical = expanding
					name = "no_match"
					text = "CHARACTER_FINDER_NO_MATCH"
				}
			}
		}
	}

	window_character_filter = {
		blockoverride "addition_filter" {
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('ruler_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('religion_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('culture_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('alive_filter')]"
			}
		}
	}
}
