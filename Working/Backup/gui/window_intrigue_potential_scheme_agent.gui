window = {
	name = "potential_agent_window"
	position = { -630 110 }
	movable = no
	parentanchor = right
	allow_outside = yes
	layer = middle

	using = Window_Background_Subwindow
	using = Window_Size_CharacterList_Small

	state = {
		name = _show
		using = Animation_FadeIn_Quick

		position_x = -630
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick

		position_x = -590
	}

	vbox = {
		margin = { 4 4 }

		header_pattern = {
			layoutpolicy_horizontal = expanding
			blockoverride "header_text" {
				text = "POTENTIAL_AGENT_HEADER"
			}

			blockoverride "button_close" {
				onclick = "[PotentialAgentWindow.Close]"
			}
		}

		vbox_character_list = {
			datacontext = "[PotentialAgentWindow.GetListItems]"
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding

			blockoverride "skill_sort_buttons" {}
			blockoverride "item_size" {
				size = { 480 110 }
				layoutpolicy_horizontal = expanding
			}

			blockoverride "button_content"
			{
				vbox = {
					margin = { 10 5 }

					text_single = {
						name = "name"
						layoutpolicy_horizontal = expanding
						text = "[Character.GetUINameNoTooltip]"
						using = Font_Size_Medium
						autoresize = no
					}

					text_single = {
						name = "character_relation"
						layoutpolicy_horizontal = expanding
						text = "[Character.GetRelationToString( GetPlayer )]"
						tooltip = "EXTENDED_RELATIONS_TOOLTIP"
						default_format = "#low"
						autoresize = no
						alwaystransparent = yes
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						hbox = {
							spacing = 10

							### Success
							hbox = {
								layoutpolicy_horizontal = expanding
								tooltip = "POTENTIAL_AGENT_SUCCESS_TOOLTIP"
								spacing = 5

								icon = {
									name = success_icon
									size = { 25 25 }
									texture = "gfx/interface/icons/schemes/icon_scheme_success.dds"
								}

								text_single = {
									name = "success"
									layoutpolicy_horizontal = expanding
									text = "[CharacterListItem.GetInt( 'success' )]"
									default_format = "#high"
									using = Font_Size_Medium
									align = nobaseline
								}
							}

							### Power
							hbox = {
								layoutpolicy_horizontal = expanding
								tooltip = "POTENTIAL_AGENT_POWER_TOOLTIP"
								spacing = 5

								icon = {
									name = power_icon
									size = { 25 25 }
									texture = "gfx/interface/icons/schemes/icon_scheme_power.dds"
								}

								text_single = {
									name = "success"
									layoutpolicy_horizontal = expanding
									text = "[CharacterListItem.GetInt( 'power' )]"
									default_format = "#high"
									using = Font_Size_Medium
									align = nobaseline
								}
							}
						}

						expand = {}

						### Acceptance
						text_single = {
							name = "acceptance"
							text = "[CharacterListItem.GetText( 'acceptance' )]"
							tooltip = "[CharacterListItem.GetText( 'acceptance_desc' )]"
						}

					}
				}
			}
		}
	}

	window_character_filter = {
		datacontext = "[PotentialAgentWindow.GetListItems]"
		blockoverride "addition_filter" {
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('hook_filter')]"
			}
		}
	}
}
