template default_scrollbar_button
{
	clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_select"
}

###
### TOOLTIP PLACEMENT TEMPLATES
###

## East-South Direction (right, then down)
# Most common
template tooltip_es
{
	tooltip_type = widget
	tooltip_parentanchor = top|right
	tooltip_widgetanchor = top|left
	tooltip_verticalbehavior = slide
	tooltip_horizontalbehavior = mirror
}

## west south
template tooltip_ws
{
	tooltip_type = widget
	tooltip_parentanchor = top|left
	tooltip_widgetanchor = top|right
	tooltip_verticalbehavior = slide
	tooltip_horizontalbehavior = mirror
}

## North-East Direction (up, then right)
# Use in layouts that are horizontal
template tooltip_ne
{
	tooltip_type = widget
	tooltip_parentanchor = top|left
	tooltip_widgetanchor = bottom|left
	tooltip_verticalbehavior = mirror
	tooltip_horizontalbehavior = slide
}

# BELOW

## South-East Direction (down, then right)
# Use for "labelly" things
template tooltip_se
{
	tooltip_type = widget
	tooltip_parentanchor = bottom|left
	tooltip_widgetanchor = top|left
	tooltip_verticalbehavior = mirror
	tooltip_horizontalbehavior = slide
}

## South-West Direction (down, then left)
template tooltip_sw
{
	tooltip_type = widget
	tooltip_parentanchor = bottom|right
	tooltip_widgetanchor = top|right
	tooltip_verticalbehavior = mirror
	tooltip_horizontalbehavior = slide
}

## Straight Below
# Use if it looks nicer
template tooltip_below
{
	tooltip_type = widget
	tooltip_parentanchor = bottom|hcenter
	tooltip_widgetanchor = top|hcenter
	tooltip_verticalbehavior = mirror
	tooltip_horizontalbehavior = slide
}

## Straight Above
# Use if it looks nicer
template tooltip_above
{
	tooltip_type = widget
	tooltip_parentanchor = top|hcenter
	tooltip_widgetanchor = bottom|hcenter
	tooltip_verticalbehavior = mirror
	tooltip_horizontalbehavior = slide
}

# SPECIAL

## North-West Direction (up, then left)
# Only used in Map modes, kind of a special case to avoid overlap
template tooltip_nw
{
	tooltip_type = widget
	tooltip_parentanchor = top|right
	tooltip_widgetanchor = bottom|right
	tooltip_verticalbehavior = mirror
	tooltip_horizontalbehavior = slide
}

types Default
{
	type game_button = game_button {
		using = tooltip_es
		shaderfile = "gfx/FX/pdxgui_pushbutton.shader"
		oversound = "event:/SFX/UI/Generic/sfx_ui_generic_icon_pointer_over"
		clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_icon_select"
		button_ignore = right
	}

	type button = game_button {
		#gfxtype = framedbuttongfx
		#shaderfile = "gfx/FX/pdxgui_pushbutton.shader"
		gfxtype = buttongfx


		tooltip_offset = { 0 0 }
		#tooltop_widget = TooltipWithPaddingUsedForTooltipsInTooltips
		filter_mouse = right
		oversound = "event:/SFX/UI/Generic/sfx_ui_generic_icon_pointer_over"
		clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_icon_select"
		button_ignore = right
	}

	type button_group = button_group {
		using = tooltip_es
		oversound = "event:/SFX/UI/Generic/sfx_ui_generic_icon_pointer_over"
		clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_icon_select"
		button_ignore = right
	}

	type editbox = editbox {
		gfxtype = editboxgfx
		shaderfile = "gfx/FX/pdxgui_default.shader"
		font = "StandardGameFont"
		fontsize = 15
		fontcolor = { 0.61 0.6 0.56 1.0 } # == #medium == #color_gray; not using default_format = "#medium" because it doesn't work when there is formatting tag bug with an extra #!; it was just white in that case

		using = tooltip_above
	}

	type textbox = textbox {
		gfxtype = textboxgfx
		shaderfile = "gfx/FX/pdxgui_default.shader"
		font = "StandardGameFont"
		fontsize = 15
		fontcolor = { 0.61 0.6 0.56 1.0 } # == #medium == #color_gray; not using default_format = "#medium" because it doesn't work when there is formatting tag bug with an extra #!; it was just white in that case
		text_selectable = no

		using = tooltip_above
	}

	type video_icon = icon {
		blockoverride "icon_defaults_override" {}
		gfxtype = videogfx
	}

	type icon = icon {
		block "icon_defaults_override" {
			gfxtype = icongfx
			shaderfile = "gfx/FX/pdxgui_default.shader"
			mipmaplodbias = -1
			using = tooltip_es
		}
	}
	
	type icon_sway = icon
	{
		block "icon_defaults_override" {
			gfxtype = icongfx
			shaderfile = "gfx/FX/pdxgui_sway.shader"
			mipmaplodbias = -1
			using = tooltip_es
		}
	}

	type proportional_icon = icon {
		gfxtype = propstretchedicongfx
		shaderfile = "gfx/FX/pdxgui_default.shader"
	}

	type hbox = hbox {
		using = tooltip_es
	}

	type vbox = vbox {
		using = tooltip_es
	}

	type highlight_icon = button {
		alwaystransparent = yes
	}

	type background = background {
		shaderfile = "gfx/FX/pdxgui_default.shader"
	}

	type window = window {
		gfxtype = windowgfx
		shaderfile = "gfx/FX/pdxgui_default.shader"
		spriteType = corneredstretched
		spriteborder = { 19 19 }
		resizable = no
		filter_mouse = left|right|wheel
		layer = windows_layer

		using = tooltip_es
	}

	type progressbar = progressbar {
		gfxtype = progressbargfx
		shaderfile = "gfx/FX/pdxgui_progressbar.shader"

		using = tooltip_es
	}

	type checkbutton = checkbutton {
		gfxtype = checkbuttongfx
		shaderfile = "gfx/FX/pdxgui_pushbutton.shader"
		highlightchecked = yes
		using = tooltip_es
	}

	type scrollbar = scrollbar {
		min = 0
		max = 100
		step = 1
		page = 10
		value = 0
		alwaystransparent = no

		slider = {
			button = {
				using = default_scrollbar_button
				texture = "gfx/interface/scrollbars/scrollbar_slider.dds"
			}
		}
	}

	type scrollarea = scrollarea {
		scissor = yes
		scrollbaralign_vertical = right
		scrollbaralign_horizontal = bottom

		using = tooltip_es
	}

	type coat_of_arms_button = game_button {
		gfxtype = coatofarmsbuttongfx
		shaderfile = "gfx/FX/gui_coatofarmsbutton.shader"
		size = { 64 64 }
		oversound = "event:/SFX/UI/Generic/sfx_ui_generic_icon_pointer_over"
		clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_icon_select"
		filter_mouse = right
	}

	type progresspie = progressbar {
		gfxtype = progresspiegfx
		shaderfile = "gfx/FX/gui_progresspie.shader"

		using = tooltip_es
	}


	type container = container {
		using = tooltip_es

		#this should be fixed and not done like this
		ignoreinvisible = no
	}

	type widget = widget {
		using = tooltip_es
	}

	#this should be fixed and not done like this
	type flowcontainer = flowcontainer {
		using = tooltip_es
		ignoreinvisible = no
	}
	
	type drag_drop_icon = drag_drop_icon {
		gfxtype = icongfx
		shaderfile = "gfx/FX/pdxgui_default.shader"
		drag_drop_base_type = "icon"
	}
}
