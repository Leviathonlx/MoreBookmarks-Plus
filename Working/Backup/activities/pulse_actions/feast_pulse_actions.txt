#excellent_food
#impressed_courtly_vassal
#hook_trusting_guest
#impressed_guest_honor
#leftover_food_giveaway

excellent_food = {
	icon = public
	
	is_valid = {
		is_current_phase_active = yes
		OR = {
			AND = {
				has_activity_type = activity_wedding
				has_activity_option = {
					category = wedding_option_food
					option = wedding_food_good
				}
			}
			AND = {
				has_activity_type = activity_wedding
				has_activity_option = {
					category = wedding_option_food
					option = wedding_food_normal
				}
			}
			AND = {
				has_activity_type = activity_feast
				has_activity_option = {
					category = feast_option_courses
					option = feast_courses_good
				}
			}
			AND = {
				has_activity_type = activity_feast
				has_activity_option = {
					category = feast_option_courses
					option = feast_courses_normal
				}
			}
		}
		any_attending_character = {
			NOT = { this = scope:host }
			is_physically_able_ai_adult = yes
			location = scope:province
			OR = {
				likes_character_trigger = { CHARACTER = scope:host }
				loves_food_trigger = yes
			}
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				scope:activity = {
					has_activity_type = activity_feast
					has_activity_option = {
						category = feast_option_courses
						option = feast_courses_normal
					}
				}
			}
			add = -0.5
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_type = activity_wedding
					has_activity_option = {
						category = wedding_option_food
						option = wedding_food_normal
					}
				}
			}
			add = -0.5
		}
	}

	effect = {
		scope:host = {
			save_scope_as = root_scope
		}
		
		random_attending_character = {
			limit = {
				NOT = { this = scope:host }
				is_physically_able_ai_adult = yes
				location = scope:province
				OR = {
					likes_character_trigger = { CHARACTER = scope:host }
					loves_food_trigger = yes
				}
			}
			save_scope_as = first
		}

		add_activity_log_entry = {
			key = excellent_food
			tags = { pulse_action }
			character = scope:first
			
			scope:host = {
				add_stress = medium_stress_loss
			}
			scope:first = {
				add_opinion = {
					modifier = impressed_opinion
					target = scope:host
					opinion = 10
				}
			}
		}
	}
}
impressed_courtly_vassal = {
	icon = courtly
	
	is_valid = {
		is_current_phase_active = yes
		OR = {
			AND = {
				has_activity_type = activity_feast
				has_activity_option = {
					category = feast_option_food
					option = feast_food_good
				}
				has_activity_option = {
					category = feast_option_courses
					option = feast_courses_good
				}
			}
			AND = {
				has_activity_type = activity_wedding
				has_activity_option = {
					category = wedding_option_food
					option = wedding_food_good
				}
				has_activity_option = {
					category = wedding_option_decoration
					option = wedding_decoration_good
				}
			}
		}
		any_attending_character = {
			count >= 2
			NOT = { this = scope:host }
			is_physically_able_ai_adult = yes
			is_vassal_of = scope:host
			has_vassal_stance = courtly
			location = scope:province
		}
	}

	weight = 1

	effect = {
		random_attending_character = {
			limit = {
				NOT = { this = scope:host }
				is_physically_able_ai_adult = yes
				is_vassal_of = scope:host
				has_vassal_stance = courtly
				location = scope:province
			}
			save_scope_as = first
		}
		random_attending_character = {
			limit = {
				NOT = { this = scope:host }
				is_physically_able_ai_adult = yes
				is_vassal_of = scope:host
				has_vassal_stance = courtly
				location = scope:province
				NOT = { this = scope:first }
			}
			save_scope_as = second
		}

		add_activity_log_entry = {
			key = impressed_courtly_vassal
			tags = { pulse_action }
			character = scope:first
			target = scope:second
			
			scope:host = {
				add_prestige = medium_prestige_gain
			}
			
			scope:first = {
				add_opinion = {
					modifier = impressed_opinion
					target = scope:host
					opinion = 20
				}
			}
			
			scope:second = {
				add_opinion = {
					modifier = impressed_opinion
					target = scope:host
					opinion = 20
				}
			}
		}
	}
}

hook_trusting_guest = {
	icon = hook
	
	is_valid = {
		is_current_phase_active = yes
		any_attending_character = {
			NOT = { this = scope:host }
			has_trait = trusting
			is_ai = yes
			location = scope:province
			save_temporary_scope_as = first_temp
		}
		any_attending_character = {
			NOT = { this = scope:first_temp }
			location = scope:province
			can_add_hook = {
				target = scope:first_temp
				type = favor_hook
			}
		}
	}

	weight = 1

	effect = {
		random_attending_character = {
			limit = {
				NOT = { this = scope:host }
				location = scope:province
				has_trait = trusting
				is_ai = yes
				save_temporary_scope_as = first_temp
				scope:activity = {
					any_attending_character = {
						NOT = { this = scope:first_temp }
						location = scope:province
						can_add_hook = {
							target = scope:first_temp
							type = favor_hook
						}
					}
				}
			}
			save_scope_as = first
		}
		random_attending_character = {
			limit = {
				location = scope:province
				NOT = { this = scope:first }
				can_add_hook = {
					target = scope:first
					type = favor_hook
				}
			}
			weight = {
				base = 1
				modifier = {
					add = 10
					is_ai = no
				}
				modifier = {
					add = 10
					this = scope:host
				}
			}
			save_scope_as = second
		}

		add_activity_log_entry = {
			key = hook_trusting_guest
			tags = { pulse_action }
			character = scope:second
			target = scope:first
			
			scope:second = {
				add_hook = {
					target = scope:first
					type = favor_hook
				}
			}
		}
	}
}

impressed_guest_honor = {
	icon = public
	
	is_valid = {
		is_current_phase_active = yes
		special_guest:honorary_guest_regular ?= {
			is_alive = yes
		}
		any_attending_character = {
			NOT = { this = scope:host }
			NOT = { this = scope:activity.special_guest:honorary_guest_regular }
			is_physically_able_ai_adult = yes
			location = scope:province
			likes_character_trigger = { CHARACTER = scope:host }
		}
	}

	weight = 1

	effect = {
		special_guest:honorary_guest_regular = {
			save_scope_as = first
		}
		random_attending_character = {
			limit = {
				NOT = { this = scope:host }
				NOT = { this = scope:activity.special_guest:honorary_guest_regular }
				is_physically_able_ai_adult = yes
				location = scope:province
				likes_character_trigger = { CHARACTER = scope:host }
			}
			save_scope_as = second
		}

		add_activity_log_entry = {
			key = impressed_guest_honor
			tags = { pulse_action }
			character = scope:second
			target = scope:first
			
			scope:host = {
				add_prestige = minor_prestige_gain
			}
			
			scope:first = {
				add_opinion = {
					modifier = honored_opinion
					target = scope:host
					opinion = 20
				}
				add_opinion = {
					modifier = honored_opinion
					target = scope:second
					opinion = 30
				}
			}
		}
	}
}

leftover_food_giveaway = {
	icon = public
	is_valid = {
		is_current_phase_active = yes
		has_activity_option = {
			category = feast_option_courses
			option = feast_courses_good
		}
		exists = scope:province.county.holder
		scope:province.county ?= {
			NOT = { has_county_modifier = leftover_food_giveaway_modifier }
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = feast_option_food
						option = feast_food_bad
					}
				}
			}
			add = -0.5
		}
	}

	effect = {		
		add_activity_log_entry = {
			key = leftover_food_giveaway
			tags = { pulse_action }
			character = scope:host
			
			scope:province.county = {
				add_county_modifier = {
					modifier = leftover_food_giveaway_modifier
					years = 5
				}
			}
		}
	}
}

virtuous_feast = {
	icon = courtly
	is_valid = {
		is_current_phase_active = yes
		any_attending_character = {
			is_physically_able_ai_adult = yes
			location = scope:province
			faith = {
				OR = {
					has_doctrine = tenet_ritual_hospitality
					has_doctrine = tenet_ritual_celebrations
				}
			}
		}
	}

	weight = {
		value = 1
	}

	effect = {		
		random_attending_character = {
			limit = {
				is_physically_able_ai_adult = yes
				location = scope:province
				faith = {
					OR = {
						has_doctrine = tenet_ritual_hospitality
						has_doctrine = tenet_ritual_celebrations
					}
				}
			}
			save_scope_as = first
		}
		
		add_activity_log_entry = {
			key = virtuous_feast
			tags = { pulse_action }
			character = scope:first
			
			scope:first = {
				add_piety = minor_piety_gain
			}
		}
	}
}

noble_privileges = {
	icon = intrigue
	is_valid = {
		is_current_phase_active = yes
		OR = {
			has_activity_option = {
				category = feast_option_courses
				option = feast_courses_good
			}
			has_activity_option = {
				category = feast_option_food
				option = feast_food_good
			}
		}
		any_attending_character = {
			location = scope:province
			is_vassal_of = scope:host
			is_physically_able_ai_adult = yes
			OR = {
				has_trait = callous
				has_trait = sadistic
				has_trait = diligent
				has_trait = just
				has_trait = greedy
			}
		}
		scope:province.county ?= {
			county_control <= low_county_control
			NOT = { has_county_modifier = noble_privileges_modifier }
		}
	}

	weight = {
		value = 1
	}

	effect = {
		random_attending_character = {
			limit = {
				location = scope:province
				is_vassal_of = scope:host
				is_physically_able_ai_adult = yes
				OR = {
					has_trait = callous
					has_trait = sadistic
					has_trait = diligent
					has_trait = just
					has_trait = greedy
				}
			}
			save_scope_as = first
		}
		
		scope:province.county = { save_scope_as = location }

		add_activity_log_entry = {
			key = noble_privileges
			tags = { pulse_action }
			character = scope:first
			
			scope:first = { add_prestige = minor_prestige_gain }
			
			scope:province.county = {
				add_county_modifier = {
					modifier = noble_privileges_modifier
					years = 5
				}
			}
		}
	}
}

good_kitty = {
	icon = public
	is_valid = {
		is_current_phase_active = yes
		any_attending_character = {
			location = scope:province
			OR = {
				has_character_modifier = cat_story_modifier
				has_cat_trigger = yes
			}
			save_temporary_scope_as = pet_owner_temp
		}
		any_attending_character = {
			location = scope:province
			NOT = { this = scope:pet_owner_temp }
			NOT = { has_character_modifier = cat_story_allergy_modifier }
			NOT = { has_trait = callous }
		}
	}

	weight = {
		value = 1
	}

	effect = {
		random_attending_character = {
			limit = {
				location = scope:province 
				OR = {
					has_character_modifier = cat_story_modifier
					has_cat_trigger = yes
				}
				has_character_modifier = cat_story_modifier
				save_temporary_scope_as = pet_owner_temp
				scope:activity = {
					any_attending_character = {
						location = scope:province
						NOT = { this = scope:pet_owner_temp }
						NOT = { has_character_modifier = cat_story_allergy_modifier }
						NOT = { has_trait = callous }
					}
				}
			}
			save_scope_as = second
		}
		
		random_attending_character = {
			limit = {
				NOT = { this = scope:second }
				location = scope:province
				NOT = { has_character_modifier = cat_story_allergy_modifier }
				NOT = { has_trait = callous }
			}
			save_scope_as = first
		}

		add_activity_log_entry = {
			key = good_kitty
			tags = { pulse_action }
			character = scope:first
			target = scope:second
			
			scope:first = {
				add_opinion = {
					target = scope:second 
					opinion = 20
					modifier = pet_pet
				}
			}
		}
	}
}

good_puppy = {
	icon = public
	is_valid = {
		is_current_phase_active = yes
		any_attending_character = {
			location = scope:province
			OR = {
				has_character_modifier = dog_story_modifier
				has_dog_trigger = yes
			}
			save_temporary_scope_as = pet_owner_temp
		}
		any_attending_character = {
			NOT = { this = scope:pet_owner_temp }
			location = scope:province
			NOT = { has_trait = callous }
		}
	}

	weight = {
		value = 1
	}

	effect = {
		random_attending_character = {
			limit = {
				location = scope:province
				OR = {
					has_character_modifier = dog_story_modifier
					has_dog_trigger = yes
				}
				save_temporary_scope_as = pet_owner_temp
				scope:activity = {
					any_attending_character = {
						NOT = { this = scope:pet_owner_temp }
						location = scope:province
						NOT = { has_trait = callous }
					}
				}
			}
			save_scope_as = second
		}
		
		random_attending_character = {
			limit = {
				NOT = { this = scope:second }
				location = scope:province
				NOT = { has_trait = callous }
			}
			save_scope_as = first
		}

		add_activity_log_entry = {
			key = good_puppy
			tags = { pulse_action }
			character = scope:first
			target = scope:second
			
			scope:first = {
				add_opinion = {
					target = scope:second 
					opinion = 20
					modifier = pet_pet
				}
			}
		}
	}
}

antiquarian_admires_artifact = {
	icon = public
	is_valid = {
		is_current_phase_active = yes
		any_attending_character = {
			location = scope:province
			is_physically_able_ai_adult = yes
			OR = {
				learning >= high_skill_rating
				has_court_position = antiquarian_court_position
			}
		}
		scope:host = {
			any_character_artifact = {
				category = inventory
				NOT = { rarity = common }
			}
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				any_attending_character = {
					has_court_position = antiquarian_court_position
					location = scope:province
					is_physically_able_ai_adult = yes
				}
			}
			add = 2
		} 
	}

	effect = {
		if = {
			limit = {
				any_attending_character = {
					has_court_position = antiquarian_court_position
					location = scope:province
					is_physically_able_ai_adult = yes
				}
			}
			random_attending_character = {
				limit = {
					has_court_position = antiquarian_court_position
					location = scope:province
					is_physically_able_ai_adult = yes
				}
				save_scope_as = first
			}
		}
		else = {
			random_attending_character = {
				limit = {
					location = scope:province
					is_physically_able_ai_adult = yes
					learning >= high_skill_rating
				}
				save_scope_as = first
			}
		}
		
		scope:host = {
			random_character_artifact = {
				limit = {
					category = inventory
					NOT = { rarity = common }
				}
				save_scope_as = artifact
				save_scope_as = second
			}
		}

		add_activity_log_entry = {
			key = antiquarian_admires_artifact
			tags = { pulse_action }
			character = scope:first
			
			scope:host = {
				add_prestige = minor_prestige_gain
			}
		}
	}
}

jester_entertained_guests = {
	icon = public
	is_valid = {
		is_current_phase_active = yes
		any_attending_character = {
			location = scope:province
			is_physically_able_ai_adult = yes
			OR = {
				has_court_position = court_jester_court_position
				has_activity_intent = banquet_mischief_intent
			}
			save_temporary_scope_as = temp_jester
		}
		any_attending_character = {
			location = scope:province
			NOT = { this = scope:temp_jester }
		}
	}

	weight = {
		value = 1
		if = {
			limit = {
				any_attending_character = {
					location = scope:province
					is_physically_able_ai_adult = yes
					has_court_position = court_jester_court_position
				}
			}
			add = 1
		}
	}

	effect = {
		random_attending_character = {
			limit = {
				location = scope:province
				is_physically_able_ai_adult = yes
				OR = {
					has_court_position = court_jester_court_position
					has_activity_intent = banquet_mischief_intent
				}
			}
			save_scope_as = first
		}
		
		random_attending_character = {
			limit = {
				location = scope:province
				NOT = { this = scope:first }
			}
			save_scope_as = second
		}

		add_activity_log_entry = {
			key = jester_entertained_guests
			tags = { pulse_action }
			character = scope:first
			
			scope:second = {
				add_stress = minor_stress_loss
			}
		}
	}
}

apa_executioner = {
	icon = dread
	is_valid = {
		is_current_phase_active = yes
		any_attending_character = {
			location = scope:province
			is_physically_able_ai_adult = yes
			has_court_position = executioner_court_position
			exists = employer
		}
	}

	weight = {
		value = 2
	}

	effect = {
		random_attending_character = {
			limit = {
				location = scope:province
				is_physically_able_ai_adult = yes
				has_court_position = executioner_court_position
				exists = employer
			}
			save_scope_as = first
			employer = {
				save_scope_as = second
			}
		}

		add_activity_log_entry = {
			key = apa_executioner
			tags = { pulse_action }
			character = scope:second
			
			scope:second = {
				add_dread = minor_dread_gain
			}
		}
	}
}
