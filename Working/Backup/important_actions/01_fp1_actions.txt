### CAN CHALLENGE TO SINGLE COMBAT

action_can_challenge_to_single_combat = {
	priority = 1000
	combine_into_one = yes

	check_create_action = {
		# Do you have the DLC?
		if = {
			limit = { has_fp1_dlc_trigger = yes }
			# First, do you meet the requirements to start a TbC?
			if = {
				limit = { basic_can_have_trial_by_combat_trigger = yes }
				# Next, do you have anyone you could possibly start one again?
				## Technically, we'll be missing out a few options here, but we *should* get most of them this way.
				## Relations.
				every_relation = {
					type = rival
					limit = {
						root = {
							is_character_interaction_potentially_accepted = {
								recipient = prev
								interaction = challenge_to_trial_by_combat_interaction
							}
						}
					}
					try_create_important_action = {
						important_action_type = action_can_challenge_to_single_combat
						actor = root
						recipient = this
					}
				}
				## Co-vassals.
				if = {
					limit = { is_independent_ruler = no }
					top_liege = {
						every_vassal_or_below = {
							limit = {
								root = {
									is_character_interaction_potentially_accepted = {
										recipient = prev
										interaction = challenge_to_trial_by_combat_interaction
									}
								}
							}
							try_create_important_action = {
								important_action_type = action_can_challenge_to_single_combat
								actor = root
								recipient = this
							}
						}
					}
				}
				every_ruler = {
					limit = {
						root = {
							is_character_interaction_potentially_accepted = {
								recipient = prev
								interaction = challenge_to_trial_by_combat_interaction
							}
						}
					}
					try_create_important_action = {
						important_action_type = action_can_challenge_to_single_combat
						actor = root
						recipient = this
					}
				}
			}
		}
	}

	unimportant = {}

	effect = {
		# And open the appropriate TbC window.
		open_interaction_window = {
			interaction = challenge_to_trial_by_combat_interaction
			actor = scope:actor
			recipient = scope:recipient
		}
	}
}

action_can_make_shieldmaiden = {
	priority = 900
	combine_into_one = yes
	check_create_action = {
		# Do you have the DLC?
		if = {
			limit = { has_fp1_dlc_trigger = yes }
			every_close_family_member = {
				limit = {
					root = {
						is_character_interaction_potentially_accepted = {
							recipient = prev
							interaction = designate_shieldmaiden_interaction
						}
					}
				}
				try_create_important_action = {
					important_action_type = action_can_make_shieldmaiden
					actor = root
					recipient = this
				}
			}
		}
	}

	effect = {
		open_interaction_window = {
			interaction = designate_shieldmaiden_interaction
			actor = scope:actor
			recipient = scope:recipient
		}
	}
}
