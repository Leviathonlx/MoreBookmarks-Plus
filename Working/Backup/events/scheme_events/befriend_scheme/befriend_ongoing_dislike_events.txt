# Events for befriending someone who has a middling opinion of you

namespace = befriend_ongoing_dislike

#NOTE: At less than -50 opinion, progress should be minimal until the character has successfully increased opinion somewhat.
# The Scheme will revert to a "regular" Befriend Scheme at -20 opinion or higher.

# 0000-0999: General
# 1000-1999: Scheme owner based
# 2000-2999: Scheme target based
# 3000-3999: Agent based
# 4000-4999: Great personality match events
# 5000-5999: Bad personality match events
# 9000-9999: Early outcome events


# Send a gift!
befriend_ongoing_dislike.0001 = {
	type = character_event
	title = befriend_ongoing_dislike.0001.t
	desc = befriend_ongoing_dislike.0001.desc
	theme = befriend_scheme

	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		NOT = { exists = scope:scheme.var:had_gift_event }
		gold > minor_gold_value_check
	}

	immediate = {
		scope:scheme = {
			set_variable = {
				name = had_gift_event
				value = yes
				days = 365
			}
			scheme_target = {
				save_scope_as = target
			}
		}
	}

	option = { #A grand gift
		name = befriend_ongoing_dislike.0001.a
		remove_short_term_gold = medium_gold_value
		scope:scheme = {
			add_scheme_progress = scheme_progress_gain
		}
		stress_impact = {
			greedy = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				short_term_gold < medium_gold_value_check
			}
			compare_modifier = {
				value = ai_greed
				multiplier = -1
			}
		}
	}

	option = { #A reasonable gift
		name = befriend_ongoing_dislike.0001.b
		remove_short_term_gold = minor_gold_value
		scope:scheme = {
			add_scheme_modifier = {
				type = cheap_gift_modifier
				days = 300
			}
		}
		stress_impact = {
			greedy = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				short_term_gold < minor_gold_value_check
			}
			compare_modifier = {
				value = ai_greed
				multiplier = -0.5
			}
		}
	}

	option = { #No gift
		name = befriend_ongoing_dislike.0001.c

		ai_chance = {
			base = 10
			compare_modifier = {
				value = ai_energy
				multiplier = -1
				min = -9 #This option should always be possible
			}
		}
	}
}


############
# Target that really doesn't like owner isn't interested
############
befriend_ongoing_dislike.0002 = {
	type = character_event
	title = befriend_ongoing_dislike.0002.t
	desc = befriend_ongoing_dislike.0002.desc
	theme = befriend_scheme

	left_portrait = {
		character = scope:target
		animation = dismissal
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:scheme.scheme_target = {
			opinion = {
				target = scope:owner
				value < -50
			}
		}
		scope:scheme = {
			NOT = {
				has_scheme_modifier = target_hates_owner_modifier
			}
		}
	}
	
	option = {
		name = befriend_ongoing_dislike.0002.a
		scope:scheme = {
			add_scheme_modifier = {
				type = target_hates_owner_modifier
				days = 750
			}
		}
	}
}


####################
# Target that doesn't like Owner is bothered by insistence
####################
befriend_ongoing_dislike.0003 = {
	type = character_event
	title = befriend_ongoing_dislike.0003.t
	desc = befriend_ongoing_dislike.0003.desc
	theme = befriend_scheme

	left_portrait = {
		character = scope:target
		animation = dismissal
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:scheme.scheme_target = {
			opinion = {
				target = scope:owner
				value < -30
			}
		}
		scope:scheme = {
			scheme_progress > 5
			NOT = {
				has_scheme_modifier = target_tired_of_insistence_modifier
			}
		}
	}
	
	option = {
		name = befriend_ongoing_dislike.0003.a
		scope:scheme = {
			add_scheme_modifier = {
				type = target_tired_of_insistence_modifier
				days = 750
			}
		}
	}
}


####################
# Target rebuffing advances
####################
befriend_ongoing_dislike.0004 = {
	type = character_event
	title = befriend_ongoing_dislike.0004.t
	desc = befriend_ongoing_dislike.0004.desc
	theme = befriend_scheme

	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:scheme = {
			scheme_progress > 5
			NOT = {
				exists = var:had_target_rebuffed_event
			}
		}
	}

	immediate = {
		scope:scheme = {
			set_variable = {
				name = had_target_rebuffed_event
				value = yes
				days = 1825
			}
			scheme_target = {
				save_scope_as = target
			}
		}
	}
	
	option = {
		name = befriend_ongoing_dislike.0004.b
		trigger = {
			diplomacy > 15
		}
		skill = diplomacy
		ai_chance = {
			base = 100
		}
	}

	option = {
		name = befriend_ongoing_dislike.0004.a
		scope:scheme = {
			add_scheme_modifier = {
				type = rebuffing_friendship_modifier
				days = 720
			}
		}
		ai_chance = {
			base = 10
		}
	}
}

####################
# Softening disposition
####################
befriend_ongoing_dislike.0005 = {
	type = character_event
	title = befriend_ongoing_dislike.0005.t
	desc = befriend_ongoing_dislike.0005.desc
	theme = befriend_scheme
	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:scheme = {
			scheme_progress > 1
			NOT = {
				exists = var:had_softening_disposition_event
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			factor = 0.3
			scope:scheme.scheme_target = {
				has_opinion_modifier = {
					target = scope:owner
					modifier = softening_disposition_opinion
				}
			}
		}
	}

	immediate = {
		scope:scheme = {
			set_variable = {
				name = had_softening_disposition_event
				value = yes
			}
		}
	}
	
	option = {
		name = befriend_ongoing_dislike.0005.a
		scope:target = {
			add_opinion = {
				modifier = softening_disposition_opinion
				target = scope:owner
			}
		}
	}
}


################################################
# SCHEME TARGET BASED EVENTS
# 2000-2999
################################################

#####
# A Gregarious target makes things uncomfortable...
#####
befriend_ongoing_dislike.2001 ={
	type = character_event
	title = befriend_ongoing_dislike.2001.t
	desc = befriend_ongoing_dislike.2001.desc
	theme = befriend_scheme
	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:target = {
			has_trait = gregarious
		}
		NOT = { exists = scope:scheme.var:had_gregarious_target_event }
		scope:scheme = {
			NOT = { has_scheme_modifier = befriend_gregarious_target_modifier }
		}
	}

	immediate = {
		scope:scheme = {
			set_variable = {
				name = had_gregarious_target_event
				value = yes
				days = 365
			}
			scheme_target = {
				save_scope_as = target
			}
		}
	}

	option = { #I am deeply offended!
		name = befriend_ongoing_dislike.2001.a
		scope:scheme = {
			add_scheme_modifier = {
				type = gregarious_target_dislikes_modifier
				days = 1200
			}
		}
		
		stress_impact = {
			shy = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			compare_modifier = {
				value = ai_vengefulness
				multiplier = 2
				min = 0
			}
			compare_modifier = {
				value = ai_boldness
				multiplier = 0.5
			}
		}
	}

	option = { #I'll let it slide
		name = befriend_ongoing_dislike.2001.b
		scope:scheme = {
			add_scheme_progress = scheme_progress_loss
		}
		stress_impact = {
			vengeful = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			compare_modifier = {
				value = ai_energy
				multiplier = -1
			}
			compare_modifier = {
				value = ai_rationality
				multiplier = 0.3
			}
		}
	}
}


######
# Shy Target is difficult to deal with
######
befriend_ongoing_dislike.2002 = {
	type = character_event
	title = befriend_ongoing_dislike.2002.t
	desc = befriend_ongoing_dislike.2002.desc
	theme = befriend_scheme
	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:scheme = {
			NOT = { exists = var:had_shy_target_event }
			scheme_progress > 1
		}
		scope:scheme.scheme_target = {
			has_trait = shy
		}
	}

	immediate = {
		scope:scheme = {
			set_variable = {
				name = had_shy_target_event
				value = yes
				days = 1200
			}
		}
	}

	option = { #I will give them the space they want.
		name = befriend_ongoing_dislike.2002.a
		scope:scheme = {
			add_scheme_modifier = {
				type = slow_approach_modifier
				days = 720
			}
		}
		stress_impact = {
			gregarious = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			compare_modifier = {
				value = ai_compassion
				min = -99
			}
			modifier = {
				factor = 0.5
				scope:scheme = {
					scheme_progress > 8
				}
			}
		}
	}

	option = { #They will become my friend whether they want to or not!
		name = befriend_ongoing_dislike.2002.b
		scope:scheme = {
			add_scheme_modifier = {
				type = forced_shy_communication_modifier
				days = 1825
			}
		}
		scope:target = {
			add_opinion = {
				target = scope:owner
				modifier = forced_shy_communication_opinion
			}
		}
		stress_impact = {
			shy = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			compare_modifier = {
				value = ai_energy
				min = -99
			}
		}
	}
}

############################################
# PERSONALITY MATCH/MISMATCH
# 5000-5999
############################################

#####
# Cynical Owner tries to befriend Zealous Target
#####
befriend_ongoing_dislike.5001 = {
	type = character_event
	title = befriend_ongoing_dislike.5001.t
	desc = befriend_ongoing_dislike.5001.desc
	theme = befriend_scheme

	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:scheme.scheme_owner = {
			has_trait = cynical
		}
		scope:scheme.scheme_target = {
			has_trait = zealous
		}
		scope:scheme = {
			NOT = { exists = var:had_cynical_zealous_event }
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = -0.5
			scope:scheme = {
				scheme_progress < 3
			}
		}
		modifier = {
			add = 0.5
			scope:scheme = {
				scheme_progress > 7
			}
		}
	}

	immediate = {
		scope:scheme = {
			set_variable = {
				name = had_cynical_zealous_event
				value = yes
				days = default_scheme_event_cooldown_duration_value
			}
		}
	}

	option = { #Try ever harder
		name = befriend_ongoing_dislike.5001.a
		scope:target = {
			add_opinion = {
				modifier = cynical_vs_zealous_befriend_opinion
				target = scope:owner
			}
		}

		stress_impact = {
			cynical = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_energy = 0.5
			}
			compare_modifier = {
				value = stress
				offset = -25
				multiplier = -1
			}
			modifier = {
				factor = 0.1
				stress >= major_stress_gain_threshold
			}
		}
	}

	option = { #Sigh, this is too much
		name = befriend_ongoing_dislike.5001.b
		scope:scheme = {
			add_scheme_progress = scheme_progress_loss
		}

		stress_impact = {
			stubborn = minor_stress_impact_gain
		}

		ai_chance = {
			base = 50
		}
	}

	option = { #Who really cares about the doubts I harbor?
		name = befriend_ongoing_dislike.5001.c
		trigger = {
			has_trait = fickle
		}
		trait = fickle
		scope:target = {
			add_opinion = {
				modifier = cynical_vs_zealous_befriend_opinion
				target = scope:owner
			}
		}
		exclusive = yes
	}
}



#####
# Trusting Owner tries to befriend Cynical Target
#####
befriend_ongoing_dislike.5002 = {
	type = character_event
	title = befriend_ongoing_dislike.5002.t
	desc = befriend_ongoing_dislike.5002.desc
	theme = befriend_scheme

	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:scheme.scheme_owner = {
			has_trait = trusting
		}
		scope:scheme.scheme_target = {
			has_trait = cynical
		}
		scope:scheme = {
			NOT = { exists = var:had_trusting_cynical_event }
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = -0.5
			scope:scheme = {
				scheme_progress < 3
			}
		}
		modifier = {
			add = 0.5
			scope:scheme = {
				scheme_progress > 7
			}
		}
	}

	immediate = {
		scope:scheme = {
			set_variable = {
				name = had_trusting_cynical_event
				value = yes
				days = default_scheme_event_cooldown_duration_value
			}
		}
	}

	option = { #I will be insistent, but not lie about who I am.
		name = befriend_ongoing_dislike.5002.a
		scope:target = {
			add_opinion = {
				modifier = trusting_vs_cynical_befriend_opinion
				target = scope:owner
			}
		}

		stress_impact = {
			deceitful = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
		}
	}

	option = { #Um, yes, maybe I am trying to gain something...
		name = befriend_ongoing_dislike.5002.b
		scope:scheme = {
			add_scheme_progress = scheme_progress_loss
		}

		stress_impact = {
			trusting = medium_stress_impact_gain
			honest = minor_stress_impact_gain
		}

		ai_chance = {
			base = 75
			compare_modifier = {
				value = stress
				offset = -25
				multiplier = -1
			}
			modifier = {
				factor = 0.1
				stress >= mental_break_opt_out_stress_gain
			}
		}
	}
}


#####
# Gregarious Owner tries to befriend Depressed Target
#####
befriend_ongoing_dislike.5003 = {
	type = character_event
	title = befriend_ongoing_dislike.5003.t
	desc = befriend_ongoing_dislike.5003.desc
	theme = befriend_scheme

	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:scheme.scheme_owner = {
			has_trait = gregarious
		}
		scope:scheme.scheme_target = {
			has_trait = depressed
		}
		scope:scheme = {
			NOT = { exists = var:had_gregarious_depressed_event }
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = -0.5
			scope:scheme = {
				scheme_progress < 3
			}
		}
		modifier = {
			add = 0.5
			scope:scheme = {
				scheme_progress > 7
			}
		}
	}

	immediate = {
		scope:scheme = {
			set_variable = {
				name = had_gregarious_depressed_event
				value = yes
				days = default_scheme_event_cooldown_duration_value
			}
		}
	}

	option = { #They should just get over it already!
		name = befriend_ongoing_dislike.5003.a
		scope:target = {
			add_opinion = {
			modifier = gregarious_vs_depressed_befriend_opinion
				target = scope:owner
			}
		}

		ai_chance = {
			base = 100
			ai_value_modifier ={
				ai_boldness = 1
			}
		}
	}

	option = { #I will give them space
		name = befriend_ongoing_dislike.5003.b
		scope:scheme = {
			add_scheme_progress = scheme_progress_loss
		}

		stress_impact = {
			gregarious = medium_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = 1
			}
			compare_modifier = {
				value = stress
				offset = -25
				multiplier = -1
			}
		}
	}
}


#####
# Gluttonous Owner tries to befriend Temperate Target
#####
befriend_ongoing_dislike.5004 = {
	type = character_event
	title = befriend_ongoing_dislike.5004.t
	desc = befriend_ongoing_dislike.5004.desc
	theme = befriend_scheme

	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:scheme.scheme_owner = {
			has_trait = gluttonous
		}
		scope:scheme.scheme_target = {
			has_trait = temperate
		}
		scope:scheme = {
			NOT = { exists = var:had_gluttonous_temperate_event }
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = -0.5
			scope:scheme = {
				scheme_progress < 3
			}
		}
		modifier = {
			add = 0.5
			scope:scheme = {
				scheme_progress > 7
			}
		}
	}

	immediate = {
		scope:scheme = {
			set_variable = {
				name = had_gluttonous_temperate_event
				value = yes
				days = default_scheme_event_cooldown_duration_value
			}
		}
	}

	option = {
		name = befriend_ongoing_dislike.5004.a
		scope:target = {
			add_opinion = {
				modifier = gluttonous_vs_temperate_befriend_opinion
				target = scope:owner
			}
		}

		stress_impact = {
			gluttonous = medium_stress_impact_gain
			greedy = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
		}

		ai_chance = {
			base = 75
			compare_modifier = {
				value = stress
				offset = -25
				multiplier = -1
			}
			modifier = {
				factor = 0.1
				stress >= mental_break_opt_out_stress_gain
			}
			ai_value_modifier = {
				ai_honor = 1
				ai_rationality = 0.3
			}
		}
	}

	option = {
		name = befriend_ongoing_dislike.5004.b
		scope:scheme = {
			add_scheme_progress = scheme_progress_loss
		}

		stress_impact = {
			deceitful = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_greed = 1
				min = -99
				max = 100
			}
		}
	}
}


#####
# Ambitious Owner tries to befriend Content Target
#####
befriend_ongoing_dislike.5005 = {
	type = character_event
	title = befriend_ongoing_dislike.5005.t
	desc = befriend_ongoing_dislike.5005.desc
	theme = befriend_scheme

	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:scheme.scheme_owner = {
			has_trait = ambitious
		}
		scope:scheme.scheme_target = {
			has_trait = content
		}
		scope:scheme = {
			NOT = { exists = var:had_ambitious_content_event }
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = -0.5
			scope:scheme = {
				scheme_progress < 3
			}
		}
		modifier = {
			add = 0.5
			scope:scheme = {
				scheme_progress > 7
			}
		}
	}

	immediate = {
		scope:scheme = {
			set_variable = {
				name = had_ambitious_content_event
				value = yes
				days = default_scheme_event_cooldown_duration_value
			}
			scheme_target = {
				save_scope_as = target
			}
			scheme_owner = {
				save_scope_as = owner
			}
		}
	}

	option = {
		name = befriend_ongoing_dislike.5005.a
		scope:target = {
			add_opinion = {
				modifier = ambitious_vs_content_befriend_opinion
				target = scope:owner
			}
		}

		stress_impact = {
			ambitious = medium_stress_impact_gain
			arrogant = minor_stress_impact_gain
		}

		ai_chance = {
			base = 75
			compare_modifier = {
				value = stress
				offset = -25
				multiplier = -1
			}
			modifier = {
				factor = 0.1
				stress >= mental_break_opt_out_stress_gain
			}
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_rationality = 0.5
			}
		}
	}

	option = {
		name = befriend_ongoing_dislike.5005.b
		scope:scheme = {
			add_scheme_progress = scheme_progress_loss
		}

		stress_impact = {
			humble = minor_stress_impact_gain
			gregarious = minor_stress_impact_gain
		}

		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_zeal = 1
			}
		}
	}

	option = {
		name = befriend_ongoing_dislike.5005.c
		trigger = {
			has_trait = paranoid
		}
		trait = paranoid
		scope:scheme = {
			add_scheme_progress = scheme_progress_loss
		}
		exclusive = yes
	}
}
