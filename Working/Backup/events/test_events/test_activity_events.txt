namespace = test_activity_events

test_activity_events.1 = {
	type = activity_event
	title = test_activity_events.1.t
	desc = test_activity_events.1.desc
	left_portrait = root
	right_portrait = root.primary_heir

	theme = stewardship_wealth_focus
	orphan = yes

	widget = {
		gui = "event_window_widget_stress"
		container = "custom_widgets_container"
	}

	immediate = {
		save_scope_as = stress_character # For stress widget
		add_gold = 1337
	}

	option = { 
		name = test_activity_events.1.a
		primary_heir = { add_prestige = 42 }
	}
	option = { 
		name = test_activity_events.1.b
		add_piety = 420
	}
}

test_activity_events.2 = {
	type = activity_event
	title = debug_main
	desc = debug_main
	theme = ep2_video_test
	orphan = yes

	option = {
		name = debug_main
	}
}

test_activity_events.3 = {
	type = activity_event
	window = activity_locale_fullscreen_event_widget
	title = debug_main
	desc = debug_main
	theme = default
	orphan = yes

	option = {
		name = debug_main
	}
}

test_activity_events.4 = { # Max Portraits in Event Window
	type = activity_event
	title = LOREM_IPSUM_TITLE
	desc = LOREM_IPSUM_DESCRIPTION
	theme = realm
	orphan = yes

	left_portrait = {
		character = scope:portrait_1
		animation = wedding_priest
	}
	
	right_portrait = {
		character = scope:portrait_2
		animation = wedding_priest
	}
	
	center_portrait = {
		character = scope:portrait_3
		animation = wedding_priest
	}
	
	
	lower_right_portrait = scope:portrait_4
	lower_center_portrait = scope:portrait_5
	lower_left_portrait = scope:portrait_6

	immediate = {
		random_ruler = {
			save_scope_as = portrait_1
		}
		random_ruler = {
			save_scope_as = portrait_2
		}
		random_ruler = {
			save_scope_as = portrait_3
		}
		random_ruler = {
			save_scope_as = portrait_4
		}
		random_ruler = {
			save_scope_as = portrait_5
		}
		random_ruler = {
			save_scope_as = portrait_6
		}
	}

	option = {
		name = LOREM_IPSUM_TITLE
	}

	option = {
		name = LOREM_IPSUM_TITLE
	}

	option = {
		name = LOREM_IPSUM_TITLE
	}

	option = {
		name = LOREM_IPSUM_TITLE
	}
}

test_activity_events.5 = { # Camera override in event wndow
	type = activity_event
	title = LOREM_IPSUM_TITLE
	desc = LOREM_IPSUM_DESCRIPTION
	theme = realm
	orphan = yes

	left_portrait = scope:portrait_1
	
	center_portrait = {
		character = scope:portrait_3
		camera = camera_event_right
	}
	
	right_portrait = {
		character = scope:portrait_2
		camera = camera_event_right
	}

	immediate = {
		random_ruler = {
			save_scope_as = portrait_1
		}
		random_ruler = {
			save_scope_as = portrait_2
		}
		random_ruler = {
			save_scope_as = portrait_3
		}
	}

	option = {
		name = LOREM_IPSUM_TITLE
	}
}

## Test transitions
test_activity_events.10 = {
	type = activity_event
	title = LOREM_IPSUM_TITLE
	desc = LOREM_IPSUM_DESCRIPTION
	left_portrait = root
	right_portrait = root.primary_heir
	theme = tournament_archery_pivotal 
	window = tournament_fullscreen_pivotal_event_widget 
	orphan = yes

	override_transition = { 
		trigger = {
			exists = var:progress_to_victory
			var:progress_to_victory > 75
		} 
		reference = debug_test_transition_1 
	} 
	override_transition = { 
		trigger = {
			exists = var:progress_to_victory
			var:progress_to_victory <= 75
			var:progress_to_victory > 25
		} 
		reference = debug_test_transition_2 
	} 
	override_transition = { 
		trigger = {
			exists = var:progress_to_victory
			var:progress_to_victory <= 25
		}
		reference = debug_test_transition_3 
	} 
	
	orphan = yes

	immediate = {
		add_gold = 1337
	}

	option = { 
		name = test_activity_events.1.a
		primary_heir = { add_prestige = 42 }
	}
	option = { 
		name = test_activity_events.1.b
		add_piety = 420
	}
}
