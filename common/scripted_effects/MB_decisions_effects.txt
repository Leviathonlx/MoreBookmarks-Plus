#00_decisions_effects

embrace_english_culture_effect = {		#RKHO
	# Scopes saves for localization
	root = {
		save_scope_as = embracer
	}

	# Prestige Bonus
	add_prestige = medium_prestige_gain

	#Convert appropriate vassals, and their family
	if = {
		limit = {
			any_vassal_or_below = {
				is_ai = yes
				OR = {
					culture = scope:embracer.culture
					culture = { has_cultural_pillar = heritage_west_germanic }
				}
				primary_title = {
					OR = {
						de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege.de_jure_liege = title:k_england
					}
				}
			}
		}
		every_vassal_or_below = {
			custom = embrace_english_culture_vassals_custom
			limit = {
				is_ai = yes
				OR = {
					culture = scope:embracer.culture
					culture = { has_cultural_pillar = heritage_west_germanic }
				}
				primary_title = {
					OR = {
						de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege.de_jure_liege = title:k_england
					}
				}
			}
			set_culture = culture:english
		}
	}

	#Flip Counties
	every_county_in_region = {
		region = custom_england
		custom = embrace_english_culture_counties_custom
		limit = { kingdom = title:k_england }
		random = {
			chance = 60
			set_county_culture = culture:english
		}
	}

	culture:english = {
		custom_tooltip = decision_embrace_english_culture_get_innovations
		hidden_effect = {
			reset_culture_creation_date = yes
			get_all_innovations_from = scope:embracer.culture
			get_all_innovations_from = culture:anglo_saxon
		}
	}
	#Convert your, and your whole family's, culture
	set_culture = culture:english
	every_spouse = {
		set_culture = culture:english
	}
	every_close_family_member = {
		limit = { is_landed = no }
		custom = all_unlanded_family_members
		set_culture = culture:english
	}
	if = {
		limit = { 
			AND = {
				NOT = { has_primary_title = title:k_england }
				NOT = { has_primary_title = title:e_britannia } 
			}
		}
		set_primary_title_to = title:k_england
		hidden_effect = {
			create_title_and_vassal_change = {
				type = returned
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:c_middlesex = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			root = { set_realm_capital = title:c_middlesex }
		}
	}
}

#FORM PORTUGAL
form_portugal_decision_effects = {
	#Create the title and set proper de jure
	independance_effect = yes					  
	hidden_effect = {
		if = {
			limit = { root = { faith = { religion_tag = christianity_religion } is_ai = yes } }
			add_gold = 800
			add_piety = 500
			add_prestige = 500
			spawn_army = {
				uses_supply = no
				inheritable = yes
				name = reconquista_event_troops
				levies = {
					value = 1500
				}
				location = capital_province
			}
		}
		title:d_porto = {
			save_scope_as = title_d_porto
			set_de_jure_liege_title = title:k_portugal
		}
		title:d_coimbra = {
			save_scope_as = title_d_coimbra
			set_de_jure_liege_title = title:k_portugal
		}
		title:d_beja = {
			save_scope_as = title_d_beja
			set_de_jure_liege_title = title:k_portugal
		}
		title:d_algarve = {
			save_scope_as = title_d_algarve
			set_de_jure_liege_title = title:k_portugal
		}
		#Convert appropriate vassals, and their family in Portugal
		if = {
			limit = {
				any_vassal_or_below = {
					is_ai = yes
					OR = {
						has_primary_title = title:k_portugal
						has_primary_title = title:d_porto
						has_primary_title = title:d_coimbra
						has_primary_title = title:d_beja
						has_primary_title = title:d_algarve
						has_primary_title = title:d_ribatejo
						primary_title = {
							OR = {
								de_jure_liege = title:k_portugal
								de_jure_liege.de_jure_liege = title:k_portugal
								de_jure_liege.de_jure_liege.de_jure_liege = title:k_portugal
								de_jure_liege = title:d_porto
								de_jure_liege.de_jure_liege = title:d_porto
								de_jure_liege = title:d_coimbra
								de_jure_liege.de_jure_liege = title:d_coimbra
								de_jure_liege = title:d_beja
								de_jure_liege.de_jure_liege = title:d_beja
								de_jure_liege = title:d_algarve
								de_jure_liege.de_jure_liege = title:d_algarve
								de_jure_liege = title:d_ribatejo
								de_jure_liege.de_jure_liege = title:d_ribatejo
							}
						}
					}
				}
			}
			every_vassal_or_below = {
				limit = {
					is_ai = yes
					OR = {
						has_primary_title = title:k_portugal
						has_primary_title = title:d_porto
						has_primary_title = title:d_coimbra
						has_primary_title = title:d_beja
						has_primary_title = title:d_algarve
						has_primary_title = title:d_ribatejo
						primary_title = {
							OR = {
								de_jure_liege = title:k_portugal
								de_jure_liege.de_jure_liege = title:k_portugal
								de_jure_liege.de_jure_liege.de_jure_liege = title:k_portugal
								de_jure_liege = title:d_porto
								de_jure_liege.de_jure_liege = title:d_porto
								de_jure_liege = title:d_coimbra
								de_jure_liege.de_jure_liege = title:d_coimbra
								de_jure_liege = title:d_beja
								de_jure_liege.de_jure_liege = title:d_beja
								de_jure_liege = title:d_algarve
								de_jure_liege.de_jure_liege = title:d_algarve
								de_jure_liege = title:d_ribatejo
								de_jure_liege.de_jure_liege = title:d_ribatejo
							}
						}
					}
				}
				set_culture = culture:portuguese
				set_character_faith_with_conversion = root.faith
				every_close_family_member = {
					limit = { is_landed = no }
					custom = all_unlanded_family_members				 
					set_culture = culture:portuguese
					set_character_faith_with_conversion = root.faith
				}
			}
		}


		#Covert self & court to portuguese culture
		if = {
			limit = { NOT = { has_culture = culture:portuguese } }
		
			every_courtier = {
				limit = { has_same_culture_as = scope:portugal_former }
				add_to_list = convert_list
			}
			#transfer over innovations from previous culture. 
			culture:portuguese = {
				hidden_effect = { reset_culture_creation_date = yes }
				get_all_innovations_from = scope:portugal_former.culture
			}
			set_culture = culture:portuguese
		
			every_in_list = {
				list = convert_list
				custom = portguese_convert_list #This says "every subject in the realm" even though vassals and their courts only covert later, through event
				set_culture = culture:portuguese
			}
		}
	
	
		# Convert Iberian counties to Portugese culture
		every_sub_realm_county = {
			limit = {
				tier = tier_county
				culture = { has_cultural_pillar = heritage_iberian }
				OR = {
					de_jure_liege = title:d_porto
					de_jure_liege = title:d_coimbra
					de_jure_liege = title:d_beja
					de_jure_liege = title:d_algarve
				}
			}
			custom = portugese_convert_iberian_counties
			set_county_culture = culture:portuguese
		}
		every_sub_realm_county = {
			limit = {
				tier = tier_county
				NOT = { culture = { has_cultural_pillar = heritage_iberian } }
				OR = {
					de_jure_liege = title:d_porto
					de_jure_liege = title:d_coimbra
					de_jure_liege = title:d_beja
					de_jure_liege = title:d_algarve
				}
			}
			custom = portugese_convert_non_iberian_counties
			random = {
				chance = 50
				set_county_culture = culture:portuguese
			}
		}
		
		if = { #Usurp if not held personally.
			limit = {
				NOT = { this = title:c_porto.holder }
				NOT = { this = title:c_lisboa.holder }
			}
			create_title_and_vassal_change = {
				type = returned
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:c_porto = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		root = { set_realm_capital = title:c_porto }
	}

	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_portugal = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
		save_scope_as = title_k_portugal
	}
	resolve_title_and_vassal_change = scope:title_change

	if = {
		limit = {
			NOR = {
				primary_title = { this = title:k_portugal }
				highest_held_title_tier = tier_empire
			}
		}
		set_primary_title_to = title:k_portugal
	}
	
	hidden_effect = {
		if = {
			limit = { has_global_variable = fp2_struggle_compromise_ending }
			title:k_portugal = { fp2_struggle_compromise_create_new_empire_effect = yes }
		}
	}

	#Innovations
	culture:portuguese = {
		add_random_innovation = culture_group_military
		add_random_innovation = culture_group_civic
	}
	
	#Prestige
	add_prestige = major_prestige_gain	
}

#UNITE SPAIN
unite_the_spanish_thrones_decision_effects = {
	#Prestige
	add_prestige = major_prestige_gain

	#Laws
	if = {
		limit = { has_realm_law = crown_authority_0 }
		add_realm_law_skip_effects = crown_authority_2
	}
	else_if = {
		limit = {
			OR = {
				has_realm_law = crown_authority_1
				has_realm_law = crown_authority_2
			}
		}
		add_realm_law_skip_effects = crown_authority_3
	}
	
	# Coat of Arms
	if = {
		limit = { scope:spain_uniter.primary_title = title:k_castille }
		primary_title = { set_coa = k_castille_leon }
	}
	else_if = {
		limit = { scope:spain_uniter.primary_title = title:k_leon }
		primary_title = { set_coa = k_leon_castille }
	}

	#Handle other Kingdom titles
	title:k_castille = { add_to_list = spanish_kingdoms }
	title:k_leon = { add_to_list = spanish_kingdoms }
	title:k_asturias = { add_to_list = spanish_kingdoms }
	title:k_spanish_galicia = { add_to_list = spanish_kingdoms }
	title:k_navarra = { add_to_list = spanish_kingdoms }

	custom_tooltip = unite_the_spanish_thrones_decision_titles_tt
	hidden_effect = {
		if = {
			limit = { root = { faith = { religion_tag = christianity_religion } is_ai = yes } }
			add_gold = 800
			add_piety = 500
			add_prestige = 500
		}
		every_in_list = {
			list = spanish_kingdoms
			limit = {
				NOT = { this = scope:spain_uniter.primary_title }
				scope:spain_uniter = { completely_controls = prev }
			}

			#De jure shift all held spanish titles into your primary title
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_duchy }
				set_de_jure_liege_title = scope:spain_uniter.primary_title
			}

			#Destroys them all!
			scope:spain_uniter = { destroy_title = prev }
		}
		if = {
			limit = { title:k_aragon = { any_in_de_jure_hierarchy = { tier = tier_county } } }
			title:d_valencia = {
				save_scope_as = d_valencia
				set_de_jure_liege_title = title:k_aragon
			}
		}
		if = { #Usurp if not held personally.
			limit = {
				NOT = { this = title:c_toledo.holder }
			}
			create_title_and_vassal_change = {
				type = returned
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:c_toledo = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		root = { set_realm_capital = title:c_toledo }
		if = {
			limit = { has_primary_title = title:k_castille }
			title:k_castille = { set_capital_county = title:c_toledo }
			title:d_toledo = {
				save_scope_as = title_d_toledo
				set_de_jure_liege_title = title:k_castille
			}
		}
		if = {
			limit = { has_primary_title = title:k_leon }
			title:k_leon = { set_capital_county = title:c_toledo }
			title:d_toledo = {
				save_scope_as = title_d_toledo
				set_de_jure_liege_title = title:k_leon
			}
		}
		if = {
			limit = { has_primary_title = title:k_asturias }
			title:k_asturias = { set_capital_county = title:c_toledo }
			title:d_toledo = {
				save_scope_as = title_d_toledo
				set_de_jure_liege_title = title:k_asturias
			}
		}
	}
}

unite_the_western_slavs_decision_effects = {
	#Prestige
	add_prestige = massive_prestige_gain

	#Innovations
	culture = {
		add_random_innovation = culture_group_military
		add_random_innovation = culture_group_civic
	}

	#Laws
	if = {
		limit = { has_realm_law = crown_authority_0 }
		add_realm_law_skip_effects = crown_authority_2
	}
	else_if = {
		limit = {
			OR = {
				has_realm_law = crown_authority_1
				has_realm_law = crown_authority_2
			}
		}
		add_realm_law_skip_effects = crown_authority_3
	}

	#Handle de jure drift & destructions of other kingdom titles
	title:k_poland = { add_to_list = west_slavic_kingdoms }
	title:k_pomerania = { add_to_list = west_slavic_kingdoms }
	title:k_bohemia = { add_to_list = west_slavic_kingdoms }
	title:k_moravia = { add_to_list = west_slavic_kingdoms }

	if = {
		limit = { highest_held_title_tier = tier_kingdom }
		custom_tooltip = unite_the_western_slavs_decision_titles_tt
	}
	custom_tooltip = unite_the_western_slavs_decision_titles_empire_tt
	# If Saxony has been created, shift everything back into Polabia
	if = {
		limit = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_formed_saxony
			}
		}
		title:k_saxony = {
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_duchy }
				set_de_jure_liege_title = title:k_sorbia
			}
		}
	}
	hidden_effect = {
		scope:western_slav_uniter = {
			#If king-tier, give them the West-Slavia title
			if = {
				limit = { highest_held_title_tier = tier_kingdom }
				create_title_and_vassal_change = {
					type = created
					save_scope_as = title_change
					add_claim_on_loss = no
											  
																
	  
																	   
								   
								   
																	   
	  
				}
				title:e_west_slavia = {
					change_title_holder = {
						holder = scope:western_slav_uniter
						change = scope:title_change
											  
					}
														 
				}
				resolve_title_and_vassal_change = scope:title_change
			}
			# Drift kingdoms to empire
		   
			every_in_list = {
				list = west_slavic_kingdoms
				set_de_jure_liege_title = scope:western_slav_uniter.primary_title
	 
			}
		}
	}	
}

unite_the_southern_slavs_decision_effects = {
	#Prestige
	add_prestige = massive_prestige_gain

	#Innovations
	culture = {
		add_random_innovation = culture_group_military
		add_random_innovation = culture_group_civic
	}

	#Handle de jure drift & destructions of other kingdom titles
	title:k_croatia = { add_to_list = south_slavic_kingdoms }
	title:k_serbia = { add_to_list = south_slavic_kingdoms }
	title:k_bulgaria = { add_to_list = south_slavic_kingdoms }
	title:k_dacia = { add_to_list = south_slavic_kingdoms }
	title:k_moldavia = { add_to_list = south_slavic_kingdoms }
	title:k_bosnia = { add_to_list = south_slavic_kingdoms }
	title:k_carinthia = { add_to_list = south_slavic_kingdoms }												

	custom_tooltip = unite_the_southern_slavs_decision_titles_tt
	hidden_effect = {
		every_in_list = {
			list = south_slavic_kingdoms
			limit = {
				NOT = { this = scope:southern_slav_uniter.primary_title }
				scope:southern_slav_uniter = { completely_controls = prev }
			}

			#De jure shift all held west slavic titles into your primary title
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_duchy }
				set_de_jure_liege_title = scope:southern_slav_uniter.primary_title
			}

			#Destroys them all!
			scope:southern_slav_uniter = { destroy_title = prev }
		}
	}
}

unite_the_slavs_decision_effects = {
	#Prestige
	add_prestige = massive_prestige_gain

	#Innovations
	custom_tooltip = unite_the_slavs_decision_effects_innovations_tt
	hidden_effect = {
		#Add all Slavic cultures in the realm in a list
		every_vassal_or_below = {
			limit = {
				OR = {
					culture = { has_cultural_pillar = heritage_west_slavic }
					culture = { has_cultural_pillar = heritage_east_slavic }
					culture = { has_cultural_pillar = heritage_south_slavic }
				}
				save_temporary_scope_as = slavic_vassal
				NOT = {
					any_in_list = {
						list = slavic_cultures
						this = scope:slavic_vassal.culture
					}
				}
			}
			culture = {
				add_to_list = slavic_cultures
			}
		}
		#Add innovations from 3 random cultures
		every_in_list = {
			list = slavic_cultures
			save_scope_as = culture_getting_innovations

			set_while_counter_variable_effect = yes
			while = {
				limit = { var:while_counter < 3 }
				random_in_list = {
					limit = { scope:culture_getting_innovations = { can_get_innovation_from = prev } }
					list = slavic_cultures
					scope:culture_getting_innovations = { get_random_innovation_from = prev }
				}
				increase_while_counter_variable_effect = yes
			}
			remove_while_counter_variable_effect = yes
		}
	}

	#Create the title and make it primary
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:e_slavia = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change

	set_primary_title_to = title:e_slavia
	title:e_slavia = { save_scope_as = slavia } #For localisation

	#Destroy the other three empires if I have them
	if = {
		limit = { has_title = title:e_russia }
		destroy_title = title:e_russia
	}
	if = {
		limit = { has_title = title:e_wendish_empire }
		destroy_title = title:e_wendish_empire
	}
	if = {
		limit = { has_title = title:e_carpathia }
		destroy_title = title:e_carpathia
	}

	###Handle de jure drift and empire destruction###

	#First: add all the kingdoms
	title:k_poland = { add_to_list = slavic_kingdoms }
	title:k_pomerania = { add_to_list = slavic_kingdoms }
	title:k_bohemia = { add_to_list = slavic_kingdoms }
	title:k_moravia = { add_to_list = slavic_kingdoms }
	title:k_croatia = { add_to_list = slavic_kingdoms }
	title:k_serbia = { add_to_list = slavic_kingdoms }
	title:k_bulgaria = { add_to_list = slavic_kingdoms }
	title:k_dacia = { add_to_list = slavic_kingdoms }
	title:k_moldavia = { add_to_list = slavic_kingdoms }
	title:k_bosnia = { add_to_list = slavic_kingdoms }
	title:k_carinthia = { add_to_list = slavic_kingdoms }											  
	title:k_white_rus = { add_to_list = slavic_kingdoms }
	title:k_galicia-volhynia = { add_to_list = slavic_kingdoms }
	title:k_ruthenia = { add_to_list = slavic_kingdoms }
	title:k_novgorod = { add_to_list = slavic_kingdoms }
	title:k_opolye = { add_to_list = slavic_kingdoms }
	title:k_hungary = { add_to_list = slavic_kingdoms }

	# Inform players of the de jure drift
	title:e_slavia = { custom_tooltip = unite_the_slavs_decision_titles_tt } #Scope change for tooltip formatting.
	
	if = {
		limit = { has_dlc_feature = legends }
		create_legend_seed = {
			type = legitimizing
			quality = illustrious
			chronicle = new_title
			properties = {
				title = title:e_slavia
				founder = root
			}
		}
	}
	# Actually do the de jure drift
	hidden_effect = {
		every_in_list = {
			list = slavic_kingdoms

			set_de_jure_liege_title = scope:slav_uniter.primary_title
		}
	}
}

##################################################
# Negotiate the Danelaw Effects

negotiate_the_danelaw_accept_effect = {
	# Mark the partition as being active.
	custom_tooltip = negotiate_the_danelaw_accept_effect.partition_active.tt
	set_global_variable = {
		name = partition_active_danelaw
		value = title:k_england
	}
	# Kingdoms for all!
	## Scope:ntd_brit receives k_england.
	scope:ntd_brit = {
		create_title_and_vassal_change = {
			type = created
			save_scope_as = change
		}
		title:k_england = {
			change_title_holder = {
				holder = scope:ntd_brit
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
		title:k_england = { add_title_law = saxon_elective_succession_law }
	}
	## Whilst scope:ntd_nord receives k_danelaw.
	scope:ntd_nord = {
		create_title_and_vassal_change = {
			type = created
			save_scope_as = change
		}
		title:k_danelaw = {
			change_title_holder = {
				holder = scope:ntd_nord
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
		title:k_danelaw = {
			add_title_law = scandinavian_elective_succession_law
			# And make sure it follows appropriate de jures.
			hidden_effect = { set_de_jure_liege_title = title:k_england.de_jure_liege }
		}
		hidden_effect = {
			add_unpressed_claim = title:d_hereford
			add_unpressed_claim = title:d_norfolk
			add_unpressed_claim = title:d_bedford
			add_gold = 1000
			add_piety = 1000
			add_prestige = 1000
			spawn_army = {
				name = event_troop_default_name
				levies = 3000
				location = capital_province
				inheritable = yes
			}
			spawn_army = {
				name = event_troop_default_name
				levies = 3000
				location = capital_province
				inheritable = yes
			}
			spawn_army = {
				name = event_troop_default_name
				levies = 3000
				location = capital_province
				inheritable = yes
			}
			spawn_army = {
				name = event_troop_default_name
				levies = 3000
				location = capital_province
				inheritable = yes
			}
		}
	}
	# Give k_danelaw various de jures.
	## Firstly, any duchy that it has at least one county in which isn't scope:ntd_brit's capital duchy.
	custom_tooltip = negotiate_the_danelaw_accept_effect.de_jure_holdings_recognised.tt
	hidden_effect = {
		scope:ntd_nord = {
			every_sub_realm_county = {
				limit = {
					kingdom = title:k_england
					NOT = { duchy = scope:ntd_brit.capital_county.duchy }
				}
				duchy = { set_de_jure_liege_title = title:k_danelaw }
			}
		}
	}
	## Then, any independent duchy held by a Scandi-side ruler (again exempting scope:ntd_brit's capital, just in case).
	custom_tooltip = negotiate_the_danelaw_accept_effect.independent_holdings_recognised.tt
	hidden_effect = {
		every_county_in_region = {
			region = world_europe_west_britannia
			limit = {
				kingdom = title:k_england
				exists = duchy.holder
				duchy.holder = { negotiate_the_danelaw_norse_side_trigger = yes }
				NOT = { duchy = scope:ntd_brit.capital_county.duchy }
			}
			duchy = { set_de_jure_liege_title = title:k_danelaw }
		}
	}
	# Set up a ceasefire & some opinion gain between the two rulers.
	scope:ntd_brit = {
		add_truce_both_ways = {
			character = scope:ntd_nord
			years = 25
			name = TRUCE_SIGNED_PARTITION
		}
		add_opinion = {
			target = scope:ntd_nord
			modifier = respect_opinion
			opinion = 50
		}
		reverse_add_opinion = {
			target = scope:ntd_nord
			modifier = respect_opinion
			opinion = 50
		}
	}
	# Independent rulers on both sides are extremely unimpressed with this divvying.
	## First, grab everyone applicable.
	title:k_england = {
		every_in_de_jure_hierarchy = {
			limit = {
				exists = holder
				holder = {
					is_independent_ruler = yes
					NOR = {
						this = scope:ntd_actor
						this = scope:ntd_recipient
					}
				}
			}
			holder = { add_to_list = riled_danelaw_independents_list }
		}
	}
	## Then, apply opinion & hidden rivalry effects.
	every_in_list = {
		list = riled_danelaw_independents_list
		custom = negotiate_the_danelaw_accept_effect.riled_independents_list
		add_opinion = {
			target = scope:ntd_brit
			modifier = weak_opinion
			opinion = -40
		}
		add_opinion = {
			target = scope:ntd_nord
			modifier = weak_opinion
			opinion = -40
		}
		# We hide the rivalry stuff, both to make it seem less unappealing, and to encourage valid-feeling drama without deliberately signalling it.
		hidden_effect = {
			if = {
				limit = {
					can_set_relation_potential_rival_trigger = { CHARACTER = scope:ntd_brit }
				}
				set_relation_potential_rival = scope:ntd_brit
			}
			if = {
				limit = {
					can_set_relation_potential_rival_trigger = { CHARACTER = scope:ntd_nord }
				}
				set_relation_potential_rival = scope:ntd_nord
			}
		}
	}
}

#New


reunite_two_sicilies_effect = {
	add_prestige = massive_prestige_gain

	#Laws
	if = {
		limit = { has_realm_law = crown_authority_0 }
		add_realm_law_skip_effects = crown_authority_2
	}
	else_if = {
		limit = {
			OR = {
				has_realm_law = crown_authority_1
				has_realm_law = crown_authority_2
			}
		}
		add_realm_law_skip_effects = crown_authority_3
	}
	hidden_effect = {
		every_held_title = {
			limit = {
				OR = {
					this = title:k_naples
					this = title:k_trinacria
				}
			}
			every_in_de_jure_hierarchy = {
				limit = {
					tier = tier_duchy
				}
				set_de_jure_liege_title = title:k_sicily
				
			}
		}
	}
	
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	title:k_sicily = {
		change_title_holder = {
			holder = root
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change
	hidden_effect = { set_primary_title_to = title:k_sicily }
	every_held_title = { #Should destroy all other Empires owned at the time.
		limit = {
			tier = tier_kingdom
			OR = {
				this = title:k_naples
				this = title:k_trinacria
			}
		}
		root = { destroy_title = prev }
	}
}

custom_nb_restore_byzantine_decision_effect = {
	
	save_scope_as = founder
	give_nickname = nick_the_restorer
	add_dynasty_prestige = monumental_dynasty_prestige_gain	
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:e_byzantium = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}
	every_vassal = {
		add_opinion = {
			modifier = custom_nb_byzantine_decision_opinions
			target = root
		}
		custom = custom_nb_byzantine_decision_opinions_vassals
	}	
	resolve_title_and_vassal_change = scope:title_change
		
		
		
		
		
}

#

spawn_mamluk_sultans_troops_effects = {
	spawn_army = {
		uses_supply = no
		inheritable = yes
		name = mamluk_sultans_troops
         
		levies = {
				value = 400
			}

		men_at_arms = {
			type = horse_archers
			stacks=6			
		}
		men_at_arms = {
			type = horse_archers
			stacks=6
			
		}

		men_at_arms = {
			type = light_horsemen 
			stacks=5
		}
		men_at_arms = {
			type = armored_horsemen
			stacks = 3
		}
		location = capital_province
	}

	spawn_army = {
		uses_supply = no
		inheritable = yes
		name = mamluk_sultans_troops
         
		levies = {
				value = 200
			}

		men_at_arms = {
			type = camel_rider 
			stacks=3
		}
		men_at_arms = {
			type = camel_rider
			stacks = 3
		}
		location = capital_province
	}
	
	
}

#convert_whole_realm_to_feudalism_effect = {
#	#TOOLTIP INFO
#	#PLAYER EFFECTS
#	##Liege has clan? Convert to clan!
#	if = {
#		limit = {
#			is_independent_ruler = no
#			OR = {
#				liege = { government_has_flag = government_is_clan }
#				AND = {
#					liege = { government_has_flag = government_is_tribal }
#					religion = religion:islam_religion
#				}
#			}
#		}
#		change_government = clan_government
#	}
#	##Liege has feudal? Convert to feudal!
#	else_if = {
#		limit = {
#			is_independent_ruler = no
#			OR = {
#				liege = { government_has_flag = government_is_feudal }
#				AND = {
#					liege = { government_has_flag = government_is_tribal }
#					NOT = { religion = religion:islam_religion }
#				}
#			}
#		}
#		change_government = feudal_government
#	}
#	##You're an independent Muslim? Convert to clan!
#	else_if = {
#		limit = {
#			is_independent_ruler = yes
#			faith = { religion_tag = islam_religion }
#		}
#		change_government = clan_government
#	}
#	#Ireland
#	else_if = {
#		limit = {
#			is_independent_ruler = yes
#			culture = { has_cultural_pillar = heritage_goidelic }
#		}
#		change_government = clan_government
#	}
#	##You're an independent anything else? Convert to feudal!
#	else = { change_government = feudal_government }
#	##General
#	custom_tooltip = all_holding_will_change
#	##Liege has clan? Convert to clan!
#	if = {
#		limit = {
#			is_independent_ruler = no
#			liege = { government_has_flag = government_is_clan }
#		}
#		custom_tooltip = clan_liege_vassals_will_convert
#	}
#	#Liege has feudal? Convert to feudal!
#	if = {
#		limit = {
#			is_independent_ruler = no
#			liege = { government_has_flag = government_is_feudal }
#		}
#		custom_tooltip = feudal_liege_vassals_will_convert
#	}
#	##If I am Islamic, we will become clan.
#	if = {
#		limit = {
#			is_independent_ruler = yes
#			faith = { religion_tag = islam_religion }
#		}
#		custom_tooltip = islamic_vassals_will_convert
#	}
#	##If I am not Islamic, we will become feudal.
#	else_if = {
#		limit = { is_independent_ruler = yes }
#		custom_tooltip = other_vassals_will_convert
#	}
#
#	hidden_effect = {
#		#Nuke tribal authorities.
#		if = {
#			limit = { has_realm_law = tribal_authority_0 }
#			remove_realm_law = tribal_authority_0
#		}
#		if = {
#			limit = { has_realm_law = tribal_authority_1 }
#			remove_realm_law = tribal_authority_1
#		}
#		if = {
#			limit = { has_realm_law = tribal_authority_2 }
#			remove_realm_law = tribal_authority_2
#		}
#		if = {
#			limit = { has_realm_law = tribal_authority_3 }
#			remove_realm_law = tribal_authority_3
#		}
#		#Start off crown authorities.
#		if = {
#			limit = {
#				NOT = { has_realm_law = crown_authority_0 }
#			}
#			add_realm_law_skip_effects = crown_authority_0
#		}
#
#		#Also convert every vassal.
#		#Liege has taken clan, so become clan.
#		if = {
#			limit = {
#				government_has_flag = government_is_clan
#			}
#			every_vassal_or_below = {
#				limit = { government_has_flag = government_is_tribal }
#				change_government = clan_government
#				#Nuke tribal authorities.
#				if = {
#					limit = { has_realm_law = tribal_authority_0 }
#					remove_realm_law = tribal_authority_0
#				}
#				if = {
#					limit = { has_realm_law = tribal_authority_1 }
#					remove_realm_law = tribal_authority_1
#				}
#				if = {
#					limit = { has_realm_law = tribal_authority_2 }
#					remove_realm_law = tribal_authority_2
#				}
#				if = {
#					limit = { has_realm_law = tribal_authority_3 }
#					remove_realm_law = tribal_authority_3
#				}
#				if = {
#					limit = {
#						NOT = { has_realm_law = crown_authority_0 }
#					}
#					add_realm_law_skip_effects = crown_authority_0
#				}
#			}
#		}
#		#Liege is not clan, become feudal.
#		else = {
#			every_vassal_or_below = {
#				limit = { government_has_flag = government_is_tribal }
#				change_government = feudal_government
#				#Nuke tribal authorities.
#				if = {
#					limit = { has_realm_law = tribal_authority_0 }
#					remove_realm_law = tribal_authority_0
#				}
#				if = {
#					limit = { has_realm_law = tribal_authority_1 }
#					remove_realm_law = tribal_authority_1
#				}
#				if = {
#					limit = { has_realm_law = tribal_authority_2 }
#					remove_realm_law = tribal_authority_2
#				}
#				if = {
#					limit = { has_realm_law = tribal_authority_3 }
#					remove_realm_law = tribal_authority_3
#				}
#				if = {
#					limit = {
#						NOT = { has_realm_law = crown_authority_0 }
#					}
#					add_realm_law_skip_effects = crown_authority_0
#				}
#			}
#		}
#		
#		## Spawn holdings in tribal counties
#		
#		every_sub_realm_county = { # Spawn temples in your holy sites
#			limit = {
#				any_county_province = {
#					has_holding_type = tribal_holding
#				}
#				NOT = {
#					any_county_province = {
#						has_holding_type = church_holding
#					}
#				}
#				any_county_province = {
#					has_holding = no
#					barony = {
#						is_holy_site_of = root.faith
#					}
#				}
#			}
#			random_county_province = {
#				limit = {
#					has_holding = no
#					barony = {
#						is_holy_site_of = root.faith
#					}
#				}
#				set_holding_type = church_holding
#			}
#		}
#		
#		every_sub_realm_county = { # Spawn a City
#			limit = {
#				any_county_province = {
#					has_holding_type = tribal_holding
#				}
#				any_county_province = {
#					has_holding = no
#				}
#				NOT = {
#					any_county_province = {
#						has_holding_type = city_holding
#					}
#				}
#			}
#			random_county_province = {
#				limit = {
#					has_holding = no
#					OR = {
#						terrain = floodplains
#						terrain = oasis
#						terrain = farmlands
#					}
#					is_coastal = yes
#					has_special_building_slot = no
#				}
#				alternative_limit = {
#					has_holding = no
#					OR = {
#						terrain = floodplains
#						terrain = oasis
#						terrain = farmlands
#					}
#					has_special_building_slot = no
#				}
#				alternative_limit = {
#					has_holding = no
#					OR = {
#						terrain = floodplains
#						terrain = oasis
#						terrain = farmlands
#					}
#				}
#				alternative_limit = {
#					has_holding = no
#				}
#				random = {
#					chance = 60
#					modifier = {
#						add = county.development_level
#					}
#					modifier = {
#						add = 50
#						this.county = root.capital_county
#					}
#					modifier = {
#						add = 20
#						OR = {
#							terrain = floodplains
#							terrain = oasis
#							terrain = farmlands
#						}
#					}
#					set_holding_type = city_holding
#				}
#			}
#		}
#		
#		every_sub_realm_county = { # Spawn a Temple
#			limit = {
#				any_county_province = {
#					has_holding_type = tribal_holding
#				}
#				any_county_province = {
#					has_holding = no
#				}
#				NOT = {
#					any_county_province = {
#						has_holding_type = church_holding
#					}
#				}
#			}
#			random_county_province = {
#				limit = {
#					has_holding = no
#					OR = {
#						terrain = floodplains
#						terrain = oasis
#						terrain = farmlands
#					}
#					is_coastal = yes
#					has_special_building_slot = no
#				}
#				alternative_limit = {
#					has_holding = no
#					OR = {
#						terrain = floodplains
#						terrain = oasis
#						terrain = farmlands
#					}
#					has_special_building_slot = no
#				}
#				alternative_limit = {
#					has_holding = no
#					OR = {
#						terrain = floodplains
#						terrain = oasis
#						terrain = farmlands
#					}
#				}
#				alternative_limit = {
#					has_holding = no
#				}
#				random = {
#					chance = 50
#					modifier = {
#						add = county.development_level
#					}
#					modifier = {
#						add = 50
#						this.county = root.capital_county
#					}
#					modifier = {
#						add = 20
#						OR = {
#							terrain = floodplains	
#							terrain = oasis
#							terrain = farmlands
#						}
#					}
#					set_holding_type = church_holding
#				}
#			}
#		}
#
#		##Sort out new buildings for liege and all vassals
#		every_realm_province = {
#			limit = {
#				has_holding_type = tribal_holding
#				NOT = { is_in_list = feudal_conversion }
#			}
#			add_to_list = feudal_conversion
#
#		}
#		every_vassal_or_below = {
#			every_realm_province = {
#				limit = {
#					has_holding_type = tribal_holding
#					NOT = { is_in_list = feudal_conversion }
#				}
#				add_to_list = feudal_conversion
#
#			}
#		}
#		every_in_list = {
#			list = feudal_conversion
#			set_variable = {
#				name = tribal_to_feudal_building_level
#				value = combined_building_level
#				days = 1
#			}
#			set_holding_type = castle_holding
#			while = {
#				limit = {
#					var:tribal_to_feudal_building_level > 1
#				}
#				generate_building = yes
#				change_variable = {
#					name = tribal_to_feudal_building_level
#					subtract = 1
#				}
#			}
#			remove_variable = tribal_to_feudal_building_level
#			remove_from_list = feudal_conversion
#		}
#	}
#}
#
#

#UNITE GEROGIA

unite_the_georgian_thrones_decision_effects = {


	#Create the title and set proper de jure
	hidden_effect = {
		title:d_abkhazia = {
			save_scope_as = title_d_abkhazia
			set_de_jure_liege_title = title:k_georgia
		}
		title:d_racha = {
			save_scope_as = title_d_racha
			set_de_jure_liege_title = title:k_georgia
		}
		title:d_mingrelia = {
			save_scope_as = title_d_mingrelia
			set_de_jure_liege_title = title:k_georgia
		}
		title:d_meshketi = {
			save_scope_as = title_d_meshketi
			set_de_jure_liege_title = title:k_georgia
		}
		title:d_kartli = {
			save_scope_as = title_d_kartli
			set_de_jure_liege_title = title:k_georgia
		}
		title:d_kakheti = {
			save_scope_as = title_d_kakheti
			set_de_jure_liege_title = title:k_georgia
		}
		title:d_hereti = {
			save_scope_as = title_d_hereti
			set_de_jure_liege_title = title:k_georgia
		}
		title:d_georgia = {
			save_scope_as = title_d_georgia
			set_de_jure_liege_title = title:k_georgia
		}
		title:d_imeretia = {
			save_scope_as = title_d_imeretia
			set_de_jure_liege_title = title:k_georgia
		}
		title:k_georgia = {
			save_scope_as = title_k_georgia
		}
	}
	
	custom_tooltip = unite_the_georgian_thrones_decision_effects_de_jure_tt

	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_georgia = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
		save_scope_as = title_k_georgia
	}
	resolve_title_and_vassal_change = scope:title_change
	
	#Destroy the other 2 kingdoms
		destroy_title = title:k_imereti
		destroy_title = title:k_iberia

	if = {
		limit = {
			NOR = {
				primary_title = { this = title:k_georgia }
				highest_held_title_tier = tier_empire
			}
		}
		set_primary_title_to = title:k_georgia
	}


}
