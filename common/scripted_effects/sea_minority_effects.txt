# Override Vanilla
# Allows hybridizing/diverging to work more smoothly with minorities
expand_hybrid_culture_from_origin_point = {
	every_title_to_title_neighboring_and_across_water_county = {
		limit = {
			holder.top_liege = $CONVERTEE$.top_liege
			save_temporary_scope_as = county_check
			$CULTURE$ = {
				any_parent_culture = {
					this = scope:county_check.culture
				}
			}
		}

		random = {
			chance = {
				value = 30
				if = {
					limit = {
						$CULTURE$ = {
							any_parent_culture = {
								save_temporary_scope_as = first_parent
							}
							any_parent_culture = {
								NOT = {
									this = scope:first_parent
								}
								cultural_acceptance = { target = scope:first_parent value >= 45 }
							}
						}
					}
					add = 5
				}
				if = {
					limit = {
						$CULTURE$ = {
							any_parent_culture = {
								save_temporary_scope_as = first_parent
							}
							any_parent_culture = {
								NOT = {
									this = scope:first_parent
								}
								cultural_acceptance = { target = scope:first_parent value >= 50 }
							}
						}
					}
					add = 5
				}
				if = {
					limit = {
						$CULTURE$ = {
							any_parent_culture = {
								save_temporary_scope_as = first_parent
							}
							any_parent_culture = {
								NOT = {
									this = scope:first_parent
								}
								cultural_acceptance = { target = scope:first_parent value >= 55 }
							}
						}
					}
					add = 5
				}
				if = {
					limit = {
						$CULTURE$ = {
							any_parent_culture = {
								save_temporary_scope_as = first_parent
							}
							any_parent_culture = {
								NOT = {
									this = scope:first_parent
								}
								cultural_acceptance = { target = scope:first_parent value >= 60 }
							}
						}
					}
					add = 5
				}
				if = {
					limit = {
						$CULTURE$ = {
							any_parent_culture = {
								save_temporary_scope_as = first_parent
							}
							any_parent_culture = {
								NOT = {
									this = scope:first_parent
								}
								cultural_acceptance = { target = scope:first_parent value >= 65 }
							}
						}
					}
					add = 5
				}
				if = {
					limit = {
						$CULTURE$ = {
							any_parent_culture = {
								save_temporary_scope_as = first_parent
							}
							any_parent_culture = {
								NOT = {
									this = scope:first_parent
								}
								cultural_acceptance = { target = scope:first_parent value >= 70 }
							}
						}
					}
					add = 5
				}
				if = {
					limit = {
						$CULTURE$ = {
							any_parent_culture = {
								save_temporary_scope_as = first_parent
							}
							any_parent_culture = {
								NOT = {
									this = scope:first_parent
								}
								cultural_acceptance = { target = scope:first_parent value >= 75 }
							}
						}
					}
					add = 5
				}
				if = {
					limit = {
						$CULTURE$ = {
							any_parent_culture = {
								save_temporary_scope_as = first_parent
							}
							any_parent_culture = {
								NOT = {
									this = scope:first_parent
								}
								cultural_acceptance = { target = scope:first_parent value >= 80 }
							}
						}
					}
					add = 5
				}
				if = {
					limit = {
						$CULTURE$ = {
							any_parent_culture = {
								save_temporary_scope_as = first_parent
							}
							any_parent_culture = {
								NOT = {
									this = scope:first_parent
								}
								cultural_acceptance = { target = scope:first_parent value >= 85 }
							}
						}
					}
					add = 5
				}
				if = {
					limit = {
						$CULTURE$ = {
							any_parent_culture = {
								save_temporary_scope_as = first_parent
							}
							any_parent_culture = {
								NOT = {
									this = scope:first_parent
								}
								cultural_acceptance = { target = scope:first_parent value >= 90 }
							}
						}
					}
					add = 5
				}
				if = {
					limit = {
						$CULTURE$ = {
							any_parent_culture = {
								save_temporary_scope_as = first_parent
							}
							any_parent_culture = {
								NOT = {
									this = scope:first_parent
								}
								cultural_acceptance = { target = scope:first_parent value >= 95 }
							}
						}
					}
					add = 5
				}
				if = {
					limit = {
						$CULTURE$ = {
							any_parent_culture = {
								save_temporary_scope_as = first_parent
							}
							any_parent_culture = {
								NOT = {
									this = scope:first_parent
								}
								cultural_acceptance = { target = scope:first_parent value >= 100 }
							}
						}
					}
					add = 5
				}
			}
			save_scope_as = county
			culture = {save_scope_as = old_culture}
			set_county_culture = $CULTURE$
			add_culture_minority_effect = {
				CULTURE = scope:old_culture
				COUNTY = scope:county
				SIZE = large
			}
			every_title_to_title_neighboring_and_across_water_county = {
				limit = {
					holder.top_liege = $CONVERTEE$.top_liege
					save_temporary_scope_as = county_check
					$CULTURE$ = {
						any_parent_culture = {
							this = scope:county_check.culture
						}
					}
				}
				random = {
					chance = {
						value = 30
						if = {
							limit = {
								$CULTURE$ = {
									any_parent_culture = {
										save_temporary_scope_as = first_parent
									}
									any_parent_culture = {
										NOT = {
											this = scope:first_parent
										}
										cultural_acceptance = { target = scope:first_parent value >= 45 }
									}
								}
							}
							add = 5
						}
						if = {
							limit = {
								$CULTURE$ = {
									any_parent_culture = {
										save_temporary_scope_as = first_parent
									}
									any_parent_culture = {
										NOT = {
											this = scope:first_parent
										}
										cultural_acceptance = { target = scope:first_parent value >= 50 }
									}
								}
							}
							add = 5
						}
						if = {
							limit = {
								$CULTURE$ = {
									any_parent_culture = {
										save_temporary_scope_as = first_parent
									}
									any_parent_culture = {
										NOT = {
											this = scope:first_parent
										}
										cultural_acceptance = { target = scope:first_parent value >= 55 }
									}
								}
							}
							add = 5
						}
						if = {
							limit = {
								$CULTURE$ = {
									any_parent_culture = {
										save_temporary_scope_as = first_parent
									}
									any_parent_culture = {
										NOT = {
											this = scope:first_parent
										}
										cultural_acceptance = { target = scope:first_parent value >= 60 }
									}
								}
							}
							add = 5
						}
						if = {
							limit = {
								$CULTURE$ = {
									any_parent_culture = {
										save_temporary_scope_as = first_parent
									}
									any_parent_culture = {
										NOT = {
											this = scope:first_parent
										}
										cultural_acceptance = { target = scope:first_parent value >= 65 }
									}
								}
							}
							add = 5
						}
						if = {
							limit = {
								$CULTURE$ = {
									any_parent_culture = {
										save_temporary_scope_as = first_parent
									}
									any_parent_culture = {
										NOT = {
											this = scope:first_parent
										}
										cultural_acceptance = { target = scope:first_parent value >= 70 }
									}
								}
							}
							add = 5
						}
						if = {
							limit = {
								$CULTURE$ = {
									any_parent_culture = {
										save_temporary_scope_as = first_parent
									}
									any_parent_culture = {
										NOT = {
											this = scope:first_parent
										}
										cultural_acceptance = { target = scope:first_parent value >= 75 }
									}
								}
							}
							add = 5
						}
						if = {
							limit = {
								$CULTURE$ = {
									any_parent_culture = {
										save_temporary_scope_as = first_parent
									}
									any_parent_culture = {
										NOT = {
											this = scope:first_parent
										}
										cultural_acceptance = { target = scope:first_parent value >= 80 }
									}
								}
							}
							add = 5
						}
						if = {
							limit = {
								$CULTURE$ = {
									any_parent_culture = {
										save_temporary_scope_as = first_parent
									}
									any_parent_culture = {
										NOT = {
											this = scope:first_parent
										}
										cultural_acceptance = { target = scope:first_parent value >= 85 }
									}
								}
							}
							add = 5
						}
						if = {
							limit = {
								$CULTURE$ = {
									any_parent_culture = {
										save_temporary_scope_as = first_parent
									}
									any_parent_culture = {
										NOT = {
											this = scope:first_parent
										}
										cultural_acceptance = { target = scope:first_parent value >= 90 }
									}
								}
							}
							add = 5
						}
						if = {
							limit = {
								$CULTURE$ = {
									any_parent_culture = {
										save_temporary_scope_as = first_parent
									}
									any_parent_culture = {
										NOT = {
											this = scope:first_parent
										}
										cultural_acceptance = { target = scope:first_parent value >= 95 }
									}
								}
							}
							add = 5
						}
						if = {
							limit = {
								$CULTURE$ = {
									any_parent_culture = {
										save_temporary_scope_as = first_parent
									}
									any_parent_culture = {
										NOT = {
											this = scope:first_parent
										}
										cultural_acceptance = { target = scope:first_parent value >= 100 }
									}
								}
							}
							add = 5
						}
					}
					save_scope_as = county
					culture = {save_scope_as = old_culture}
					set_county_culture = $CULTURE$
					add_culture_minority_effect = {
						CULTURE = scope:old_culture
						COUNTY = scope:county
						SIZE = large
					}
				}
			}
		}
	}
}

new_culture_created_conversion_effect = {

	# Save the hybrid culture for use with ai_will_do down the line
	if = {
		limit = {
			$CULTURE$ = { is_hybrid_culture = yes }
		}
		add_to_global_variable_list = { name = hybrid_cultures target = $CULTURE$ }
	}

	# Convert Counties (if of same culture as recipient's old culture)
	$CONVERTEE$ = {
		if = {
			limit = {
				capital_county = {
					save_temporary_scope_as = county_check
					$CULTURE$ = {
						any_parent_culture = {
							this = scope:county_check.culture
						}
					}
				}
			}
			capital_county = {
				save_scope_as = county
				culture = {save_scope_as = old_culture}
				set_county_culture = $CULTURE$
				add_culture_minority_effect = {
					CULTURE = scope:old_culture
					COUNTY = scope:county
					SIZE = large
				}
				expand_hybrid_culture_from_origin_point = {
					CONVERTEE = $CONVERTEE$
					CULTURE = $CULTURE$
				}
			}
		}
		else_if = {
			limit = {
				any_held_title = {
					tier = tier_county
					save_temporary_scope_as = county_check
					$CULTURE$ = {
						any_parent_culture = {
							this = scope:county_check.culture
						}
					}
				}
			}
			random_held_title = {
				limit = {
					tier = tier_county
					save_temporary_scope_as = county_check
					$CULTURE$ = {
						any_parent_culture = {
							this = scope:county_check.culture
						}
					}
				}
				save_scope_as = county
				culture = {save_scope_as = old_culture}
				set_county_culture = $CULTURE$
				add_culture_minority_effect = {
					CULTURE = scope:old_culture
					COUNTY = scope:county
					SIZE = large
				}
				expand_hybrid_culture_from_origin_point = {
					CONVERTEE = $CONVERTEE$
					CULTURE = $CULTURE$
				}
			}
		}
		else_if = {
			limit = {
				any_sub_realm_county = {
					save_temporary_scope_as = county_check
					$CULTURE$ = {
						any_parent_culture = {
							this = scope:county_check.culture
						}
					}
				}
			}
			random_sub_realm_county = {
				limit = {
					save_temporary_scope_as = county_check
					$CULTURE$ = {
						any_parent_culture = {
							this = scope:county_check.culture
						}
					}
				}
				save_scope_as = county
				culture = {save_scope_as = old_culture}
				set_county_culture = $CULTURE$
				add_culture_minority_effect = {
					CULTURE = scope:old_culture
					COUNTY = scope:county
					SIZE = large
				}
				expand_hybrid_culture_from_origin_point = {
					CONVERTEE = $CONVERTEE$
					CULTURE = $CULTURE$
				}
			}
		}
	}
	# Spouses convert
	$CONVERTEE$ = {
		every_spouse = {
			limit = {
				OR = {
					is_courtier_of = $CONVERTER$
					is_courtier_of = $CONVERTEE$
					is_vassal_of = $CONVERTER$
					is_vassal_of = $CONVERTEE$
				}
				save_temporary_scope_as = spouse_check
				$CULTURE$ = {
					any_parent_culture = {
						this = scope:spouse_check.culture
					}
				}
			}
			set_culture = $CULTURE$
			hidden_effect = {
				add_character_flag = converted_culture_this_lifetime
			}
		}
	}
	# Family in recipient's court also convert
	if = {
		limit = {
			$CONVERTEE$ = {
				is_ruler = yes
				any_close_or_extended_family_member = {
					exists = court_owner
					court_owner = $CONVERTEE$
					NOT = { culture = $CULTURE$ }
					is_ai = yes
				}
			}
		}
		$CONVERTEE$ = {
			every_close_or_extended_family_member = {
				custom = all_family_members_at_court
				limit = {
					exists = court_owner
					court_owner = $CONVERTEE$
					NOT = { culture = $CULTURE$ }
					is_ai = yes
					save_temporary_scope_as = family_check
					$CULTURE$ = {
						any_parent_culture = {
							this = scope:family_check.culture
						}
					}
				}
				set_culture = $CULTURE$
				hidden_effect = {
					add_character_flag = converted_culture_this_lifetime
				}
			}
		}
	}
	# Make sure relevant non-significant characters convert
	$CONVERTEE$ = {
		hidden_effect = {
			every_courtier_or_guest = {
				limit = {
					NOT = { culture = $CULTURE$ }
					is_ai = yes
					has_no_particular_noble_roots_trigger = yes
					save_temporary_scope_as = family_check
					$CULTURE$ = {
						any_parent_culture = {
							this = scope:family_check.culture
						}
					}
				}
				set_culture = $CULTURE$
				hidden_effect = {
					add_character_flag = converted_culture_this_lifetime
				}
			}
			if = {
				limit = {
					exists = $CONVERTEE$.capital_province
				}
				every_pool_character = {
					province = $CONVERTEE$.capital_province
					limit = {
						NOT = { culture = $CULTURE$ }
						is_ai = yes
						has_no_particular_noble_roots_trigger = yes
						save_temporary_scope_as = family_check
						$CULTURE$ = {
							any_parent_culture = {
								this = scope:family_check.culture
							}
						}
					}
					set_culture = $CULTURE$
					hidden_effect = {
						add_character_flag = converted_culture_this_lifetime
					}
				}
			}
		}
	}
	$CONVERTEE$ = { # Clean up culture in the realm for subvassals with a liege of the wrong culture
		hidden_effect = {
			every_vassal_or_below = {
				limit = {
					is_landed = yes
					save_temporary_scope_as = vassal_check
					$CULTURE$ = {
						any_parent_culture = {
							this = scope:vassal_check.culture
						}
					}
					NOT = {
						$CULTURE$ = {
							any_parent_culture = {
								this = scope:vassal_check.liege.culture
							}
						}
					}
				}
				save_scope_as = vassal_converting
				new_culture_created_vassal_conversion_effect = {
					CONVERTEE = scope:vassal_converting
					CONVERTER = $CONVERTER$
					CULTURE = $CULTURE$
				}
			}
			#every_sub_realm_county = {
			#	limit = {
			#		save_temporary_scope_as = county_check
			#		$CULTURE$ = {
			#			any_parent_culture = {
			#				this = scope:county_check.culture
			#			}
			#		}
			#		NOT = {
			#			$CULTURE$ = {
			#				any_parent_culture = {
			#					this = scope:county_check.holder.culture
			#				}
			#			}
			#		}
			#	}
			#	set_county_culture = $CULTURE$
			#}
		}
	}
	$CONVERTEE$ = {
		set_culture = $CULTURE$
		hidden_effect = {
			add_character_flag = converted_culture_this_lifetime
		}
	}
}

# Embrace English Culture override
embrace_english_culture_effect = {
	# Scopes saves for localization
	root = {
		save_scope_as = embracer
	}

	culture = {save_scope_as = french_culture}

	# Prestige Bonus
	add_prestige = medium_prestige_gain

	#Convert your, and your whole family's, culture
	set_culture = culture:english
	if = {
		limit = { any_spouse = { is_landed = no } }
		every_spouse = {
			limit = {
				is_landed = no
				OR = {
					culture = { has_cultural_pillar = heritage_frankish }
				}
			}
			set_culture = culture:english
		}
	}
	if = {
		limit = {
			any_close_family_member = {
				is_landed = no
				NOT = { is_spouse_of = root }
			}
		}
		every_close_family_member = {
			limit = {
				is_landed = no
				NOT = { is_spouse_of = root }
			}
			custom = all_unlanded_family_members
			set_culture = culture:english
		}
	}
	if = {
		limit = {
			any_child = {
				NOT = { is_spouse_of = root }
			}
		}
		every_child = {
			limit = {
				NOT = { is_spouse_of = root }
			}
			custom = all_children_custom
			set_culture = culture:english
		}
	}

	#Convert appropriate vassals, and their family
	if = {
		limit = {
			any_vassal_or_below = {
				is_ai = yes
				OR = {
					culture = culture:norman
					culture = culture:french
				}
				primary_title = {
					OR = {
						de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege.de_jure_liege = title:k_england
					}
				}
			}
		}
		every_vassal_or_below = {
			custom = embrace_english_culture_vassals_custom
			limit = {
				is_ai = yes
				OR = {
					culture = culture:norman
					culture = culture:french
				}
				primary_title = {
					OR = {
						de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege = title:k_england
						de_jure_liege.de_jure_liege.de_jure_liege = title:k_england
					}
				}
			}
			set_culture = culture:english
			hidden_effect = {
				if = {
					limit = { any_spouse = { is_landed = no } }
					every_spouse = {
						limit = {
							is_landed = no
							OR = {
								culture = culture:norman
								culture = culture:french
							}
						}
						set_culture = culture:english
					}
				}
				if = {
					limit = {
						any_close_family_member = {
							is_landed = no
							NOT = { is_spouse_of = prev }
						}
					}
					every_close_family_member = {
						limit = {
							is_landed = no
							NOT = { is_spouse_of = prev }
						}
						custom = all_unlanded_family_members
						set_culture = culture:english
					}
				}
				if = {
					limit = {
						any_child = {
							NOT = { is_spouse_of = prev }
						}
					}
					every_child = {
						limit = {
							NOT = { is_spouse_of = prev }
						}
						custom = all_children_custom
						set_culture = culture:english
					}
				}
				if = {
					limit = {
						any_vassal_or_below = {
							is_ai = yes
							OR = {
								culture = culture:norman
								culture = culture:french
							}
							primary_title = {
								OR = {
									de_jure_liege = title:k_england
									de_jure_liege.de_jure_liege = title:k_england
									de_jure_liege.de_jure_liege.de_jure_liege = title:k_england
								}
							}
						}
					}
					every_vassal_or_below = {
						custom = embrace_english_culture_vassals_custom
						limit = {
							is_ai = yes
							OR = {
								culture = culture:norman
								culture = culture:french
							}
							primary_title = {
								OR = {
									de_jure_liege = title:k_england
									de_jure_liege.de_jure_liege = title:k_england
									de_jure_liege.de_jure_liege.de_jure_liege = title:k_england
								}
							}
						}
						set_culture = culture:english
						hidden_effect = {
							if = {
								limit = { any_spouse = { is_landed = no } }
								every_spouse = {
									limit = {
										is_landed = no
										OR = {
											culture = culture:norman
											culture = culture:french
										}
									}
									set_culture = culture:english
								}
							}
							if = {
								limit = {
									any_close_family_member = {
										is_landed = no
										NOT = { is_spouse_of = prev }
									}
								}
								every_close_family_member = {
									limit = {
										is_landed = no
										NOT = { is_spouse_of = prev }
									}
									custom = all_unlanded_family_members
									set_culture = culture:english
								}
							}
							if = {
								limit = {
									any_child = {
										NOT = { is_spouse_of = prev }
									}
								}
								every_child = {
									limit = {
										NOT = { is_spouse_of = prev }
									}
									custom = all_children_custom
									set_culture = culture:english
								}
							}
						}
					}
				}
			}
		}
	}

	#Flip Counties
	every_county_in_region = {
		region = custom_england
		custom = embrace_english_culture_counties_custom
		limit = {
			target_is_de_facto_liege_or_above = root.primary_title
		}
		save_scope_as = county
		culture = { save_scope_as = old_culture }
		random_list = {
			40 = {
				set_county_culture = culture:english
				add_culture_minority_effect = {
					CULTURE = scope:old_culture
					COUNTY = scope:county
					SIZE = small
				}
				add_culture_minority_effect = {
					CULTURE = scope:french_culture
					COUNTY = scope:county
					SIZE = small
				}
			}
			40 = {
				add_culture_minority_effect = {
					CULTURE = culture:english
					COUNTY = scope:county
					SIZE = large
				}
			}
			20 = {
				add_culture_minority_effect = {
					CULTURE = culture:english
					COUNTY = scope:county
					SIZE = small
				}
			}
		}
	}

	culture:english = {
		custom_tooltip = decision_embrace_english_culture_get_innovations
		hidden_effect = {
			reset_culture_creation_date = yes
			get_all_innovations_from = culture:norman
			get_all_innovations_from = culture:anglo_saxon
		}
	}
}

###
convert_player_realm_from_old_culture_to_new_effect = {
	# For localization
	$OLD_CULTURE$ = { save_scope_as = old_culture }
	$NEW_CULTURE$ = { save_scope_as = new_culture }

	custom_tooltip = global_culture.custom.change_culture
	hidden_effect = {
		# Compile a list of everyone who will flip to the new culture.
		every_vassal_or_below = {
			limit = {
				culture = $OLD_CULTURE$
			}
			add_to_list = characters_to_convert
			every_courtier = {
				limit = {
					culture = $OLD_CULTURE$
				}
				add_to_list = characters_to_convert
			}
		}
		every_courtier = {
			limit = {
				culture = $OLD_CULTURE$
			}
			add_to_list = characters_to_convert
		}

		# Flip the player to the new culture.
		set_culture = $NEW_CULTURE$
		add_character_flag = converted_culture_this_lifetime

		# Flip their courtiers/vassals with a custom description.
		every_in_list = {
			list = characters_to_convert
			set_culture = $NEW_CULTURE$
		}

		# Then flip all their counties.
		every_sub_realm_county = {
			limit = {
				culture = $OLD_CULTURE$
			}
			set_county_culture = $NEW_CULTURE$
			save_scope_as = county
			add_culture_minority_effect = {
				CULTURE = $OLD_CULTURE$
				COUNTY = scope:county
				SIZE = large
			}
		}
	}
}

### Unite Africa
unite_africa_decision_effects = {
	#Prestige
	add_prestige = massive_prestige_gain

	#Religion bonuses
	if = {
		limit = {
			faith = {
				OR = {
					religion_tag = islam_religion
					religion_tag = west_african_roog_religion
					religion_tag = west_african_religion
					religion_tag = west_african_bori_religion
					this = faith:coptic

				}
			}
		}
		add_piety = massive_piety_gain
		faith = {
			change_fervor = {
				value = medium_fervor_gain
				desc = fervor_gain_united_africa
			}
		}

		if = {
			limit = {
				any_vassal_or_below = {
					NOT = { faith = scope:africa_uniter.faith }
					is_ai = yes
					exists = capital_province
					capital_province = { geographical_region = world_africa }
				}
			}
			every_vassal_or_below = {
				custom = every_non_root_faith_vassal_africa
				limit = {
					NOT = { faith = scope:africa_uniter.faith }
					is_ai = yes
					exists = capital_province
					capital_province = { geographical_region = world_africa }
				}
				random = {
					chance = 33
					set_character_faith = scope:africa_uniter.faith
				}
			}
		}

		if = {
			limit = {
				any_realm_province = {
					NOT = { faith = scope:africa_uniter.faith }
					geographical_region = world_africa
				}
			}
			every_realm_province = {
				limit = {
					NOT = { faith = scope:africa_uniter.faith }
					geographical_region = world_africa
				}
				county = { add_to_list = every_realm_county }
			}

			every_in_list = {
				list = every_realm_county
				custom = every_non_root_faith_county_africa
				save_scope_as = county
				hidden_effect = { promote_faith_minority_effect = { FAITH = scope:africa_uniter.faith } }
			}
		}
	}
}


### Aveng Battle of Tours Effect
avenge_the_battle_of_tours_decision_effects = {

	give_nickname = nick_the_avenger
	add_character_modifier = {
		modifier = avenger_of_the_martyrs
	}

	add_prestige = massive_prestige_gain

	#Religious bonuses
	add_piety = massive_piety_gain
	faith = {
		change_fervor = {
			value = medium_fervor_gain
			desc = fervor_gain_avenged_battle_of_tours
		}
	}

	add_achievement_flag_effect = { FLAG = achievement_al_andalus_flag }

	if = {
		limit = {
			any_vassal_or_below = {
				NOT = { faith = scope:avenger.faith }
				is_ai = yes
				exists = capital_province
				capital_province = { geographical_region = world_europe_west }
			}
		}
		every_vassal_or_below = {
			custom = every_non_root_faith_vassal_west_europe
			limit = {
				NOT = { faith = scope:avenger.faith }
				is_ai = yes
				exists = capital_province
				capital_province = { geographical_region = world_europe_west }
			}
			random = {
				chance = 33
				set_character_faith = scope:avenger.faith
			}
		}
	}

	if = {
		limit = {
			any_realm_province = {
				NOT = { faith = scope:avenger.faith }
				geographical_region = world_europe_west
			}
		}
		every_realm_province = {
			limit = {
				NOT = { faith = scope:avenger.faith }
				geographical_region = world_europe_west
			}
			county = {
				add_to_list = every_realm_county
			}
		}

		every_in_list = {
			list = every_realm_county
			custom = every_non_root_faith_county_west_europe
			save_scope_as = county
			hidden_effect = { promote_faith_minority_effect = { FAITH = scope:avenger.faith } }
		}
	}

	#Christian penalty
	if = {
		limit = { exists = scope:frankish_christian_faith }
		scope:frankish_christian_faith = {
			change_fervor = {
				value = medium_fervor_loss
				desc = fervor_loss_avenged_battle_of_tours
			}
		}
	}

	# Rattach south of France to the e_hispania
	title:e_france = {
		every_in_de_jure_hierarchy = {
			limit = {
				tier = tier_kingdom
				any_in_de_jure_hierarchy = {
					tier = tier_county
					title_province = { geographical_region = custom_south_francia }
				}
			}
			set_de_jure_liege_title = title:e_spain
		}
	}
}

revive_magyar_paganism_decision_scripted_effect = {
	#Change yourself, and any willing vassals/family, over to Magyar Paganism.
	set_character_faith_with_conversion = faith:magyar_pagan
	#Gain nickname for your troubles.
	give_nickname = nick_the_apostate
	#Magyar_group counties of your old religion may defect back to the old ways.
	custom_tooltip = revive_magyar_paganism_decision_scripted_effect.county_conversions.tt
	hidden_effect = {
		primary_title = {
			every_in_de_facto_hierarchy = {
				limit = {
					tier = tier_county
					culture = { has_cultural_pillar = heritage_magyar }
					exists = scope:old_faith
					religion = scope:old_faith.religion
				}
				save_scope_as = county
				faith = { save_scope_as = old_county_faith }
				#Mogyers remember the old ways best, and have a high chance to flip.
				random_list = {
					0 = {
						trigger = {
							NOT = { faith = faith:magyar_pagan }
						}
						set_county_faith = faith:magyar_pagan
						add_faith_minority_effect = {
							COUNTY = scope:county
							FAITH = scope:old_county_faith
							SIZE = small
						}
						modifier = {
							culture = culture:mogyer
							add = 70
						}
					}
					0 = {
						trigger = {
							NOT = { faith = faith:magyar_pagan }
						}
						add_faith_minority_effect = {
							COUNTY = scope:county
							FAITH = faith:magyar_pagan
							SIZE = large
						}
						modifier = {
							holder = root
							add = 50
						}
					}
					30 = {
						trigger = {
							NOT = { faith = faith:magyar_pagan }
						}
						add_faith_minority_effect = {
							COUNTY = scope:county
							FAITH = faith:magyar_pagan
							SIZE = small
						}
					}
				}
			}
		}
	}
	#Make flipping counties deliriously happy about the whole affair.
	primary_title = {
		every_in_de_facto_hierarchy = {
			limit = {
				tier = tier_county
				faith = faith:magyar_pagan
			}
			custom = hungarian_resettlement.every_converted_province
			add_county_modifier = {
				modifier = magyar_appreciation_modifier
				years = 25
			}
		}
	}
	#Finally, give magyar_pagans a hefty fervour boost, just so that they don't immediately convert back.
	hidden_effect = {
		faith:magyar_pagan = {
			save_temporary_scope_as = magyar_faith
			change_fervor = {
				value = 100
				desc = fervor_gain_magyar_revivalism
			}
		}
	}
}

# Basque Pagan effects tenet fixes
favour_the_countryside_basques_decision_fundamentalist_path_scripted_effect = {
	faith:basque_pagan = {
		# First, we remove Christian Syncretism & replace it with Warmonger.
		remove_doctrine = tenet_christian_syncretism
		add_doctrine = doctrine_mz_no_syncretism
		remove_doctrine = tenet_adaptive
		add_doctrine = tenet_warmonger
		# Then, we switch on over from Pluralist to Fundamentalist.
		## We disguise some of these changes for neatness, as there's a lot to process.
		hidden_effect = { remove_doctrine = doctrine_pluralism_pluralistic }
		add_doctrine = doctrine_pluralism_fundamentalist
		# No HoF becomes a spiritual HoF, so that you can make use of your Warmonger GHWs.
		hidden_effect = { remove_doctrine = doctrine_no_head }
		add_doctrine = doctrine_spiritual_head
		# Plus, set the faith's fervour to a middling/low level, since you've messed with it.
		change_fervor = {
			value = -50
			desc = fervour_loss_temporal_meddling
		}
	}
	# Create the new HoF.
	hidden_effect = {
		scope:religious_leader = {
			set_up_dynamic_spiritual_hof_title_effect = { CREATOR = scope:religious_leader }
		}
	}
	custom_tooltip = favour_the_countryside_basques_decision.tt.spiritual_hof_acquired
	# We get a small modifier for clergy approval, since they're a bit peeved at the tenet-messing.
	add_character_modifier = fp2_friend_of_the_old_ways_modifier
}

favour_the_countryside_basques_decision_righteous_path_scripted_effect = {
	faith:basque_pagan = {
		# First, we remove Christian Syncretism & replace it with Sanctity of Nature.
		remove_doctrine = tenet_christian_syncretism
		add_doctrine = doctrine_mz_no_syncretism
		remove_doctrine = tenet_adaptive
		add_doctrine = tenet_sanctity_of_nature
		# Then, we switch on over from Pluralist to Righteous.
		## We disguise some of these changes for neatness, as there's a lot to process.
		hidden_effect = { remove_doctrine = doctrine_pluralism_pluralistic }
		add_doctrine = doctrine_pluralism_righteous
		# No HoF becomes you as the temporal HoF, as you're focusing more on the non-Christian parts of the faith.
		hidden_effect = {
			remove_doctrine = doctrine_no_head
			remove_doctrine = doctrine_theocracy_temporal
			remove_doctrine = doctrine_clerical_succession_spiritual_appointment
		}
		add_doctrine = doctrine_temporal_head
		add_doctrine = doctrine_theocracy_lay_clergy
		add_doctrine = doctrine_clerical_succession_temporal_fixed_appointment
		# Plus, set the faith's fervour to a middling/low level, since you've messed with it.
		change_fervor = {
			value = -50
			desc = fervour_loss_temporal_meddling
		}
	}
	# Create the new HoF.
	hidden_effect = {
		scope:religious_leader = {
			set_up_dynamic_temporal_hof_title_effect = { NEW_HOLDER = scope:religious_leader }
		}
	}
	custom_tooltip = favour_the_countryside_basques_decision.tt.temporal_hof_acquired
	# We get a small modifier for clergy approval, since they're a bit peeved at the tenet-messing.
	add_character_modifier = fp2_friend_of_the_old_ways_modifier
}

# $CULTURE$
# $SIZE$
# $COUNTY$
add_culture_minority_effect = {
	$CULTURE$ = { save_scope_as = loc_culture }
	$COUNTY$ = {
		save_scope_as = loc_county # for loc
 		if = {
			limit = {
				NOR = {
					culture = $CULTURE$
					is_target_in_variable_list = { name = culture_minorities_small target = $CULTURE$  }
					is_target_in_variable_list = { name = culture_minorities_large target = $CULTURE$  }
				}
			}
			add_to_variable_list = {
				name = culture_minorities_$SIZE$
				target = $CULTURE$
			}
		}

		# Localization
		if = {
			limit = { is_target_in_variable_list = { name = culture_minorities_large target = $CULTURE$ } }
			custom_tooltip = add_culture_minority_effect_large_tt
		}
		else = {
			custom_tooltip = add_culture_minority_effect_small_tt
		}
	}
}

# $FAITH$
# $SIZE$
# $COUNTY$
add_faith_minority_effect = {
	$COUNTY$ = {
		if = {
			limit = {
				NOR = {
					faith = $FAITH$
					is_target_in_variable_list = { name = faith_minorities_small target = $FAITH$  }
					is_target_in_variable_list = { name = faith_minorities_large target = $FAITH$  }
				}
			}

			add_to_variable_list = {
				name = faith_minorities_$SIZE$
				target = $FAITH$
			}
		}
	}
}

# scope:county
# $CULTURE$
promote_culture_minority_effect = {
	$CULTURE$ = { save_scope_as = minority_growth }
	custom_tooltip = minority_culture_growth
	if = {
		limit = { scope:county.culture = $CULTURE$ }
		# failsafe because this should never happen
	}
	else_if = {
		limit = {
			has_variable_list = culture_minorities_small
			is_target_in_variable_list = {
				name = culture_minorities_small
				target = $CULTURE$
			}
		}
		add_to_variable_list = {
			name = culture_minorities_large
			target = $CULTURE$
		}
		remove_list_variable = {
			name = culture_minorities_small
			target = $CULTURE$
		}
	}
	else_if = {
		limit = {
			has_variable_list = culture_minorities_large
			is_target_in_variable_list = {
				name = culture_minorities_large
				target = $CULTURE$
			}
		}
		remove_list_variable = {
			name = culture_minorities_large
			target = $CULTURE$
		}
		add_to_variable_list = {
			name = culture_minorities_large
			target = scope:county.culture
		}

		set_county_culture = $CULTURE$
	}
	else = {
		add_to_variable_list = {
			name = culture_minorities_small
			target = $CULTURE$
		}
	}
}

# scope:county
# $FAITH$
promote_faith_minority_effect = {
	$FAITH$ = { save_scope_as = minority_growth }
	custom_tooltip = minority_faith_growth
	if = {
		limit = { scope:county.faith = $FAITH$ }
		# failsafe because this should never happen
	}
	else_if = {
		limit = {
			has_variable_list = faith_minorities_small
			is_target_in_variable_list = {
				name = faith_minorities_small
				target = $FAITH$
			}
		}
		add_to_variable_list = {
			name = faith_minorities_large
			target = $FAITH$
		}
		remove_list_variable = {
			name = faith_minorities_small
			target = $FAITH$
		}
	}
	else_if = {
		limit = {
			has_variable_list = faith_minorities_large
			is_target_in_variable_list = {
				name = faith_minorities_large
				target = $FAITH$
			}
		}
		remove_list_variable = {
			name = faith_minorities_large
			target = $FAITH$
		}
		add_to_variable_list = {
			name = faith_minorities_large
			target = scope:county.faith
		}

		set_county_faith = $FAITH$
	}
	else = {
		add_to_variable_list = {
			name = faith_minorities_small
			target = $FAITH$
		}
	}
}

demote_random_faith_minority_effect = {
	if = {
		limit = { has_variable_list = faith_minorities_small }
		every_in_list = {
			variable = faith_minorities_small
			add_to_temporary_list = potential_faiths
		}
	}
	if = {
		limit = { has_variable_list = faith_minorities_large }
		every_in_list = {
			variable = faith_minorities_large
			add_to_temporary_list = potential_faiths
		}
	}

	random_in_list = {
		list = potential_faiths
		save_scope_as = faith_to_demote
	}

	if = {
		limit = { exists = scope:faith_to_demote }

		if = {
			limit = {
				has_variable_list = faith_minorities_large
				is_target_in_variable_list = {
					name = faith_minorities_large
					target = scope:faith_to_demote
				}
			}
			remove_list_variable = {
				name = faith_minorities_large
				target = scope:faith_to_demote
			}
			add_to_variable_list = {
				name = faith_minorities_small
				target = scope:faith_to_demote
			}
		}
		else_if = {
			limit = {
				has_variable_list = faith_minorities_small
				is_target_in_variable_list = {
					name = faith_minorities_small
					target = scope:faith_to_demote
				}
			}
			remove_list_variable = {
				name = faith_minorities_small
				target = scope:faith_to_demote
			}
		}
	}
}

demote_random_culture_minority_effect = {
	if = {
		limit = { has_variable_list = culture_minorities_small }
		every_in_list = {
			variable = culture_minorities_small
			add_to_temporary_list = potential_cultures
		}
	}
	if = {
		limit = { has_variable_list = culture_minorities_large }
		every_in_list = {
			variable = culture_minorities_large
			add_to_temporary_list = potential_cultures
		}
	}

	random_in_list = {
		list = potential_cultures
		save_scope_as = culture_to_demote
	}

	if = {
		limit = { exists = scope:culture_to_demote }

		if = {
			limit = {
				has_variable_list = culture_minorities_large
				is_target_in_variable_list = {
					name = culture_minorities_large
					target = scope:culture_to_demote
				}
			}
			remove_list_variable = {
				name = culture_minorities_large
				target = scope:culture_to_demote
			}
			add_to_variable_list = {
				name = culture_minorities_small
				target = scope:culture_to_demote
			}
		}
		else_if = {
			limit = {
				has_variable_list = culture_minorities_small
				is_target_in_variable_list = {
					name = culture_minorities_small
					target = scope:culture_to_demote
				}
			}
			remove_list_variable = {
				name = culture_minorities_small
				target = scope:culture_to_demote
			}
			if = {
				limit = {
					scope:culture_to_delete = culture:brahui
					has_county_modifier = RICE_pamir_brahui_tribes
				}
				remove_county_modifier = RICE_pamir_brahui_tribes
			}
		}
	}
}

# scope:source_county
county_to_county_culture_faith_migration_effect = {
	scope:source_county = {
		if = {
			limit = {
				any_title_to_title_neighboring_county = {
					OR = {
						NOT = { faith = scope:source_county.faith }
						NOT = { culture = scope:source_county.culture }
					}
					OR = {
						NOT = { has_variable = faith_migration_protection }
						NOT = { has_variable = culture_migration_protection }
					}
					holder = {
						has_realm_law_flag = religious_minorities_may_migrate
						has_realm_law_flag = cultural_minorities_may_migrate
					}
				}
			}
			random_neighboring_county = {
				limit = {
					OR = {
						NOT = { faith = scope:source_county.faith }
						NOT = { culture = scope:source_county.culture }
					}
					holder = {
						has_realm_law_flag = religious_minorities_may_migrate
						has_realm_law_flag = cultural_minorities_may_migrate
					}
				}
				save_scope_as = county
				if = {
					limit = {
						NOT = {
							faith = scope:source_county.faith
							has_variable = faith_migration_protection
						}
					}
					promote_faith_minority_effect = { FAITH = scope:source_county.faith }
				}
				if = {
					limit = {
						NOT = {
							culture = scope:source_county.culture
							has_variable = culture_migration_protection
						}
					}
					promote_culture_minority_effect = { CULTURE = scope:source_county.culture }
				}
				notify_characters_of_culture_faith_migration_effect = yes
			}
		}
	}
}

# scope:minority_culture
# scope:source_county
minority_culture_growth_effect = {
	scope:source_county = {
		if = {
			limit = { holder = { has_realm_law_flag = cultural_minorities_may_grow } }
			save_scope_as = county
			promote_culture_minority_effect = { CULTURE = scope:minority_culture }
		}
	}
}

minority_culture_spread_effect = {
	scope:source_county = {
		random_neighboring_county = {
			limit = {
				holder = { has_realm_law_flag = cultural_minorities_may_migrate }
				NOT = {
					culture = scope:minority_culture
					has_variable = faith_migration_protection
				}
			}
			save_scope_as = county
			promote_culture_minority_effect = { CULTURE = scope:minority_culture }
			notify_characters_of_culture_migration_effect = yes
		}
	}
}

# scope:minority_faith
# scope:source_county
minority_faith_growth_effect = {
	scope:source_county = {
		if = {
			limit = { holder = { has_realm_law_flag = religious_minorities_may_grow } }
			save_scope_as = county
			promote_faith_minority_effect = { FAITH = scope:minority_faith }
		}
	}
}

minority_faith_spread_effect = {
	scope:source_county = {
		random_neighboring_county = {
			limit = {
				holder = { has_realm_law_flag = religious_minorities_may_migrate }
				NOT = {
					faith = scope:minority_faith
					has_variable = faith_migration_protection
				}
			}
			save_scope_as = county
			promote_faith_minority_effect = { FAITH = scope:minority_faith }
			notify_characters_of_faith_migration_effect = yes
		}
	}
}

# scope:source_county
# scope:county
notify_characters_of_culture_faith_migration_effect = {
	scope:source_county.holder = {
		add_to_temporary_list = characters_to_notify
		top_liege = {
			if = {
				limit = { is_ai = no }
				add_to_temporary_list = characters_to_notify
			}
			every_vassal_or_below = {
				limit = {
					is_ai = no
					any_sub_realm_county = { this = scope:source_county }
				}
				add_to_temporary_list = characters_to_notify
			}
		}
	}

	scope:county.holder = {
		add_to_temporary_list = characters_to_notify
		top_liege = {
			if = {
				limit = { is_ai = no }
				add_to_temporary_list = characters_to_notify
			}
			every_vassal_or_below = {
				limit = {
					is_ai = no
					any_sub_realm_county = { this = scope:county }
				}
				add_to_temporary_list = characters_to_notify
			}
		}
	}

	every_in_local_list = {
		list = characters_to_notify

		send_interface_toast = {
			type = event_generic_neutral
			title = minority_culture_faith_spread_title
			custom_tooltip = minority_culture_faith_spread_tt
			right_icon = scope:county
		}
	}
}

# scope:source_county
# scope:county
notify_characters_of_faith_migration_effect = {
	scope:source_county.holder = {
		add_to_temporary_list = characters_to_notify
		top_liege = {
			if = {
				limit = { is_ai = no }
				add_to_temporary_list = characters_to_notify
			}
			every_vassal_or_below = {
				limit = {
					is_ai = no
					any_sub_realm_county = { this = scope:source_county }
				}
				add_to_temporary_list = characters_to_notify
			}
		}
	}

	scope:county.holder = {
		add_to_temporary_list = characters_to_notify
		top_liege = {
			if = {
				limit = { is_ai = no }
				add_to_temporary_list = characters_to_notify
			}
			every_vassal_or_below = {
				limit = {
					is_ai = no
					any_sub_realm_county = { this = scope:county }
				}
				add_to_temporary_list = characters_to_notify
			}
		}
	}

	every_in_local_list = {
		list = characters_to_notify

		send_interface_toast = {
			type = event_generic_neutral
			title = minority_faith_spread_title
			custom_tooltip = minority_faith_spread_tt
			right_icon = scope:county
		}
	}
}

# scope:source_county
# scope:county
notify_characters_of_culture_migration_effect = {
	scope:source_county.holder = {
		add_to_temporary_list = characters_to_notify
		top_liege = {
			if = {
				limit = { is_ai = no }
				add_to_temporary_list = characters_to_notify
			}
			every_vassal_or_below = {
				limit = {
					is_ai = no
					any_sub_realm_county = { this = scope:source_county }
				}
				add_to_temporary_list = characters_to_notify
			}
		}
	}

	scope:county.holder = {
		add_to_temporary_list = characters_to_notify
		top_liege = {
			if = {
				limit = { is_ai = no }
				add_to_temporary_list = characters_to_notify
			}
			every_vassal_or_below = {
				limit = {
					is_ai = no
					any_sub_realm_county = { this = scope:county }
				}
				add_to_temporary_list = characters_to_notify
			}
		}
	}

	every_in_local_list = {
		list = characters_to_notify

		send_interface_toast = {
			type = event_generic_neutral
			title = minority_culture_spread_title
			custom_tooltip = minority_culture_spread_tt
			right_icon = scope:county
		}
	}
}

# scope:source_county
# scope:county
notify_recipient_of_culture_faith_migration_effect = {
	scope:county.holder = {
		add_to_temporary_list = characters_to_notify
		top_liege = {
			if = {
				limit = { is_ai = no }
				add_to_temporary_list = characters_to_notify
			}
			every_vassal_or_below = {
				limit = {
					is_ai = no
					any_sub_realm_county = { this = scope:county }
				}
				add_to_temporary_list = characters_to_notify
			}
		}
	}

	every_in_local_list = {
		list = characters_to_notify

		send_interface_toast = {
			type = event_generic_neutral
			title = minority_culture_faith_appearance_title
			custom_tooltip = minority_culture_faith_appearance_tt
			right_icon = scope:county
		}
	}
}

# scope:source_county
# scope:county
notify_recipient_of_faith_migration_effect = {
	scope:county.holder = {
		add_to_temporary_list = characters_to_notify
		top_liege = {
			if = {
				limit = { is_ai = no }
				add_to_temporary_list = characters_to_notify
			}
			every_vassal_or_below = {
				limit = {
					is_ai = no
					any_sub_realm_county = { this = scope:county }
				}
				add_to_temporary_list = characters_to_notify
			}
		}
	}

	every_in_local_list = {
		list = characters_to_notify

		send_interface_toast = {
			type = event_generic_neutral
			title = minority_faith_appearance_title
			custom_tooltip = minority_faith_appearance_tt
			right_icon = scope:county
		}
	}
}

# scope:source_county
# scope:county
notify_recipient_of_culture_migration_effect = {
	scope:county.holder = {
		add_to_temporary_list = characters_to_notify
		top_liege = {
			if = {
				limit = { is_ai = no }
				add_to_temporary_list = characters_to_notify
			}
			every_vassal_or_below = {
				limit = {
					is_ai = no
					any_sub_realm_county = { this = scope:county }
				}
				add_to_temporary_list = characters_to_notify
			}
		}
	}

	every_in_local_list = {
		list = characters_to_notify

		send_interface_toast = {
			type = event_generic_neutral
			title = minority_culture_appearance_title
			custom_tooltip = minority_culture_appearance_tt
			right_icon = scope:county
		}
	}
}


# $REGION$: A silk road region: steppe, india, himalayas, middle_east, east_asia
# YOU NEED TO KEEP SPELLING AND CASE OR THIS WON'T WORK
do_silk_road_migration_effect = {
	random_held_title = {
		limit = { tier = tier_county }
		save_scope_as = county
		random_county_in_region = {
			region = $REGION$
			limit = {
				NAND = {
					has_variable = faith_migration_protection
					has_variable = culture_migration_protection
				}
			}
			save_scope_as = source_county
		}
		non_neighbor_migration_effect = yes
	}
}

fake_silk_road_migration_effect = {
	random_held_title = {
		limit = { tier = tier_county }
		save_scope_as = county
		if = {
			limit = {
				NOR = {
					faith = scope:county_faith
					has_variable = faith_migration_protection
				}
			}
			promote_faith_minority_effect = { FAITH = scope:county_faith }
		}
		if = {
			limit = {
				NOR = {
					culture = scope:county_culture
					has_variable = culture_migration_protection
				}
			}
			promote_culture_minority_effect = { CULTURE = scope:county_culture }
		}
	}
	notify_characters_of_fake_migration_effect = yes
}

notify_characters_of_culture_faith_migration_effect = {
	scope:county.holder = {
		add_to_temporary_list = characters_to_notify
		top_liege = {
			if = {
				limit = { is_ai = no }
				add_to_temporary_list = characters_to_notify
			}
			every_vassal_or_below = {
				limit = {
					is_ai = no
					any_sub_realm_county = { this = scope:county }
				}
				add_to_temporary_list = characters_to_notify
			}
		}
	}

	every_in_local_list = {
		list = characters_to_notify

		send_interface_toast = {
			type = event_generic_neutral
			title = minority_culture_faith_spread_title
			custom_tooltip = minority_culture_faith_spread_tt
			right_icon = scope:county
		}
	}
}

notify_characters_of_fake_migration_effect = {
	scope:county.holder = {
		add_to_temporary_list = characters_to_notify
		if = {
			limit = { is_ai = no }
			add_to_temporary_list = characters_to_notify
		}
		every_vassal_or_below = {
			limit = {
				is_ai = no
				any_sub_realm_county = { this = scope:county }
			}
			add_to_temporary_list = characters_to_notify
		}
	}

	every_in_local_list = {
		list = characters_to_notify

		send_interface_toast = {
			type = event_generic_neutral
			title = minority_culture_faith_spread_title
			custom_tooltip = offmap_culture_faith_spread_title_tt
			right_icon = scope:county
		}
	}
}

#scope:source_county
#scope:county
non_neighbor_migration_effect = {
	if = {
		limit = { NOR = { faith = scope:source_county.faith } }
		promote_faith_minority_effect = { FAITH = scope:source_county.faith }
	}
	if = {
		limit = { NOT = { culture = scope:source_county.culture } }
		promote_culture_minority_effect = { CULTURE = scope:source_county.culture }
	}
	notify_characters_of_culture_faith_migration_effect = yes
}

# This iterates over every county in the game
# ONLY USE IT TO FIX MINORITIES WHILE DEBUGGING
debug_fix_minorities = {
	every_county = {
		limit = {
			county_has_specific_minority_culture_trigger = { CULTURE = this.culture }
		}
		remove_list_variable = {
			name = culture_minorities_large
			target = this.culture
		}
		remove_list_variable = {
			name = culture_minorities_small
			target = this.culture
		}
	}
	every_county = {
		limit = {
			county_has_specific_minority_faith_trigger = { FAITH = this.faith }
		}
		remove_list_variable = {
			name = faith_minorities_large
			target = this.faith
		}
		remove_list_variable = {
			name = faith_minorities_small
			target = this.faith
		}
	}
}
