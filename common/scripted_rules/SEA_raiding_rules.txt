# Can this character cross water (sea, rivers) while on raid?
# root: the potential raider
can_raid_across_water = { can_raid_across_water_trigger = yes }

# Can this character traverse rivers using boats?
# root: the owner of the army
can_traverse_river = {
	OR = {
		culture = {
			OR = {
				has_innovation = innovation_longboats
				has_innovation = innovation_african_canoes
				has_innovation = innovation_outrigger_boats
				has_cultural_parameter = can_travel_along_rivers									
			}
		}
		AND = {
			exists = dynasty
			dynasty = { has_dynasty_modifier = fp1_legacy_of_piracy_modifier }
		}
	}
}

# Is the alliance reason still valid
# Root = First character of alliance reason
# scope:second = Second character of alliance reason
is_alliance_valid = {
	OR = {
		any_spouse = {
			this = scope:second
		}
		betrothed = scope:second
		is_parent_of = scope:second
		is_child_of = scope:second
		is_sibling_of = scope:second
		is_grandparent_of = scope:second
		is_great_grandparent_of = scope:second
		is_grandchild_of = scope:second
		is_great_grandchild_of = scope:second
		is_uncle_or_aunt_of = scope:second
		is_nibling_of = scope:second
		scope:second = {
			OR = {
				has_opinion_modifier = {
					modifier = perk_negotiated_alliance_opinion
					target = root
				}
				has_opinion_modifier = {
					modifier = event_negotiated_alliance_opinion
					target = root
				}
				has_opinion_modifier = {
					modifier = mandala_negotiated_alliance_opinion
					target = root
				}
				has_opinion_modifier = {
					modifier = steppe_negotiated_alliance_opinion
					target = root
				}
			}
		}
		#childhood friendship with hostage event, where they swear to be friends forever
		AND = {
			OR = {
				has_relation_friend = scope:second
				has_relation_best_friend = scope:second
			}
			OR = {
				any_memory = {
					has_memory_type = hostage_oath_of_friendship
					has_memory_participant = scope:second
				}
				scope:second = {
					any_memory = {
						has_memory_type = hostage_oath_of_friendship
						has_memory_participant = root
					}
				}
			}
		}
		# FP3 struggle case
		has_character_flag = fp3_is_a_loyalist_puppet
		scope:second = { has_character_flag = fp3_is_a_loyalist_puppet }
	}
}