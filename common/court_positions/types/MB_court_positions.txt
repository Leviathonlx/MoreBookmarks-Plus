#From court positions expanded
#https://steamcommunity.com/sharedfiles/filedetails/?id=2754449789
#Mod was abandoned. Added the positions, fixed some of the bugs, and nerfed many of their modifiers to more reasonable levels to prevent modifier bloat while still retaining the flavor of the court positions. Many positions also will require the person be a noble

# Have a look at _court_positions.info for documentation

# COURT POSITIONS
# grand_vizier_court_position  -
# court_herbalist_court_position  -
# master_at_arms_position  -
# chief_herald_court_position  -
# master_of_sacrifices_court_position  -
# royal_armorer_court_position  -
# royal_tax_collector_court_position  -
# royal_tariff_collector_court_position  -
# master_of_the_royal_mounted_couriers_court_position  -
# court_canonist_court_position  -
# queen_mother_position  -
# court_philosopher_position  -
# royal_chronicler_court_position  -
# court_historian_court_position  -
# grand_admiral_court_position  -
# priest_of_the_sacred_grove_court_position  -
# head_torturer_court_position -
# peer_of_france_lay_court_position  -
# peer_of_france_bishop_court_position -
# dragoman_court_position - 
# minister_of_works_court_position -

#Feel like I should remove this given Viziers are an actual thing now
#grand_vizier_court_position = {
#	
#	max_available_positions = 1
#	category = court_position_category_royal
#	skill = stewardship
#	minimum_rank = kingdom 
#
#	opinion = {
#		value = 15
#	}
#	
#	# How high the aptitude has to be to reach the 5 different modifier levels
#	aptitude_level_breakpoints = { 20 40 65 85 }
#	
#	# How good is this character in this position? root scope is the holder of the court position
#	aptitude = {
#		value = 10
#		add = {
#			value = stewardship
#			multiply = 3.0
#			max = 45
#			desc = court_position_skill_stewardship
#		}
#		if = {
#			limit = {
#				has_trait = administrator
#			}
#			add = {
#				value = 20
#				desc = court_position_administrator_trait
#			}
#		}
#		if = {
#			limit = {
#				has_trait = diligent
#			}
#			add = {
#				value = 5
#				desc = court_position_diligent_trait
#			}
#		}
#		if = {
#			limit = {
#				has_trait = just
#			}
#			add = {
#				value = 5
#				desc = court_position_just_trait
#			}
#		}
#		if = {
#			limit = {
#				has_trait = arbitrary
#			}
#			add = {
#				value = -5
#				desc = court_position_arbitrary_trait
#			}
#		}
#		if = {
#			limit = {
#				has_trait = profligate
#			}
#			add = {
#				value = -5
#				desc = court_position_profligate_trait
#			}
#		}
#		if = {
#			limit = {
#				has_trait = improvident
#			}
#			add = {
#				value = -10
#				desc = court_position_improvident_trait
#			}
#		}
#		add = court_position_aptitude_family_business_value
#		add = court_position_aptitude_low_penalty_value
#	}
#	
#	# Is this an available position for this court? (root is court owner)
#	is_shown = {
#		has_religion = religion:islam_religion
#	}
#	
#	valid_position = {
#		has_religion = religion:islam_religion
#		highest_held_title_tier >= tier_kingdom
#	}
#
#	valid_character = {
#		scope:employee = {
#			is_imprisoned = no
#			is_lowborn = no
#			has_religion = religion:islam_religion
#			trigger_if = {
#				limit = {
#					scope:liege.faith = {
#						has_doctrine = doctrine_gender_male_dominated
#					}
#				}
#				is_male = yes
#			}
#			trigger_if = {
#				limit = {
#					scope:liege.faith = {
#						has_doctrine = doctrine_gender_female_dominated
#					}
#				}
#				is_female = yes
#			}
#		}
#	}
#	
#	is_powerful_agent = yes
#	
#	revoke_cost = {
#		prestige =  {
#			value = major_court_position_prestige_revoke_cost
#			# Set to 0 with Dynasty Perk Inner Circle
#			if = {
#				limit = {
#					exists = dynasty
#					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }
#
#					employs_court_position = court_physician_court_position
#					any_court_position_holder = {
#				        type = court_physician_court_position
#						exists = dynasty
#						house = prev.house
#					}
#				}
#				multiply = 0
#			}
#			if = {
#				limit = {
#					exists = this
#					is_ai = yes
#				}
#				multiply = 0
#			}
#		}
#	}
#	
#	salary = {
#		round = no
#		gold = {
#			value = major_court_position_salary
#			# Set to 0 with Dynasty Perk Inner Circle
#			if = {
#				limit = {
#					scope:liege = {
#						exists = dynasty
#						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }
#
#						employs_court_position = grand_vizier_court_position
#						any_court_position_holder = {
#					        type = grand_vizier_court_position
#							exists = dynasty
#							house = prev.house
#						}
#					}
#				}
#				multiply = {
#					value = 0.0
#					desc = inner_circle_salary_mod
#					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
#				}
#			}
#			if = {
#				limit = {
#					scope:liege = {
#						employs_court_position = grand_vizier_court_position
#						any_court_position_holder = {
#					        type = grand_vizier_court_position
#					        scope:liege = {
#								has_hook_of_type = {
#									type = obligation_hook
#									target = prev
#								}
#							}
#						}
#					}
#				}
#				multiply = {
#					value = 0.5
#					desc = obligation_hook_salary
#				}
#			}
#		}
#	}
#	
#	scaling_employer_modifiers = {
#		terrible = { 
#			levy_size = 0.01
#			republic_government_vassal_opinion = 1
#			stress_gain_mult = -0.01
#		}
#		poor = {
#			domain_tax_mult = 0.01
#			levy_size = 0.01
#			republic_government_vassal_opinion = 2
#			stress_gain_mult = -0.02
#		}
#		average = {
#			vassal_limit = 1
#			domain_tax_mult = 0.02
#			levy_size = 0.02
#			republic_government_vassal_opinion = 3
#			stress_gain_mult = -0.03
#		}
#		good = {
#			vassal_limit = 2
#			domain_tax_mult = 0.03
#			levy_size = 0.02
#			republic_government_vassal_opinion = 4
#			stress_gain_mult = -0.04
#		}
#		excellent = {
#			domain_limit = 3
#			vassal_limit = 4
#			domain_tax_mult = 0.04
#			levy_size = 0.03
#			republic_government_vassal_opinion = 5
#			stress_gain_mult = -0.05
#		}
#	}
#	
#	modifier = {
#		monthly_prestige = major_court_position_prestige_salary
#		monthly_prestige_gain_mult = 0.05
#		diplomacy = 2
#	}
#	
#	on_court_position_received = {
#		basic_gained_court_position_effect = yes 
#	}
#	on_court_position_revoked = {
#		basic_revoked_court_position_effect = yes 
#	}
#	on_court_position_invalidated = {
#		basic_invalidated_court_position_effect = yes 
#	}
#	candidate_score = {
#		value = 50
#		add = scope:base_value
#		add = court_position_candidate_score_base_value
#		add = court_position_candidate_aptitude_value
#		add = court_position_debt_considerations_value
#	}
#}

court_herbalist_court_position = {
	
	max_available_positions = 1
	category = court_position_category_common
	skill = learning

	opinion = {
		value = regular_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 85 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 20
		add = {
			value = learning
			multiply = 1.3
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = lifestyle_herbalist
			}
			add = {
				value = 20
				desc = court_position_herbalist_trait
			}
		}
		#if = {
		#	limit = {
		#		culture = { has_cultural_parameter = court_physicians_are_better }
		#	}
		#	add = {
		#		value = learning
		#		desc = court_physician_tradition_bonus
		#	}
		#}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	is_shown = { }

	# Is this an available position for this court? (root is court owner)
	valid_position = { }

	is_shown_character = {
		scope:employee = {
			is_courtier_of = scope:liege
		}
	}

	valid_character = {
		scope:employee = { is_imprisoned = no }
		scope:employee = { has_trait = lifestyle_herbalist }
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = court_herbalist_court_position
						any_court_position_holder = {
					        type = court_herbalist_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = court_herbalist_court_position
						any_court_position_holder = {
					        type = court_herbalist_court_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = { 
			negate_health_penalty_add = 0.02
		}
		poor = {
			learning = 1
			negate_health_penalty_add = 0.03
		}
		average = {
			learning = 2
			negate_health_penalty_add = 0.04
		}
		good = {
			learning = 2
			negate_health_penalty_add = 0.05
		}
		excellent = {
			learning = 2
			negate_health_penalty_add = 0.06
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		learning = 1
	}

	#custom_employee_modifier_description = court_physician_employee_custom_effect_description

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}

	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
        value = -51
    }
}

master_at_arms_position = {
	
	max_available_positions = 1
	category = court_position_category_special
	skill = martial

	opinion = {
		value = ceremonial_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 25 45 65 88 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = martial
			multiply = 2
			max = 45
			desc = court_position_skill_martial
		}
		add = {
			value = prowess
			multiply = 2
			max = 40
			desc = court_position_skill_prowess
		}
		if = {
			limit = {
				has_trait = overseer
			}
			add = {
				value = 10
				desc = court_position_overseer_trait
			}
		}
		if = {
			limit = {
				has_trait = strategist
			}
			add = {
				value = 10
				desc = court_position_strategist_trait
			}
		}
		if = {
			limit = {
				has_trait = gallant
			}
			add = {
				value = 10
				desc = court_position_gallant_trait
			}
		}
		if = {
			limit = {
				has_trait = craven
			}
			add = {
				value = -10
				desc = court_position_craven_trait
			}
		}
		if = {
			limit = {
				has_trait = physique_bad_1
			}
			add = {
				value = -10
				desc = court_position_weak_trait
			}
		}
		if = {
			limit = {
				has_trait = physique_bad_2
			}
			add = {
				value = -20
				desc = court_position_frail_trait
			}
		}
		if = {
			limit = {
				has_trait = physique_bad_3
			}
			add = {
				value = -20
				desc = court_position_feeble_trait
			}
		}
		if = {
			limit = {
				has_trait = lazy
			}
			add = {
				value = -10
				desc = court_position_lazy_trait
			}
		}
		if = {
			limit = {
				has_trait = deceitful
			}
			add = {
				value = -5
				desc = court_position_deceitful_trait
			}
		}
		if = {
			limit = {
				has_trait = honest
			}
			add = {
				value = 5
				desc = court_position_honest_trait
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_high_penalty_value
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = { 
			knight_effectiveness_mult = 0.01
		}
		poor = {
			knight_effectiveness_mult = 0.02
		}
		average = {
			knight_effectiveness_mult = 0.04
			knight_limit = 1
		}
		good = {
			knight_effectiveness_mult = 0.06
			knight_limit = 1
		}
		excellent = {
			knight_effectiveness_mult = 0.08
			knight_limit = 2
		}
	}

	is_shown = {
		has_ep1_court_positions_dlc_trigger = yes
	}

	valid_character = {
		scope:employee = {
			is_imprisoned = no
			is_knight = yes
			is_lowborn = no
		}
	}
	
	is_powerful_agent = yes

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		prestige = 0.30
		gold = {
			value = medium_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = master_at_arms_position
						any_court_position_holder = {
					        type = master_at_arms_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = master_at_arms_position
						any_court_position_holder = {
					        type = master_at_arms_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}

	modifier = {
		monthly_prestige = medium_court_position_prestige_salary
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 50
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		add = court_position_debt_considerations_value
	}
}

chief_herald_court_position = {
	
	max_available_positions = 1
	category = court_position_category_royal
	skill = martial
	minimum_rank = kingdom # Should only be available for kings and emperors

	opinion = {
		value = ceremonial_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 25 45 65 85 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 20
		add = {
			value = martial
			multiply = 1.70
			max = 50
			desc = court_position_skill_martial
		}
		add = {
			value = stewardship
			multiply = 1.70
			max = 50
			desc = court_position_skill_stewardship
		}
		if = {
			limit = {
				has_trait = gallant
			}
			add = {
				value = 20
				desc = court_position_gallant_trait
			}
		}
		if = {
			limit = {
				has_trait = administrator
			}
			add = {
				value = 20
				desc = court_position_administrator_trait
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_high_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	valid_position = {
		highest_held_title_tier >= tier_kingdom
		culture = { has_innovation = innovation_heraldry }
	}

	valid_character = {
		scope:employee = {
			is_imprisoned = no
			is_vassal_of = scope:liege
			is_lowborn = no
		}
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = medium_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = chief_herald_court_position
						any_court_position_holder = {
					        type = chief_herald_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = chief_herald_court_position
						any_court_position_holder = {
					        type = chief_herald_court_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = { 
			monthly_prestige = 0.02
		}
		poor = {
			monthly_prestige = 0.05
		}
		average = {
			monthly_prestige = 0.07
			monthly_dynasty_prestige = 0.01
		}
		good = {
			monthly_prestige = 0.09
			monthly_dynasty_prestige = 0.03
			direct_vassal_opinion = 1
		}
		excellent = {
			monthly_prestige = 0.10
			monthly_dynasty_prestige = 0.05
			direct_vassal_opinion = 3
		}
	}

	modifier = {
		monthly_prestige = major_court_position_prestige_salary
		monthly_dynasty_prestige_mult = 0.05
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}

	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = -51
	}
}

master_of_sacrifices_court_position = {
	
	max_available_positions = 1
	category = court_position_category_special
	skill = intrigue
	minimum_rank = county

	opinion = {
		value = ceremonial_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 85 }
	
	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 10
		add = {
			value = intrigue
			multiply = 3
			max = 50
			desc = court_position_skill_intrigue
		}
		if = {
			limit = {
				has_trait = sadistic
			}
			add = {
				value = 25
				desc = court_position_sadistic_trait
			}
		}
		if = {
			limit = {
				has_trait = zealous
			}
			add = {
				value = 25
				desc = court_position_zealous_trait
			}
		}
		if = {
			limit = {
				has_trait = torturer
			}
			add = {
				value = 20
				desc = court_position_torturer_trait
			}
		}
		if = {
			limit = {
				has_trait = callous
			}
			add = {
				value = 20
				desc = court_position_callous_trait
			}
		}
		if = {
			limit = {
				has_trait = murderer 
			}
			add = {
				value = 10
				desc = court_position_murderer_trait
			}
		}
		if = {
			limit = {
				has_trait = albino
			}
			add = {
				value = 10
				desc = court_position_albino_trait
			}
		}
		if = {
			limit = {
				has_trait = craven
			}
			add = {
				value = -10
				desc = court_position_craven_trait
			}
		}
		if = {
			limit = {
				has_trait = compassionate
			}
			add = {
				value = -50
				desc = court_position_compassionate_trait
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}
	
	# Is this an available position for this court? (root is court owner)
	is_shown = {
		faith = { 
			has_doctrine = tenet_human_sacrifice 
		}
	}
	
	# Is this a valid position for this character? Also checks the scripted rule "is_eligible_for_court_positions" in code. (root is potential position holder)
	valid_character = {
		scope:employee = {
			is_imprisoned = no
			faith = {
				has_doctrine = tenet_human_sacrifice
			}
		}
	}
	
	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}
	
	salary = {
		round = no
		gold = {
			value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = master_of_sacrifices_court_position
						any_court_position_holder = {
					        type = master_of_sacrifices_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = master_of_sacrifices_court_position
						any_court_position_holder = {
					        type = master_of_sacrifices_court_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}
	
	scaling_employer_modifiers = {
		terrible = { 
			monthly_piety_gain_mult = 0.02
			piety_level_impact_mult = 0.05
			dread_decay_mult = -0.03
		}
		poor = {
			monthly_piety_gain_mult = 0.04
			piety_level_impact_mult = 0.10
			dread_decay_mult = -0.04
		}
		average = {
			monthly_piety_gain_mult = 0.06
			piety_level_impact_mult = 0.15
			dread_decay_mult = -0.05
		}
		good = {
			monthly_piety_gain_mult = 0.08
			piety_level_impact_mult = 0.20
			dread_decay_mult = -0.10
		}
		excellent = {
			monthly_piety_gain_mult = 0.10
			piety_level_impact_mult = 0.25
			dread_decay_mult = -0.15
		}
	}
	
	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		dread_baseline_add = 10
	}
	
	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	candidate_score = {
		value = 75
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		add = court_position_debt_considerations_value
	}
}

royal_armorer_court_position = {
	
	max_available_positions = 1
	category = court_position_category_royal
	skill = martial
	minimum_rank = kingdom # Should only be available for kings and emperors

	opinion = {
		value = ceremonial_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 85 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 10
		add = {
			value = martial
			multiply = 3.0
			max = 80
			desc = court_position_skill_martial
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_high_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	valid_position = {
		highest_held_title_tier >= tier_kingdom
	}

	valid_character = {
		scope:employee = {
			is_imprisoned = no
			is_lowborn = no 
		}
	}

	revoke_cost = {
		prestige =  {
			value = medium_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = medium_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = royal_armorer_court_position
						any_court_position_holder = {
					        type = royal_armorer_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = royal_armorer_court_position
						any_court_position_holder = {
					        type = royal_armorer_court_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = { 
			knight_effectiveness_mult = 0.01
		}
		poor = {
			knight_effectiveness_mult = 0.02
		}
		average = {
			artifact_decay_reduction_mult = -0.02
			knight_effectiveness_mult = 0.04
			prowess = 1
		}
		good = {
			artifact_decay_reduction_mult = -0.04
			knight_effectiveness_mult = 0.06
			prowess = 2
		}
		excellent = {
			artifact_decay_reduction_mult = -0.06
			knight_effectiveness_mult = 0.08
			prowess = 3
		}
	}

	modifier = {
		monthly_prestige = medium_court_position_prestige_salary
		prowess = 2
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 25
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		add = court_position_debt_considerations_value
	}
}

royal_tax_collector_court_position = {
	
	max_available_positions = 1
	category = court_position_category_royal
	skill = stewardship
	minimum_rank = kingdom # Should only be available for kings and emperors

	opinion = {
		value = 10
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 85 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 10
		add = {
			value = stewardship
			multiply = 2.5
			max = 50
			desc = court_position_skill_stewardship
		}
		if = {
			limit = {
				has_trait = administrator
			}
			add = {
				value = 20
				desc = court_position_administrator_trait
			}
		}
		if = { 
			limit = {
				has_trait = avaricious
			}
			add = {
				value = 20
				desc = court_position_avaricious_trait
			}
		}
		if = { 
			limit = {
				has_trait = overseer
			}
			add = {
				value = 10
				desc = court_position_overseer_trait
			}
		}
		if = {
			limit = {
				has_trait = greedy #Be good for the tax collector but not so good for the ruler
			}
			add = {
				value = -15 
				desc = court_position_greedy_trait
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	is_shown = {
		has_ep1_court_positions_dlc_trigger = yes
	}

	valid_position = {
		highest_held_title_tier >= tier_kingdom
	}

	valid_character = {
		scope:employee = {
			is_imprisoned = no
			is_courtier_of = scope:liege
			is_lowborn = no 
		}
	}

	revoke_cost = {
		prestige =  {
			value = medium_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = medium_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = royal_tax_collector_court_position
						any_court_position_holder = {
					        type = royal_tax_collector_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = royal_tax_collector_court_position
						any_court_position_holder = {
					        type = royal_tax_collector_court_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = { 
			vassal_tax_contribution_mult = 0.02
			direct_vassal_opinion = -2
		}
		poor = {
			vassal_tax_contribution_mult = 0.03
			direct_vassal_opinion = -4
		}
		average = {
			vassal_tax_contribution_mult = 0.05
			direct_vassal_opinion = -6
		}
		good = {
			vassal_tax_contribution_mult = 0.08
			direct_vassal_opinion = -8
		}
		excellent = {
			vassal_tax_contribution_mult = 0.10
			direct_vassal_opinion = -10
		}
	}

	modifier = {
		monthly_prestige = medium_court_position_prestige_salary
		general_opinion = -5
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 50
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value

		scope:liege = {
			# Generous rulers unlikely. Greedy rulers likely.
			if = {
				limit = {
					has_trait = generous
				}
				add = -100
			}
			if = {
				limit = {
					has_trait = greedy
				}
				add = 100
			}
		}
		add = court_position_debt_considerations_value
	}
}

royal_tariff_collector_court_position = {
	
	max_available_positions = 1
	category = court_position_category_royal
	skill = stewardship
	minimum_rank = kingdom # Should only be available for kings and emperors

	opinion = {
		value = 10
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 85 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 10
		add = {
			value = stewardship
			multiply = 2.5
			max = 50
			desc = court_position_skill_stewardship
		}
		if = {
			limit = {
				has_trait = administrator
			}
			add = {
				value = 20
				desc = court_position_administrator_trait
			}
		}
		if = { 
			limit = {
				has_trait = avaricious
			}
			add = {
				value = 20
				desc = court_position_avaricious_trait
			}
		}
		if = { 
			limit = {
				has_trait = overseer
			}
			add = {
				value = 10
				desc = court_position_overseer_trait
			}
		}
		if = {
			limit = {
				has_trait = greedy #Be good for the tax collector but not so good for the ruler
			}
			add = {
				value = -15 
				desc = court_position_greedy_trait
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	valid_position = {
		highest_held_title_tier >= tier_kingdom
	}

	valid_character = {
		scope:employee = {
			is_imprisoned = no
			is_lowborn = no 
		}
	}

	revoke_cost = {
		prestige =  {
			value = medium_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = medium_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = royal_tariff_collector_court_position
						any_court_position_holder = {
					        type = royal_tariff_collector_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = royal_tariff_collector_court_position
						any_court_position_holder = {
					        type = royal_tariff_collector_court_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = { 
			domain_tax_mult = 0.02
			independent_ruler_opinion = -3
		}
		poor = {
			domain_tax_mult = 0.03
			independent_ruler_opinion = -4
		}
		average = {
			domain_tax_mult = 0.05
			independent_ruler_opinion = -6
		}
		good = {
			domain_tax_mult = 0.08
			independent_ruler_opinion = -8
		}
		excellent = {
			domain_tax_mult = 0.10
			independent_ruler_opinion = -10
		}
	}

	modifier = {
		monthly_prestige = medium_court_position_prestige_salary
		independent_ruler_opinion = -5
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = -51
	}
}

master_of_the_royal_mounted_couriers_court_position = {
	
	max_available_positions = 1
	category = court_position_category_royal
	skill = martial
	minimum_rank = kingdom

	opinion = {
		value = ceremonial_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 85 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 10
		add = {
			value = martial
			multiply = 2
			max = 50
			desc = court_position_skill_martial
		}
		add = {
			value = intrigue
			multiply = 2
			max = 50
			desc = court_position_skill_intrigue
		}
		if = {
			limit = {
				has_trait = organizer
			}
			add = {
				value = 30
				desc = court_position_organizer_trait
			}
		}
		if = {
			limit = {
				has_trait = deceitful
			}
			add = {
				value = -15
				desc = court_position_deceitful_trait
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_high_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	valid_position = {
		highest_held_title_tier >= tier_duchy
	}

	valid_character = {
		scope:employee = {
			is_imprisoned = no
			is_vassal_of = scope:liege
			is_lowborn = no 
		}
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = major_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = master_of_the_royal_mounted_couriers_court_position
						any_court_position_holder = {
					        type = master_of_the_royal_mounted_couriers_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = master_of_the_royal_mounted_couriers_court_position
						any_court_position_holder = {
					        type = master_of_the_royal_mounted_couriers_court_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}

	custom_employer_modifier_description = master_of_the_royal_mounted_couriers_employer_custom_effect_description

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = { 
			hostile_scheme_power_mult = 0.01
			personal_scheme_power_mult = 0.01
		}
		poor = {
			hostile_scheme_power_mult = 0.02
			personal_scheme_power_mult = 0.02
			owned_scheme_secrecy_add = 2
		}
		average = {
			hostile_scheme_power_mult = 0.03
			personal_scheme_power_mult = 0.03
			owned_scheme_secrecy_add = 3
			monthly_county_control_growth_factor = 0.02
		}
		good = {
			hostile_scheme_power_mult = 0.04
			personal_scheme_power_mult = 0.04
			owned_scheme_secrecy_add = 5
			monthly_county_control_growth_factor = 0.03
		}
		excellent = {
			hostile_scheme_power_mult = 0.05
			personal_scheme_power_mult = 0.05
			owned_scheme_secrecy_add = 6
			monthly_county_control_growth_factor = 0.05
		}
	}

	modifier = {
		monthly_prestige = major_court_position_prestige_salary
		intrigue = 4
		hostile_scheme_power_mult = 0.10
		personal_scheme_power_mult = 0.10
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}

	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = -51
	}
}

court_canonist_court_position = {
	
	max_available_positions = 1
	category = court_position_category_royal
	skill = learning
	minimum_rank = kingdom # Should only be available for kings and emperors

	opinion = {
		value = ceremonial_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 85 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = learning
			multiply = 2.5
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				is_clergy = yes
			}
			add = {
				value = 20
				desc = court_position_clergy_trait
			}
		}
		if = {
			limit = {
				has_trait = theologian
			}
			add = {
				value = 20
				desc = court_position_theologian_trait
			}
		}
		if = {
			limit = {
				has_trait = scholar
			}
			add = {
				value = 20
				desc = court_position_scholar_trait
			}
		}
		if = {
			limit = {
				has_trait = zealous
			}
			add = {
				value = 10
				desc = court_position_zealous_trait
			}
		}
		if = {
			limit = {
				has_trait = cynical
			}
			add = {
				value = -40
				desc = court_position_cynical_trait
			}
		}
		if = {
			limit = {
				has_trait = devoted
				culture = { has_cultural_parameter = devoted_trait_bonuses }
			}
			add = {
				value = 20
				desc = tradition_monastic_communities_name
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	is_shown = {
		has_religion = religion:christianity_religion
	}

	# Is this an available position for this court? (root is court owner)
	valid_position = {
		has_religion = religion:christianity_religion
		highest_held_title_tier >= tier_kingdom
	}

	is_shown_character = {
		scope:employee = {
			is_courtier_of = scope:liege
		}
	}

	valid_character = {
		scope:employee = {
			is_imprisoned = no
		}
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = medium_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = court_canonist_court_position
						any_court_position_holder = {
					        type = court_canonist_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = court_canonist_court_position
						any_court_position_holder = {
					        type = court_canonist_court_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}
	
	base_employer_modifier = {
		court_grandeur_baseline_add = 1
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = { 
			clergy_opinion = 1
		}
		poor = {
			monthly_piety_gain_mult = 0.02
			clergy_opinion = 2
		}
		average = {
			monthly_piety_gain_mult = 0.04
			title_creation_cost_mult = -0.05
			clergy_opinion = 3
		}
		good = {
			monthly_piety_gain_mult = 0.05
			title_creation_cost_mult = -0.08
			clergy_opinion = 4
		}
		excellent = {
			monthly_piety_gain_mult = 0.07
			title_creation_cost_mult = -0.10
			clergy_opinion = 5
		}
	}

	modifier = {
		monthly_prestige = medium_court_position_prestige_salary
		piety_level_impact_mult = 0.5
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 50
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		scope:liege = {
			# Zealous AI's like this
			if = {
				limit = {
					ai_zeal > 75
				}
				add = 50
			}
		}
		add = court_position_debt_considerations_value
	}
}

queen_mother_position = {
	
	max_available_positions = 1
	category = court_position_category_royal
	skill = diplomacy
	minimum_rank = kingdom # Should only be available for kings and emperors

	opinion = {
		value = ceremonial_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 85 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 25
		add = {
			value = diplomacy
			multiply = 3
			max = 50
			desc = court_position_skill_diplomacy
		}
		if = {
			limit = {
				has_trait = gregarious
			}
			add = {
				value = 20
				desc = court_position_gregarious_trait
			}
		}
		if = {
			limit = {
				has_trait = family_first
			}
			add = {
				value = 40
				desc = court_position_family_first_trait
			}
		}
		if = {
			limit = {
				has_trait = disputed_heritage
			}
			add = {
				value = -20
				desc = court_position_disputed_heritage_trait
			}
		}
		if = {
			limit = {
				has_trait = denounced
			}
			add = {
				value = -40
				desc = court_position_denounced_trait
			}
		}
		if = {
			limit = {
				has_trait = disinherited
			}
			add = {
				value = -40
				desc = court_position_disinherited_trait
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_high_penalty_value
	}
	
	# Is this an available position for this court? (root is court owner)
	valid_position = {
		highest_held_title_tier >= tier_kingdom
	}

	is_shown_character = {
		scope:employee = {
			is_courtier_of = scope:liege
		}
	}

	valid_character = {
		scope:employee = {
			is_imprisoned = no
			is_adult = yes
			is_female = yes
			is_close_family_of = scope:liege
			is_parent_of = scope:liege
			custom_tooltip = {
				text = IS_NOT_THE_SPOUSE_OF_CHARACTER_COURT_POSITION
				NOT = { is_spouse_of = scope:liege }
			}
			NOT = { is_child_of = scope:liege } #Added this so it doesn't show your own kids
			NOT = { is_concubine_of = scope:liege } #Added this since spouse of doesn't cover concubines
		}
	}
	
	is_powerful_agent = yes
	
	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = queen_mother_position
						any_court_position_holder = {
					        type = queen_mother_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = queen_mother_position
						any_court_position_holder = {
					        type = queen_mother_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = { 
			close_relative_opinion = 2
			dynasty_house_opinion = 1
		}
		poor = {
			close_relative_opinion = 3
			dynasty_house_opinion = 2
		}
		average = {
			close_relative_opinion = 4
			dynasty_house_opinion = 3
			courtier_and_guest_opinion = 1
			monthly_dynasty_prestige = 0.03
		}
		good = {
			close_relative_opinion = 6
			dynasty_house_opinion = 4
			courtier_and_guest_opinion = 3
			monthly_dynasty_prestige = 0.05
		}
		excellent = {
			close_relative_opinion = 8
			dynasty_house_opinion = 5
			courtier_and_guest_opinion = 5
			monthly_dynasty_prestige = 0.07
		}
	}

	modifier = {
		monthly_prestige = medium_court_position_prestige_salary
		dynasty_house_opinion = 10
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 50
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		add = court_position_debt_considerations_value
	}
}

court_philosopher_position = {
	
	max_available_positions = 1
	category = court_position_category_special
	skill = learning

	opinion = {
		value = ceremonial_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 85 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = learning
			multiply = 3
			max = 60
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = scholar
			}
			add = {
				value = 20
				desc = court_position_scholar_trait
			}
		}
		if = {
			limit = {
				has_trait = education_learning_4 
			}
			add = {
				value = 20
				desc = court_position_education_learning_4_trait
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	valid_position = {
		highest_held_title_tier >= tier_county
	}

	valid_character = {
		scope:employee = {
			is_imprisoned = no
			has_trait = education_learning_4
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = major_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = court_philosopher_position
						any_court_position_holder = {
					        type = court_philosopher_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = court_philosopher_position
						any_court_position_holder = {
					        type = court_philosopher_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}

	base_employer_modifier = {
		court_grandeur_baseline_add = 1
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = { 
			cultural_head_fascination_mult = 0.01
		}
		poor = {
			cultural_head_fascination_mult = 0.02
			monthly_lifestyle_xp_gain_mult = 0.01
		}
		average = {
			cultural_head_fascination_mult = 0.04
			monthly_lifestyle_xp_gain_mult = 0.03
		}
		good = {
			cultural_head_fascination_mult = 0.06
			monthly_lifestyle_xp_gain_mult = 0.07
		}
		excellent = {
			cultural_head_fascination_mult = 0.08
			monthly_lifestyle_xp_gain_mult = 0.09
			courtier_and_guest_opinion = 5
		}
	}

	modifier = {
		monthly_prestige = medium_court_position_prestige_salary
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = -51
	}
}

royal_chronicler_court_position = {
	
	max_available_positions = 1
	category = court_position_category_special
	skill = learning

	opinion = {
		value = ceremonial_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 65 85 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 10
		add = {
			value = learning
			multiply = 2.5
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = scholar
			}
			add = {
				value = 25
				desc = court_position_scholar_trait
			}
		}
		if = {
			limit = {
				has_trait = education_learning_4 
			}
			add = {
				value = 10
				desc = court_position_education_learning_4_trait
			}
		}
		if = {
			limit = {
				has_trait = journaller 
			}
			add = {
				value = 20
				desc = court_position_journaller_trait
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	valid_position = {
		highest_held_title_tier >= tier_kingdom
	}

	valid_character = {
		scope:employee = {
			is_imprisoned = no
			is_courtier_of = scope:liege
			is_lowborn = no 
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = major_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = royal_chronicler_court_position
						any_court_position_holder = {
					        type = royal_chronicler_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = royal_chronicler_court_position
						any_court_position_holder = {
					        type = royal_chronicler_court_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}

	base_employer_modifier = {
		court_grandeur_baseline_add = 1
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = { 
			monthly_dynasty_prestige = 0.01
		}
		poor = {
			monthly_dynasty_prestige = 0.02
			monthly_dynasty_prestige_mult = 0.01
		}
		average = {
			monthly_dynasty_prestige = 0.03
			monthly_dynasty_prestige_mult = 0.03
		}
		good = {
			monthly_dynasty_prestige = 0.05
			monthly_dynasty_prestige_mult = 0.05
			dynasty_opinion = 3
		}
		excellent = {
			monthly_dynasty_prestige = 0.07
			monthly_dynasty_prestige_mult = 0.07
			dynasty_opinion = 6
		}
	}

	modifier = {
		monthly_prestige = medium_court_position_prestige_salary
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 40
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value

		scope:liege = {
			# Has ample income to support an extra service.
			if = {
				limit = {
					monthly_character_income < monthly_character_expenses_plus_fourty_percent
				}
				add = -100
			}
		}
		add = court_position_debt_considerations_value
	}
}

court_historian_court_position = {
	
	max_available_positions = 1
	category = court_position_category_special
	skill = learning

	opinion = {
		value = ceremonial_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 65 85 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 10
		add = {
			value = learning
			multiply = 2.5
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = scholar
			}
			add = {
				value = 25
				desc = court_position_scholar_trait
			}
		}
		if = {
			limit = {
				has_trait = education_learning_4 
			}
			add = {
				value = 10
				desc = court_position_education_learning_4_trait
			}
		}
		if = {
			limit = {
				has_trait = journaller 
			}
			add = {
				value = 20
				desc = court_position_journaller_trait
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	valid_position = {
		highest_held_title_tier >= tier_county
		highest_held_title_tier <= tier_duchy
	}

	valid_character = {
		scope:employee = {
			is_imprisoned = no
			is_courtier_of = scope:liege
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = medium_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = court_historian_court_position
						any_court_position_holder = {
					        type = court_historian_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = court_historian_court_position
						any_court_position_holder = {
					        type = court_historian_court_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = { 
			monthly_dynasty_prestige = 0.01
		}
		poor = {
			monthly_dynasty_prestige = 0.02
		}
		average = {
			monthly_dynasty_prestige = 0.03
			monthly_dynasty_prestige_mult = 0.02
		}
		good = {
			monthly_dynasty_prestige = 0.05
			monthly_dynasty_prestige_mult = 0.03
			dynasty_opinion = 2
		}
		excellent = {
			monthly_dynasty_prestige = 0.07
			monthly_dynasty_prestige_mult = 0.05
			dynasty_opinion = 4
		}
	}

	modifier = {
		monthly_prestige = medium_court_position_prestige_salary
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = -51
	}
}

grand_admiral_court_position = {
	
	max_available_positions = 1
	category = court_position_category_special
	skill = martial
	minimum_rank = county

	opinion = {
		value = ceremonial_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 65 85 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 10
		add = {
			value = martial
			multiply = 2.5
			max = 50
			desc = court_position_skill_martial
		}
		add = {
			value = prowess
			multiply = 2
			max = 50
			desc = court_position_skill_prowess
		}
		if = {
			limit = {
				has_trait = strategist
			}
			add = {
				value = 20
				desc = court_position_strategist_trait 
			}
		}
		if = {
			limit = {
				has_trait = craven
			}
			add = {
				value = -10
				desc = court_position_craven_trait
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_high_penalty_value
	}

	# Is this an available position for this court? (root is court owner)
	valid_position = {
		highest_held_title_tier >= tier_duchy
		OR = {
			culture = { has_cultural_tradition = tradition_fp1_coastal_warriors }
			culture = { has_cultural_tradition = tradition_fishermen }
			culture = { has_cultural_tradition = tradition_practiced_pirates }
			culture = { has_cultural_tradition = tradition_seafaring }
			culture = { has_cultural_tradition = tradition_maritime_mercantilism }
		}
	}

	valid_character = {
		scope:employee = {
			is_imprisoned = no
			is_lowborn = no
		}
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}
	
	salary = {
		round = no
		prestige = 0.20
		gold = {
			value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = grand_admiral_court_position
						any_court_position_holder = {
					        type = grand_admiral_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = grand_admiral_court_position
						any_court_position_holder = {
					        type = grand_admiral_court_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}
	

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = { 
			embarkation_cost_mult = -0.01
		}
		poor = {
			embarkation_cost_mult = -0.03
		}
		average = {
			embarkation_cost_mult = -0.05
		}
		good = {
			coastal_advantage = 2
			embarkation_cost_mult = -0.07
		}
		excellent = {
			coastal_advantage = 4
			embarkation_cost_mult = -0.09
		}
	}

	modifier = {
		monthly_prestige = medium_court_position_prestige_salary
		no_water_crossing_penalty = yes
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
		#scope:employee = {
		#	move_to_pool = yes
		#}
	}

	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = -51
	}
}

priest_of_the_sacred_grove_court_position = {
	
	max_available_positions = 1
	category = court_position_category_special
	skill = learning

	opinion = {
		value = ceremonial_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 25 45 65 85 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = learning
			multiply = 3
			max = 60
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				is_clergy = yes
			}
			add = {
				value = 25
				desc = court_position_clergy_trait
			}
		}
		if = {
			limit = {
				has_trait = theologian
			}
			add = {
				value = 25
				desc = court_position_theologian_trait
			}
		}
		if = {
			limit = {
				has_trait = scholar
			}
			add = {
				value = 20
				desc = court_position_scholar_trait
			}
		}
		if = {
			limit = {
				has_trait = zealous
			}
			add = {
				value = 10
				desc = court_position_zealous_trait
			}
		}
		if = {
			limit = {
				has_trait = cynical
			}
			add = {
				value = -30
				desc = court_position_cynical_trait
			}
		}
		if = {
			limit = {
				has_trait = devoted
				culture = { has_cultural_parameter = devoted_trait_bonuses }
			}
			add = {
				value = 20
				desc = tradition_monastic_communities_name
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	is_shown = {
		has_religion = religion:baltic_religion
	}

	# Is this an available position for this court? (root is court owner)
	valid_position = {
		has_religion = religion:baltic_religion
		has_government = tribal_government
	}

	valid_character = {
		scope:employee = {
			is_imprisoned = no
		}
	}

	revoke_cost = {
		prestige =  {
			value = medium_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = priest_of_the_sacred_grove_court_position
						any_court_position_holder = {
					        type = priest_of_the_sacred_grove_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = priest_of_the_sacred_grove_court_position
						any_court_position_holder = {
					        type = priest_of_the_sacred_grove_court_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = { 
			monthly_piety_gain_mult = 0.01
		}
		poor = {
			monthly_piety_gain_mult = 0.02
			piety_level_impact_mult = 0.01
		}
		average = {
			monthly_piety_gain_mult = 0.03
			piety_level_impact_mult = 0.02
			church_holding_build_gold_cost = -0.03
		}
		good = {
			monthly_piety_gain_mult = 0.04
			piety_level_impact_mult = 0.03
			church_holding_build_gold_cost = -0.05
			church_holding_holding_build_gold_cost = -0.05
		}
		excellent = {
			monthly_piety_gain_mult = 0.05
			piety_level_impact_mult = 0.05
			church_holding_build_gold_cost = -0.07
			church_holding_holding_build_gold_cost = -0.08
		}
	}

	modifier = {
		monthly_prestige = medium_court_position_prestige_salary
		monthly_learning_lifestyle_xp_gain_mult = 0.05
		monthly_piety = 2
		clergy_opinion = 5
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 30
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		scope:liege = {
			# Zealous AI's like this
			if = {
				limit = {
					ai_zeal > 75
				}
				add = 50
			}
		}
		add = court_position_debt_considerations_value
	}
}

head_torturer_court_position = {
	
	max_available_positions = 1
	category = court_position_category_special
	skill = intrigue
	minimum_rank = duchy 

	opinion = {
		value = ceremonial_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 85 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = intrigue
			multiply = 3
			max = 50
			desc = court_position_skill_intrigue
		}
		if = {
			limit = {
				has_trait = torturer
			}
			add = {
				value = 30
				desc = court_position_torturer_trait
			}
		}
		if = {
			limit = {
				has_trait = sadistic
			}
			add = {
				value = 20
				desc = court_position_sadistic_trait
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_high_penalty_value
	}

	valid_position = {
		highest_held_title_tier >= tier_duchy
	}

	is_shown = {
		highest_held_title_tier >= tier_duchy
		exists = dynasty
		dynasty = {
			has_dynasty_perk = guile_legacy_3
		}
	}

	is_shown_character = {
		scope:employee = {
			is_courtier_of = scope:liege
		}
	}

	valid_character = {
		scope:employee = {
			is_imprisoned = no
			is_courtier_of = scope:liege
		}
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = head_torturer_court_position
					any_court_position_holder = {
				        type = head_torturer_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = minor_court_position_salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = { 
			dread_gain_mult = 0.02
			dread_decay_mult = -0.02
		}
		poor = {
			dread_gain_mult = 0.04
			dread_decay_mult = -0.04
		}
		average = {
			dread_gain_mult = 0.06
			dread_decay_mult = -0.06
		}
		good = {
			dread_gain_mult = 0.08
			dread_decay_mult = -0.08
		}
		excellent = {
			dread_gain_mult = 0.10
			dread_decay_mult = -0.10
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		dread_baseline_add = 15
		stress_loss_mult = 0.25
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 50
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		scope:liege = {
			# More likely to hire one if you have high dread
			if = {
				limit = {
					dread > medium_dread
				}
				add = 25
			}
			# More likely if you have dread-traits
			if = {
				limit = {
					OR = {
						has_trait = sadistic
						has_trait = callous
						has_trait = arbitrary
					}
				}
				add = 25
			}
		}
		add = court_position_debt_considerations_value
	}
}

peer_of_france_lay_court_position = {
	
	max_available_positions = 1
	category = court_position_category_royal
	skill = diplomacy
	minimum_rank = kingdom # Should only be available for kings and emperors

	opinion = {
		value = 15
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 65 85 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 40
		if = {
			limit = {
				is_powerful_vassal = yes
			}
			add = {
				value = 25
				desc = powerful_vassal
			}
		}
		if = {
			limit = {
				prestige_level >= 4
			}
			add = {
				value = 20
				desc = exalted_among_men
			}
		}
		
	}
	
	# Is this an available position for this court? (root is court owner)
	valid_position = {
		highest_held_title_tier >= tier_kingdom
		culture = { has_cultural_pillar = heritage_frankish }
		culture = { has_innovation = innovation_french_peerage }
	}
	
	is_shown = {
		culture = { has_cultural_pillar = heritage_frankish }
	}

	valid_character = {
		scope:employee = {
			is_vassal_of = scope:liege
			is_clergy = no
			is_theocratic_lessee = no
			is_lowborn = no 
		}
	}
	
	is_powerful_agent = yes
	
	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = peer_of_france_lay_court_position
						any_court_position_holder = {
					        type = peer_of_france_lay_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = peer_of_france_lay_court_position
						any_court_position_holder = {
					        type = peer_of_france_lay_court_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}

	scaling_employer_modifiers = {
		terrible = { 
			court_grandeur_baseline_add = 1
		}
		poor = {
			court_grandeur_baseline_add = 1
		}
		average = {
			court_grandeur_baseline_add = 1
		}
		good = {
			court_grandeur_baseline_add = 2
		}
		excellent = {
			court_grandeur_baseline_add = 3
		}
	}
	
	modifier = {
		monthly_prestige = major_court_position_prestige_salary
		monthly_dynasty_prestige = 0.10
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 50
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		add = court_position_debt_considerations_value
	}
}

peer_of_france_bishop_court_position = {
	
	max_available_positions = 1
	category = court_position_category_special
	skill = learning
	minimum_rank = kingdom # Should only be available for kings and emperors

	opinion = {
		value = 20
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 65 85 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 40
		if = {
			limit = {
				is_powerful_vassal = yes
			}
			add = {
				value = 25
				desc = powerful_vassal
			}
		}
		if = {
			limit = {
				piety_level >= 4
			}
			add = {
				value = 20
				desc = paragon_of_virtue
			}
		}
		
	}
	
	# Is this an available position for this court? (root is court owner)
	valid_position = {
		highest_held_title_tier >= tier_kingdom
		culture = { has_cultural_pillar = heritage_frankish }
		culture = { has_innovation = innovation_french_peerage }
	}

	is_shown = {
		culture = { has_cultural_pillar = heritage_frankish }
	}

	valid_character = {
		scope:employee = {
			is_vassal_of = scope:liege
			is_clergy = yes
		}
	}

	is_powerful_agent = yes
	
	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = peer_of_france_bishop_court_position
						any_court_position_holder = {
					        type = peer_of_france_bishop_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = peer_of_france_bishop_court_position
						any_court_position_holder = {
					        type = peer_of_france_bishop_court_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}

	scaling_employer_modifiers = {
		terrible = { 
			court_grandeur_baseline_add = 1
		}
		poor = {
			court_grandeur_baseline_add = 1
		}
		average = {
			court_grandeur_baseline_add = 1
		}
		good = {
			court_grandeur_baseline_add = 2
		}
		excellent = {
			court_grandeur_baseline_add = 3
		}
	}
	
	modifier = {
		monthly_prestige = major_court_position_prestige_salary
		monthly_piety = 1.00
		monthly_piety_gain_mult = 0.05
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 50
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		add = court_position_debt_considerations_value
	}
}

dragoman_court_position = {
	
	max_available_positions = 1
	category = court_position_category_special
	skill = diplomacy
	minimum_rank = duchy

	opinion = {
		value = 10
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 65 85 }
	
	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = diplomacy
			multiply = 2.5
			max = 50
			desc = court_position_skill_diplomacy
		}
		add = {
			value = num_of_known_languages
			subtract = 1
			multiply = 10
			max = 100
			desc = court_position_languages
		}
		if = {
			limit = {
				has_trait = just
			}
			add = {
				value = 15
				desc = court_position_just_trait
			}
		}
		if = {
			limit = {
				has_trait = gregarious
			}
			add = {
				value = 15
				desc = court_position_gregarious_trait
			}
		}
		if = {
			limit = {
				has_trait = diplomat
			}
			add = {
				value = 30
				desc = court_position_diplomat_trait
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}
	
	# Is this an available position for this court? (root is court owner)
	is_shown = {
		culture = { has_cultural_pillar = heritage_arabic }
	}
	
	valid_position = {
		culture = { has_cultural_pillar = heritage_arabic }
		culture = { has_cultural_era_or_later = culture_era_late_medieval }
	}

	# Is this a valid position for this character? Also checks the scripted rule "is_eligible_for_court_positions" in code. (root is potential position holder)
	valid_character = {
		scope:employee = {
			is_imprisoned = no
			diplomacy >= 8
			is_lowborn = no
		}
	}
	
	revoke_cost = {
		prestige =  {
			value = medium_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}
	
	salary = {
		round = no
		gold = {
			value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = dragoman_court_position
						any_court_position_holder = {
					        type = dragoman_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = dragoman_court_position
						any_court_position_holder = {
					        type = dragoman_court_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}
	
	scaling_employer_modifiers = {
		terrible = { 
			different_culture_opinion = 1
		}
		poor = {
			different_culture_opinion = 3
			cultural_head_acceptance_gain_mult = 0.01
		}
		average = {
			different_culture_opinion = 4
			learn_language_scheme_power_mult = 0.03
			cultural_head_acceptance_gain_mult = 0.03
			monthly_dynasty_prestige_mult = 0.02
		}
		good = {
			different_culture_opinion = 5
			learn_language_scheme_power_mult = 0.05
			cultural_head_acceptance_gain_mult = 0.05
			monthly_dynasty_prestige_mult = 0.04
		}
		excellent = {
			different_culture_opinion = 8
			learn_language_scheme_power_mult = 0.08
			cultural_head_acceptance_gain_mult = 0.07
			monthly_dynasty_prestige_mult = 0.06
		}
	}
	
	modifier = {
		monthly_prestige = medium_court_position_prestige_salary
		different_culture_opinion = 10
		learn_language_scheme_power_mult = 0.10
	}
	
	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	candidate_score = {
		value = 40
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		add = court_position_debt_considerations_value
	}
}

minister_of_works_court_position = {
	
	max_available_positions = 1
	category = court_position_category_special
	skill = stewardship
	minimum_rank = kingdom 

	opinion = {
		value = 10
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 65 85 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 25
		add = {
			value = stewardship
			multiply = 2.5
			max = 50
			desc = court_position_skill_stewardship
		}
		if = {
			limit = {
				has_trait = architect
			}
			add = {
				value = 40
				desc = court_position_architect_trait
			}
		}
		if = {
			limit = {
				has_trait = blind
			}
			add = {
				value = -50
				desc = court_position_blind_trait
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	is_shown = {
		culture = { has_cultural_pillar = heritage_chinese }
	}

	valid_position = {
		highest_held_title_tier >= tier_kingdom
		culture = { has_cultural_pillar = heritage_chinese }
	}

	valid_character = {
		scope:employee = {
			is_imprisoned = no
			is_lowborn = no
		}
	}

	revoke_cost = {
		prestige =  {
			value = medium_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = medium_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = minister_of_works_court_position
						any_court_position_holder = {
					        type = minister_of_works_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = minister_of_works_court_position
						any_court_position_holder = {
					        type = minister_of_works_court_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = { 
			build_speed = -0.01
		}
		poor = {
			build_speed = -0.03
		}
		average = {
			build_speed = -0.05
			build_gold_cost = -0.03
		}
		good = {
			build_speed = -0.07
			build_gold_cost = -0.05
		}
		excellent = {
			build_speed = -0.10
			build_gold_cost = -0.07
		}
	}

	modifier = {
		monthly_prestige = medium_court_position_prestige_salary
		republic_government_opinion = 25
	}

	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	candidate_score = {
		value = 50
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		scope:liege = {
			if = {
				limit = {
					short_term_gold < 500
					monthly_character_income < monthly_character_expenses_plus_fourty_percent
				}
				add = -100
			}
		}
		add = court_position_debt_considerations_value
	}
}


