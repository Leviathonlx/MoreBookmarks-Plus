#UnOp Fixes for stuff that spams my error log

unop_can_appoint_char_to_court_position = {
	save_temporary_scope_as = hiring_liege
	OR = { # This is mandatory because if we already have the maximum position slot (like 1 for most), can_employ WILL return false !
		employs_court_position = $COURT_POS$
		can_employ_court_position_type = $COURT_POS$
	}
	$CHAR$ = {
		NOT = { this = scope:hiring_liege }
		NOT = { has_court_position = $COURT_POS$ }
		can_be_employed_as_$COURT_POS$ = yes
	}
}

can_be_employed_as_court_physician_court_position = {
	is_imprisoned = no
}

can_be_employed_as_cultural_emissary_court_position = {
	is_imprisoned = no
	diplomacy >= 8
}

can_be_employed_as_keeper_of_swans_court_position = {
	is_imprisoned = no
}

can_be_employed_as_chief_qadi_court_position = {
	is_imprisoned = no
	has_religion = religion:islam_religion
	has_trait = education_learning
	trigger_if = {
		limit = {
			scope:hiring_liege.faith = {
				has_doctrine = doctrine_gender_male_dominated
			}
		}
		is_male = yes
	}
	trigger_if = {
		limit = {
			scope:hiring_liege.faith = {
				has_doctrine = doctrine_gender_female_dominated
			}
		}
		is_female = yes
	}
}

can_be_employed_as_garuda_court_position = {
	is_imprisoned = no
	is_knight = yes
	unop_can_be_warrior_strict_trigger = { ARMY_OWNER = scope:hiring_liege }
}

can_be_employed_as_court_gardener_court_position = {
	is_imprisoned = no
	trigger_if = {
		limit = { NOT = { has_court_position = court_gardener_court_position } }
		court_position_does_not_already_have_a_job_trigger = yes # This positions is considered a job, and cannot be held at the same tims as another similar position
	}
}

can_be_employed_as_lady_in_waiting_court_position = {
	is_imprisoned = no
	is_female = yes
	trigger_if = {
		limit = { NOT = { has_court_position = lady_in_waiting_court_position } }
		court_position_does_not_already_have_a_job_trigger = yes # This positions is considered a job, and cannot be held at the same tims as another similar position
	}
}

can_be_employed_as_antiquarian_court_position = {
	is_imprisoned = no
	custom_tooltip = {
		text = UNOP_IS_NOT_THE_SPOUSE_OF_CHARACTER_COURT_POSITION
		NOT = { is_spouse_of = scope:hiring_liege }
	}
	trigger_if = {
		limit = { NOT = { has_court_position = antiquarian_court_position } }
		court_position_does_not_already_have_a_job_trigger = yes # This positions is considered a job, and cannot be held at the same tims as another similar position
	}
}

can_be_employed_as_travel_leader_court_position = {
	is_imprisoned = no
	is_clergy = no
	bannable_serving_diarch_trigger = no
	NOT = { has_variable = gone_adventuring }
	custom_tooltip = {
		text = UNOP_IS_NOT_THE_SPOUSE_OF_CHARACTER_COURT_POSITION
		NOT = { is_spouse_of = scope:hiring_liege }
	}
	trigger_if = {
		limit = { NOT = { has_court_position = travel_leader_court_position } }
		court_position_does_not_already_have_a_job_trigger = yes # This positions is considered a job, and cannot be held at the same time as another similar position
	}
}

can_be_employed_as_wet_nurse_court_position = {
	is_imprisoned = no
	NOT = { is_close_family_of = scope:hiring_liege }
	age < 46
	is_female = yes
	has_no_particular_noble_roots_trigger = yes
	trigger_if = {
		limit = { NOT = { has_court_position = wet_nurse_court_position } }
		court_position_does_not_already_have_a_job_trigger = yes
	}
}

can_be_employed_as_court_tutor_court_position = {
	is_imprisoned = no
	custom_tooltip = {
		text = UNOP_IS_NOT_THE_SPOUSE_OF_CHARACTER_COURT_POSITION
		NOT = { is_spouse_of = scope:hiring_liege }
	}
	trigger_if = {
		limit = { NOT = { has_court_position = court_tutor_court_position } }
		court_position_does_not_already_have_a_job_trigger = yes # This positions is considered a job, and cannot be held at the same tims as another similar position
	}
}

can_be_employed_as_food_taster_court_position = {
	is_imprisoned = no
	unop_can_be_warrior_strict_trigger = { ARMY_OWNER = scope:hiring_liege }
	custom_tooltip = {
		text = UNOP_IS_NOT_THE_SPOUSE_OF_CHARACTER_COURT_POSITION
		NOT = { is_spouse_of = scope:hiring_liege }
	}
	trigger_if = {
		limit = { NOT = { has_court_position = food_taster_court_position } }
		court_position_does_not_already_have_a_job_trigger = yes # This positions is considered a job, and cannot be held at the same tims as another similar position
	}
}

can_be_employed_as_master_of_horse_court_position = {
	is_imprisoned = no
}

can_be_employed_as_master_of_hunt_court_position = {
	is_imprisoned = no
	NOR = {
		has_trait = blind
		has_trait = incapable
		has_trait = infirm
	}
	unop_can_be_warrior_strict_trigger = { ARMY_OWNER = scope:hiring_liege }
	# If culture is vegetarian they are denied hunting... so no master of hunt !
	trigger_if = { # Not needed but give a nicer tooltip
		limit = { NOT = { culture = scope:hiring_liege.culture } }		
		culture = { NOT = { has_cultural_parameter = cannot_hunt } }
		scope:hiring_liege = { culture = { NOT = { has_cultural_parameter = cannot_hunt } } }
	}
	trigger_else = {
		scope:hiring_liege = { culture = { NOT = { has_cultural_parameter = cannot_hunt } } }
	}
}

can_be_employed_as_royal_architect_court_position = {
	is_imprisoned = no
}

can_be_employed_as_high_almoner_court_position = {
	is_imprisoned = no
}

can_be_employed_as_seneschal_court_position = {
	is_imprisoned = no
	custom_tooltip = {
		text = UNOP_IS_NOT_THE_SPOUSE_OF_CHARACTER_COURT_POSITION
		NOT = { is_spouse_of = scope:hiring_liege }
	}
	trigger_if = {
		limit = { NOT = { has_court_position = seneschal_court_position } }
		court_position_does_not_already_have_a_job_trigger = yes # This positions is considered a job, and cannot be held at the same tims as another similar position
	}
}

can_be_employed_as_cupbearer_court_position = {
	is_imprisoned = no
	scope:employee = {
		custom_tooltip = {
			text = UNOP_IS_NOT_THE_SPOUSE_OF_CHARACTER_COURT_POSITION
			NOT = { is_spouse_of = scope:hiring_liege }
		}
		trigger_if = {
			limit = { NOT = { has_court_position = cupbearer_court_position } }
			court_position_does_not_already_have_a_job_trigger = yes # This positions is considered a job, and cannot be held at the same tims as another similar position
		}
	}
}

can_be_employed_as_chief_eunuch_court_position = {
	is_imprisoned = no
	has_trait = eunuch
}

can_be_employed_as_court_jester_court_position = {
	is_imprisoned = no
	trigger_if = {
		limit = { NOT = { has_court_position = court_jester_court_position } }
		court_position_does_not_already_have_a_job_trigger = yes # This positions is considered a job, and cannot be held at the same tims as another similar position
	}
}

can_be_employed_as_court_poet_court_position = {
	is_imprisoned = no
	custom_tooltip = {
		text = UNOP_IS_NOT_THE_SPOUSE_OF_CHARACTER_COURT_POSITION
		NOT = { is_spouse_of = scope:hiring_liege }
	}
	has_trait = poet
	trigger_if = {
		limit = { NOT = { has_court_position = court_poet_court_position } }
		court_position_does_not_already_have_a_job_trigger = yes # This positions is considered a job, and cannot be held at the same tims as another similar position
	}
}

can_be_employed_as_court_musician_court_position = {
	is_imprisoned = no
	custom_tooltip = {
		text = UNOP_IS_NOT_THE_SPOUSE_OF_CHARACTER_COURT_POSITION
		NOT = { is_spouse_of = scope:hiring_liege }
	}
	trigger_if = {
		limit = { NOT = { has_court_position = court_musician_court_position } }
		court_position_does_not_already_have_a_job_trigger = yes # This positions is considered a job, and cannot be held at the same tims as another similar position
	}
}

can_be_employed_as_bodyguard_court_position = {
	is_imprisoned = no
	custom_tooltip = {
		text = UNOP_IS_NOT_THE_SPOUSE_OF_CHARACTER_COURT_POSITION
		NOT = { is_spouse_of = scope:hiring_liege }
	}
	unop_can_be_warrior_strict_trigger = { ARMY_OWNER = scope:hiring_liege }
	trigger_if = {
		limit = { NOT = { has_court_position = bodyguard_court_position } }
		court_position_does_not_already_have_a_job_trigger = yes # This positions is considered a job, and cannot be held at the same tims as another similar position
	}
	#check max_available_positions
}

can_be_employed_as_champion_court_position = {
	is_imprisoned = no
	unop_can_be_warrior_strict_trigger = { ARMY_OWNER = scope:hiring_liege }
}

can_be_employed_as_executioner_court_position = {
	is_imprisoned = no
	custom_tooltip = {
		text = UNOP_IS_NOT_THE_SPOUSE_OF_CHARACTER_COURT_POSITION
		NOT = { is_spouse_of = scope:hiring_liege }
	}
	is_ruler = no
	OR = {
		trigger_if = { # Done to hide the tooltip
			limit = { has_court_position = executioner_court_position }
			always = yes
		}
		custom_tooltip = {
			text = has_imprisonment_reason_no_subject
			scope:hiring_liege = {
				has_imprisonment_reason = prev
			}
		}
		trigger_if = { # Imprisoned characters should only be valid if they aren't already the executioner
			limit = { NOT = { has_court_position = executioner_court_position } }
			is_imprisoned_by = scope:hiring_liege
		}
		custom_tooltip = {
			text = has_strong_hook_no_subject
			scope:hiring_liege = { has_strong_usable_hook = prev }
		}
	}
	trigger_if = {
		limit = { NOT = { has_court_position = executioner_court_position } }
		court_position_does_not_already_have_a_job_trigger = yes # This positions is considered a job, and cannot be held at the same tims as another similar position
	}
}

can_be_employed_as_court_artificer_court_position = {
	is_imprisoned = no
	OR = {
		custom_tooltip = {
			text = has_a_completed_inspiration
			has_completed_inspiration = yes
		}
		custom_tooltip = {
			text = has_an_inspiration
			exists = inspiration
		}
	}
	custom_tooltip = {
		text = UNOP_IS_NOT_THE_SPOUSE_OF_CHARACTER_COURT_POSITION
		NOT = { is_spouse_of = scope:hiring_liege }
	}
	trigger_if = {
		limit = { NOT = { has_court_position = court_artificer_court_position } }
		court_position_does_not_already_have_a_job_trigger = yes # This positions is considered a job, and cannot be held at the same tims as another similar position
	}
}

can_be_employed_as_master_assassin_court_position = {
	is_imprisoned = no
	has_no_particular_noble_roots_trigger = yes
	custom_tooltip = {
		text = UNOP_IS_NOT_THE_SPOUSE_OF_CHARACTER_COURT_POSITION
		NOT = { is_spouse_of = scope:hiring_liege }
	}
	is_landed = no #You can't be a public figure and a master assassin
	faith = {
		has_doctrine = tenet_fp3_fedayeen
		NOR = {
			has_doctrine = tenet_pacifism
			has_doctrine = tenet_dharmic_pacifism
		}
	}
	trigger_if = {
		limit = {
			scope:hiring_liege.faith = {
				has_doctrine = doctrine_gender_male_dominated
			}
		}
		is_male = yes
	}
	trigger_if = {
		limit = {
			scope:hiring_liege.faith = {
				has_doctrine = doctrine_gender_female_dominated
			}
		}
		is_female = yes
	}
	trigger_if = {
		limit = { NOT = { has_court_position = master_assassin_court_position } }
		court_position_does_not_already_have_a_job_trigger = yes # This positions is considered a job, and cannot be held at the same tims as another similar position
	}
}

can_be_employed_as_cave_hermit_court_position = {
	is_imprisoned = no
	custom_tooltip = {
		text = UNOP_IS_NOT_THE_SPOUSE_OF_CHARACTER_COURT_POSITION
		NOT = { is_spouse_of = scope:hiring_liege }
	}
	has_trait = lifestyle_mystic
	has_trait_xp = {
		trait = lifestyle_mystic
		value >= 50
	}
	trigger_if = {
		limit = { NOT = { has_court_position = cave_hermit_court_position } }
		court_position_does_not_already_have_a_job_trigger = yes # This positions is considered a job, and cannot be held at the same tims as another similar position
	}
}

can_be_employed_as_chronicler_court_position = {
	is_imprisoned = no
	is_adult = yes
}

can_be_employed_as_court_scholar_court_position = {
	has_ep1_court_positions_dlc_trigger = yes
	has_fp3_dlc_trigger = yes
	culture = { has_cultural_parameter = can_appoint_court_scholar }
	OR = {
		is_imprisoned = no
		is_imprisoned_by = scope:hiring_liege
	}
	is_ai = yes
	trigger_if = {
		limit = { NOT = { has_court_position = court_scholar_court_position } }
		court_position_does_not_already_have_a_job_trigger = yes # This positions is considered a job, and cannot be held at the same tims as another similar position
	}
}

unop_can_contract_disease_trigger = {
	switch = {
		trigger = $DISEASE$
		trait:ergotism = 		{ can_contract_disease_trigger = { DISEASE = ergotism } }
		trait:dysentery = 		{ can_contract_disease_trigger = { DISEASE = dysentery } }
		trait:typhus = 			{ can_contract_disease_trigger = { DISEASE = typhus } }
		trait:smallpox = 		{ can_contract_disease_trigger = { DISEASE = smallpox } }
		trait:bubonic_plague = 	{ can_contract_disease_trigger = { DISEASE = bubonic_plague } }
		trait:ill = 			{ can_contract_disease_trigger = { DISEASE = ill } }
		trait:great_pox = 		{ can_contract_disease_trigger = { DISEASE = great_pox } }
		trait:gout_ridden = 	{ can_contract_disease_trigger = { DISEASE = gout_ridden } }
		trait:leper = 			{ can_contract_disease_trigger = { DISEASE = leper } }
		trait:consumption = 	{ can_contract_disease_trigger = { DISEASE = consumption } }
		trait:cancer = 			{ can_contract_disease_trigger = { DISEASE = cancer } }
		trait:pneumonic = 		{ can_contract_disease_trigger = { DISEASE = pneumonic } }
		trait:measles = 		{ can_contract_disease_trigger = { DISEASE = measles } }
		trait:lovers_pox = 		{ can_contract_disease_trigger = { DISEASE = lovers_pox } }
		fallback = {
			# Unop: Can't set a trace there sadly as you cannot log inside a trigger afaik
			always = yes
		}
	}
}