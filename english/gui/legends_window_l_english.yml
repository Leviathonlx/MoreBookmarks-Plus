l_english:
 LEGENDS_TITLE: "Legends"
 
 CREATE_LEGEND_TOOLTIP: "[LegendSeed.GetDescription( Character.Self )][AddLine( Character.GetCanCreateLegendDesc( LegendSeed.Self ) )][AddParagraph( GetLongCostString( LegendSeed.GetCreationCost( Character.Self ) ) )]"
 CREATE_TRIGGERED_LEGEND_TOOLTIP: "[TriggeredLegendSeed.GetDescription( Character.Self )][AddParagraph( GetLongCostString( TriggeredLegendSeed.GetSeed.GetCreationCost( Character.Self ) ) )][AddLine( Character.GetCanCreateTriggeredLegendDesc( TriggeredLegendSeed.Self ) )]"
 
 LEGEND_HEADER_TT: "#T [Legend.GetName]#![AddLine( Legend.GetDescription )]\n\n#i Click to select and open Chronicle\nRight-click to select and pan to Legend on map#!"
 SEED_LEGEND_HEADER_TT: "#T [LegendSeed.GetName( Character.Self )]#![AddLine( LegendSeed.GetDescription( Character.Self ) )]"
 TRIGGERED_LEGEND_SEED_HEADER_TT: "#T [TriggeredLegendSeed.GetName( Character.Self )]#![AddLine( TriggeredLegendSeed.GetDescription( Character.Self ) )]"

 PROMOTE_LEGEND_BUTTON_TT: "#T Start Legend#![AddLine( SelectLocalization( IsValidCommand( GetPlayer.StartPromotingLegend( Legend.Self ) ), 'PROMOTE_LEGEND_BUTTON_NOT_BLOCKED_TT', 'PROMOTE_LEGEND_BUTTON_BLOCKED_TT' ) )]"
 PROMOTE_LEGEND_BUTTON_NOT_BLOCKED_TT: "Start [Legend.GetOwner.GetNamePossessive] legend.[AddLine( '#D what else do we put here?#!' )]"
 PROMOTE_LEGEND_BUTTON_BLOCKED_TT: "Start [Legend.GetOwner.GetNamePossessive] legend.[AddLine( AddLine( '#X You cannot start this legend:#!' ) )][AddLine( GetCommandDesc( GetPlayer.StartPromotingLegend( Legend.Self ) ) )]"

 OPEN_CHRONICLE_BUTTON_TT: "#T Open Chronicle#!"
 PAN_TO_LEGEND_TT: "#T Pan to Legend on map#!"

 LEGEND_HEADER_SUBTITLE: "[Legend.GetType.GetName] about [Legend.GetProtagonist.GetName]"

 PROMOTED_LEGEND: "Promoting Legend"
 PROMOTED_OWNED_LEGEND: "Promoting Own Legend"
 PROMOTED_LEGEND_EMPTY: "You are not [promoting_legend|El] a [legend|E]"
 PROMOTED_LEGEND_EMPTY_INSTRUCTION: "Start forming a legend from the [legend_seeds|E] list below,\nor find an existing forming [legend|E] in that you want to promote.\n\nPromoting a [legend|E] will help it spread and will grant you benefits."
 RETURN_TO_PROMOTED_LEGEND_TT: "Go back to [promoted_legend|E]"

 FOCUSED_LEGEND: "Selected Legend"
 COMPLETED_LEGEND: "Completed Legend"
 LEGEND_LIBRARY_INSTRUCTION: "$game_concept_legend_library_desc$"


 LEGEND_SEEDS: "[legend_seeds|E] #weak ([Add_int32( GetDataModelSize( Character.GetLegendSeeds ), GetDataModelSize( LocalPlayerCachedData.GetTriggeredLegendSeeds ) )])#!"
 LEGEND_SEEDS_EMPTY: "You have no [legend_seeds|E]"
 LEGENDS_REALM_ACTIVE_LEGENDS_SECTION: "Forming Legends #weak ([GetDataModelSize( LegendsWindow.GetRealmActiveLegends )])#!"
 LEGENDS_REALM_ACTIVE_LEGENDS_EMPTY: "There are currently no [legends|E] being formed in your realm."
 LEGENDS_DISTANT_ACTIVE_LEGENDS_SECTION: "Forming Legends #weak ([GetDataModelSize( LegendsWindow.GetDistantActiveLegends )])#!"
 LEGENDS_DISTANT_ACTIVE_LEGENDS_EMPTY: "There are currently no [legends|E] being formed in distant lands"
 LEGEND_PROMOTERS: "[legend_promoters|E]: #L [GetDataModelSize( Legend.GetPromoters )|V]#!"
 LEGEND_PROMOTERS_LABEL: "[legend_promoters|E]"
 LEGEND_PROTAGONIST_LABEL: "[legend_protagonist|E]:"
 LEGEND_PROTAGONIST: "[Legend.GetProtagonist.GetName]"

 LEGEND_PROVINCE_AND_COUNTY_MODIFIERS_TOOLTIP: "#T $PROVINCE_AND_COUNTY_MODIFIERS$#!\n[JoinText( '\n\n', AddLocalizationIf( Legend.HasImpactModifiers( 'province' ), 'LEGEND_PROVINCE_MODIFIERS_SUBTEXT' ), AddLocalizationIf( Legend.HasImpactModifiers( 'county' ), 'LEGEND_COUNTY_MODIFIERS_SUBTEXT' ) )]"
 LEGEND_OWNER_MODIFIERS_TOOLTIP: "#T $OWNER_MODIFIERS$#!\n[Legend.GetImpactModifiers( 'owner' )]"
 LEGEND_PROMOTER_MODIFIERS_TOOLTIP: "#T $LEGEND_PROMOTER_MODIFIERS$#!\n[Legend.GetImpactModifiers( 'promoter' )]"
 
 LEGEND_SEED_OWNER_MODIFIERS_TOOLTIP: "#T $OWNER_MODIFIERS$#!\n[LegendSeed.GetImpactModifiers( 'owner' )]"
 LEGEND_SEED_PROMOTER_MODIFIERS_TOOLTIP: "#T $LEGEND_PROMOTER_MODIFIERS$#!\n[LegendSeed.GetImpactModifiers( 'promoter' )]"
 LEGEND_SEED_PROVINCE_MODIFIERS_SUBTEXT: "#S $PROVINCE_MODIFIERS$#!\n[LegendSeed.GetImpactModifiers( 'province' )]"
 LEGEND_SEED_COUNTY_MODIFIERS_SUBTEXT: "#S $COUNTY_MODIFIERS$#!\n[LegendSeed.GetImpactModifiers( 'county' )]"
 LEGEND_SEED_PROVINCE_AND_COUNTY_MODIFIERS_TOOLTIP: "#T $PROVINCE_AND_COUNTY_MODIFIERS$#!\n[JoinText( '\n\n', AddLocalizationIf( LegendSeed.HasImpactModifiers( 'province' ), 'LEGEND_SEED_PROVINCE_MODIFIERS_SUBTEXT' ), AddLocalizationIf( LegendSeed.HasImpactModifiers( 'county' ), 'LEGEND_SEED_COUNTY_MODIFIERS_SUBTEXT' ) )]"

 LEGENDS_CREATE_LEGEND: "Create Legend"

 LEGEND_UPGRADE_LABEL: "Upgrade:"
 LEGEND_UPGRADE_COST: "[GetCostString( Legend.GetUpgradeCostDescription( Character.Self ) )]"
 LEGEND_CREATION_LABEL: "Creation:"
 LEGEND_CREATION_COST: "[GetCostString( LegendSeed.GetCreationCost( Character.Self ) )]"
 LEGEND_MAINTENANCE_LABEL: "Promoting:"
 LEGEND_SEED_MAINTENANCE_COST: "[GetIntervalCostString( LegendSeed.GetMaintenanceCost( Character.Self ), 'monthly' )]"
 LEGEND_MAINTENANCE_COST: "[GetIntervalCostString( Legend.GetMaintenanceCost( Character.Self ), 'monthly' )]"

 HUD_LEGEND_SEEDS: "You have [Add_int32( GetDataModelSize( Character.GetLegendSeeds ), GetDataModelSize( LocalPlayerCachedData.GetTriggeredLegendSeeds ) )|V] Seeds available"

 COMPLETE_LEGEND_TITLE: "Complete [Legend.GetNameNoTooltip]"
 COMPLETE_LEGEND_TEXT: "$LEGEND_COMPLETE_LEGEND$"
 COMPLETE_LEGEND_ACCEPT: "Complete"

 START_PROMOTING_LEGEND_TITLE: "Promote [Legend.GetNameNoTooltip]"
 START_PROMOTING_LEGEND_TEXT: "Start [Concept( 'promoted_legend', 'Promoting' )|E] the spread of [Legend.GetName] owned by [Legend.GetOwner.GetShortUIName] within your [realm|E].\n\nMaintenance: [GetIntervalCostString( Legend.GetMaintenanceCost( GetPlayer ), 'monthly' )]"
 START_PROMOTING_LEGEND_ACCEPT: "Promote"

 legend_tab_realm: "Realm Legends"
 legend_tab_distant: "Distant Legends"
 legend_tab_library: "Legend Library"
 legend_tab_seeds: "Legend Seeds"

 REALM_COMPLETED_LEGENDS: "Completed Legends #weak ([GetDataModelSize( LegendsWindow.GetRealmCompletedLegends )])#!"
 REALM_COMPLETED_LEGENDS_TT: "Completed Legends"
 NO_REALM_ACTIVE_LEGENDS: "There are no forming [legends|e] in your [realm|e] at this time"
 NO_REALM_COMPLETED_LEGENDS: "You know of no completed [legends|e] in your [realm|e]"
 DISTANT_COMPLETED_LEGENDS: "Completed Legends #weak ([GetDataModelSize( LegendsWindow.GetDistantCompletedLegends )])#!"
 NO_DISTANT_ACTIVE_LEGENDS: "There are no [legends|e] forming outside of your [realm|e], yet"
 NO_DISTANT_COMPLETED_LEGENDS: "You know of no completed [legends|e] outside of your [realm|e]"

 LEGEND_SPREAD_UPGRADE_: "#weak (Upgrade [Concept( 'legend_quality', 'Quality' )|E] at [Legend.GetMaxNumProvinces|V])#!"
 LEGEND_SPREAD_UPGRADE: ""
 LEGEND_SPREAD: "Spread in [baronies|E]: [Legend.GetCurrentNumProvinces|V] [AddLocalizationIf( Not( Legend.HasQuality( 'mythical' ) ), 'LEGEND_SPREAD_UPGRADE' )]"

 SUMMARY_LEGEND_IS_COMPLETED: "#weak This legend is completed and no longer actively promoted.#!"
 LEGEND_DURATION_ACTIVE: "[Legend.GetCreationDate.GetYear] - ..."
 LEGEND_DURATION_COMPLETED: "[Legend.GetCreationDate.GetYear] - [Legend.GetCompletionDate.GetYear]"

 CREATE_LEGEND_TITLE: "Create [LegendSeed.GetNameWithProtagonist( Character.Self, LegendCreationWindow.GetProtagonist.Self )]"
 CREATE_LEGEND_DESC: "This [legend_seed|E] is for a [LegendSeed.GetQualityLevel] [Concept( 'legend_type', LegendSeed.GetType.GetName )|E].\n#I Select the [legend_protagonist|E] and create your [legend|E].#!\n#weak Based on your chosen Protagonist you will recieved different rewards upon completing your Legend.#!\n@alert_icon!#alert_trial You cannot complete the legend for [GetTimeDifferenceWithDays( GetDefine( 'NLegend', 'DAYS_UNTIL_CAN_COMPLETE' ) )|V]#!"
 CREATE_LEGEND_WARNING_DESC: "@warning_icon!#X You cannot complete or abandon the legend for [GetTimeDifferenceWithDays( GetDefine( 'NLegend', 'DAYS_UNTIL_CAN_COMPLETE' ) )|V]#!"


 LEGEND_REWARDS: "Rewards upon completion"
 RELATIONSHIP: "Relationship"
