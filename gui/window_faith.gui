######################################################
################### FAITH WINDOW #####################
######################################################

window = {
	
	size = { 30%  100%  } #Use 38% if you get complaints from lots of people uses smaller resolutions
	
	allow_outside = yes
	window_cardinals = {}
	window_sainthood = {}
	window_appoint_successor_theocracy = {}
	name = "faith_window"
	widgetid = "faith_window"					  
	datacontext = "[FaithWindow.GetFaith]"
	datacontext = "[GetVariableSystem]"
	movable = no
	layer = windows_layer

	using = Window_Size_Sidebar
	#using = Window_Background_Sidebar

	state = {
		name = _show
		position = { 0 0 }
		on_start = "[GetVariableSystem.Set( 'faith_view_tabs', 'beliefs' )]"
		on_start = "[GetVariableSystem.Set( 'hide_bottom_left_HUD', 'true' )]"

		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
	}

	state = {
		name = _hide
		position = { -60 0 }
		on_start = "[GetVariableSystem.Clear( 'hide_bottom_left_HUD' )]"
		on_start = "[GetVariableSystem.Clear( 'window_appoint_successor_theocracy' )]"

		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
	}

	###DUIT
	vbox={
		using = Window_Background_Sidebar
	}
	###DUIT/
	### INSIDE WINDOW
	vbox = {
		using = Window_Margins_Sidebar

		### Header
		header_with_picture = {
			name = "header"
			datacontext = "[GetIllustration( 'religion_interior' )]"
			size = { 0 130 }
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = fixed

			blockoverride "size" {
				size = { 100% 143 }
			}

			blockoverride "header_text"
			{
				text = "FAITH_VIEW_HEADING"
				using = tooltip_es

				state = {
					name = "faith_view_refresh"
					using = Animation_Refresh_FadeOut
				}

				state = {
					using = Animation_Refresh_FadeIn
				}
			}

			blockoverride "button_close"
			{
				onclick = "[FaithWindow.Close]"
				onclick = "[GetVariableSystem.Clear( 'window_appoint_successor_theocracy' )]"
				onclick = "[SetMapMode( 'realms' )]"
				onclick = "[GetScriptedGui( 'custom_map_mode_initialize' ).Execute(GuiScope.End)]"
			}

			blockoverride "button_back"
			{
				visible = "[HasViewHistory]"
				onclick = "[OpenFromViewHistory]"
				tooltip = "[GetViewHistoryTooltip]"
			}

			blockoverride "button_me"
			{
				onclick = "[DefaultOnCharacterClick(GetPlayer.GetID)]"
			}

			blockoverride "illustration_texture"
			{
				texture = "[Illustration.GetTexture( FaithWindow.GetFaith.MakeScope )]"
				spriteType = stretched
				fittype = centercrop
				alpha = 0.35
			}

			hbox = {
				datacontext = "[FaithWindow.GetFaith]"

				watch_window_button = {
					size = { 60 40 }
					onclick = "[AddWatchWindow( FaithWindow.GetFaith.MakeScope )]"
				}

				vbox = {
					margin_top = 30
					margin_left = 10

					icon = {
						name = "faith_icon"
						size = { 100 100 }
						texture = "[Faith.GetIcon]"
						using = tooltip_se
						tooltipwidget = {
							faith_tooltip = {}
						}

						state = {
							name = "faith_view_refresh"
							using = Animation_Refresh_FadeOut
						}

						state = {
							using = Animation_Refresh_FadeIn
						}
					}
				}

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					expand = {}

					hbox = {
						layoutpolicy_horizontal = expanding

						##### Changed from Vanilla vvvvvv
						vbox = {
							min_width = 85
							ignoreinvisible = yes
							#Minorities Map Mode
							button_round = {
								name = "culture_minority_map_mode"
								visible = "[And(CanChangeMapMode,Not(GetGlobalVariable('custom_map_mode').IsSet))]"

								size = { 50 50 }
								
								datacontext = "[GetScriptedGui('minority_faith_map_effect')]"

								onclick = "[SetMapMode('minority_faiths_map_mode')]"
								onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( FaithWindow.GetFaith.MakeScope ).End )]"
								down = "[And( GetScriptedGui('minority_faith_map_effect').IsShown(GuiScope.End), IsMapMode('minority_faiths_map_mode') )]"
								enabled = "[GetScriptedGui('minority_faith_map_effect').IsValid(GuiScope.End)]"

								texture = "gfx/interface/buttons/button_round_frame.dds"

								tooltip = "faith_minority_map_mode_tooltip"
								using = tooltip_ws
								
								icon = {
									parentanchor = hcenter|vcenter
									texture = "gfx/interface/icons/modifiers/sea_faith_minority_large.dds"
									size = { 30 30 }
								}
							}
							#Reset Minorities Map Mode
							button_round = {
								name = "culture_minority_map_revert_mode"
								visible = "[And(CanChangeMapMode,GetGlobalVariable('custom_map_mode').IsSet)]"

								size = { 50 50 }
								
								onclick = "[GetScriptedGui('reset_custom_map_mode_effect').Execute(GuiScope.End)]"
								onclick = "[SetMapMode('religions')]"

								texture = "gfx/interface/buttons/button_round_frame.dds"

								tooltip = "faith_minority_map_mode_revert_tooltip"
								using = tooltip_ws
								
								icon = {
									parentanchor = hcenter|vcenter
									texture = "gfx/interface/icons/modifiers/sea_faith_minority_large.dds"
									size = { 30 30 }
								}
								icon = {
									parentanchor = hcenter|vcenter
									texture = "gfx/interface/icons/modifiers/no_modifier.dds"
									size = { 30 30 }
								}
							}
						}

						spacer = {
							visible = "[ObjectsEqual( GetPlayer.GetFaith, Faith.Self )]"
							size = { 40 0 }
						}
						spacer = {
							visible = "[Not(ObjectsEqual( GetPlayer.GetFaith, Faith.Self ))]"
							size = { -10 0 }
						}
						##### Changed from Vanilla ^^^^^

						vbox = {
							layoutpolicy_vertical = expanding
							margin_bottom = 4
							margin_left = 25
							spacing = 1

							text_single = {
								name = "your_faith"
								visible = "[ObjectsEqual( GetPlayer.GetFaith, Faith.Self )]"
								text = "FAITH_VIEW_YOUR_FAITH"
								align = nobaseline|center
							}

							expand = {}

							text_single = {
								name = "our_view"
								visible = "[Not(ObjectsEqual( GetPlayer.GetFaith, Faith.Self ))]"
								layoutpolicy_horizontal = expanding
								text = "FAITH_VIEW_OUR_VIEW"
								align = nobaseline|center
							}

							text_single = {
								name = "their_view"
								visible = "[Not(ObjectsEqual( GetPlayer.GetFaith, Faith.Self ))]"
								layoutpolicy_horizontal = expanding
								text = "FAITH_VIEW_THEIR_VIEW"
								align = nobaseline|center
							}
						}

						expand = {}

						vbox = {
							margin = { 10 0 }
							spacing = 2

							fervor_container_vbox = {}

							button_sidepanel_right = {
								name = "religion_information"
								datacontext = "[Faith.GetReligion]"
								onclick = "[FaithWindow.ToggleReligionWindow]"
								tooltip = "TOGGLE_RELIGION_VIEW_TOOLTIP"

								using = tooltip_nw

								blockoverride "button_text"
								{
									text = "TOGGLE_RELIGION_VIEW"
								}

							}
							button_sidepanel_right = {
								visible = "[GetGlobalVariable('Trinity_is_loaded').IsSet]"
								name = "saints_information"
								raw_tooltip = "View Saints"
								onclick = "[GetVariableSystem.Toggle('window_sainthood')]"
								using = tooltip_nw

								blockoverride "button_text"
								{
									raw_text = "View Saints"
								}
							}
						}
					}
				}
			}

			text_single = {
				visible = "[And( Not( Faith.GetReligion.HasPaganRoots ), Not( Faith.IsUnreformed ) )]"
				text = "FAITH_VIEW_SUBHEADING"
				align = center
				parentanchor = top|hcenter
				position = {0 40}
				alpha = 0.9
			}

			text_label_center = {
				visible = "[Faith.IsUnreformed]"
				text = "FAITH_VIEW_UNREFORMED_SUBHEADING"
				align = center
				parentanchor = top|hcenter
				position = {0 40}
				alpha = 0.8
			}

			text_label_center = {
				visible = "[And( Faith.GetReligion.HasPaganRoots, Not( Faith.IsUnreformed ) )]"
				text = "FAITH_VIEW_REFORMED_SUBHEADING"
				align = center
				parentanchor = top|hcenter
				position = {0 40}
				alpha = 0.8
			}
		}

		### Tabs
		hbox = {
			layoutpolicy_horizontal = expanding
			name = "tabs"

			button_tab = {
				layoutpolicy_horizontal = expanding
				onclick = "[GetVariableSystem.Set( 'faith_view_tabs', 'beliefs' )]"
				down = "[GetVariableSystem.HasValue( 'faith_view_tabs', 'beliefs' )]"
				text = "FAITH_BELIEFS"
				default_format = "#low"

				using = tooltip_below
			}

			button_tab = {
				layoutpolicy_horizontal = expanding
				onclick = "[GetVariableSystem.Set( 'faith_view_tabs', 'holy_sites' )]"
				down = "[GetVariableSystem.HasValue( 'faith_view_tabs', 'holy_sites' )]"
				text = "FAITH_HOLY_SITES"
				default_format = "#low"

				using = tooltip_below
			}

			button_tab = {
				layoutpolicy_horizontal = expanding
				visible = "[And(Faith.HasDoctrineByKey( 'doctrine_clerical_succession_investiture_law_appointment' ), GetGlobalVariable('Trinity_is_loaded').IsSet)]"
				onclick = "[GetVariableSystem.Set( 'faith_view_tabs', 'investiture' )]"
				onclick = "[GetScriptedGui( 'line_investiture_map' ).Execute(GuiScope.End)]"
				onclick = "[SetMapMode( 'TCT_investiture' )]"
				onclick = "[GetScriptedGui('get_all_realm_theocracies').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				down = "[GetVariableSystem.HasValue( 'faith_view_tabs', 'investiture' )]"
				raw_text = "Investiture" # Should typically call a loc key but you can put the text right in if you are lazy
				default_format = "#low"

				using = tooltip_below

				flowcontainer = {
					visible = "[And( GetScriptedGui('line_investiture_map').IsShown(GuiScope.End), IsMapMode('TCT_investiture') ), IsDefaultGUIMode ) )]"
					parentanchor = bottom|right
					position = { 1325 760 }
					direction = vertical
					ignoreinvisible = yes
					min_width = 170
					margin_left = 2
					margin_top = 3
					margin_bottom = 5
		
					state = {
						name = _show
						using = Animation_FadeIn_Standard
					}
		
					state = {
						name = _hide
						using = Animation_FadeOut_Standard
					}
		
					background = {
						using = Background_Area_Dark
						margin = { 10 10 }
						margin_top = 5
						color = { 0.15 0.15 0.15 0.75 }
					}
		
					text_single = {
						parentanchor = hcenter
						text = "INVESTITURE_LEGEND"
						default_format = "#Bold #color_white"
						
					}
		
					flowcontainer = {
						direction = vertical
						spacing = 20
						margin_bottom = 10
						widget = {
							hbox = {
								icon = {
									texture = "gfx/interface/colors/white.dds"
									size = { 8 8 }
									color = { 100.100 100.100 100.100 1 }
								}
								spacing = 5
								text_single = {
									margin_top = -6
									align = center
									text = "CUSTOM_PAPAL_INVESTITURE"
									default_format = "#bold"
								}
								expand = {}
							}
						}
						widget = {
							hbox = {
								icon = {
									texture = "gfx/interface/colors/white.dds"
									size = { 8 8 }
									color = { 0.98431 0.28627 0.20392 1 }
								}
								spacing = 5
								text_single = {
									margin_top = -6
									align = center
									text = "CUSTOM_FREE_INVESTITURE"
									default_format = "#bold"
								}
								expand = {}
							}
						}
					}
				}
			}
		}

		investiture_vbox = {}

		vbox = {
			name = "tab_beliefs"
			visible = "[GetVariableSystem.HasValue( 'faith_view_tabs', 'beliefs' )]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			state = {
				name = _show
				using = Animation_FadeIn_Quick
			}

			state = {
				name = _hide
				alpha = 0
			}

			### Core Tenets
			vbox = {
				layoutpolicy_horizontal = expanding
				spacing = 8
				#margin_top = 15
				margin = { 8 16 }
				margin_bottom = 11

				text_label_center = {
					text = "FAITH_CORE_TENETS_HEADING"
				}

				hbox = {	 
					name = "doctrines_grid_core_tenets"
					datamodel = "[FaithWindow.GetGroupingHelper( 'core_tenets' ).GetGrouping]"
					spacing = 52
					state = {
						name = "faith_view_refresh"
						using = Animation_Refresh_FadeOut
					}

					state = {
						using = Animation_Refresh_FadeIn
					}

					item = {
						container_tenet_item = {
							datacontext = "[GuiFaithDoctrineItem.GetDoctrine]"
							datacontext = "[GuiFaithDoctrineItem.GetFaith]"
							tooltip = "FAITH_WINDOW_DOCTRINE_TOOLTIP"
						}
					}
				}
			}

			### Doctrines
			vbox = {
				name = "doctrines"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				#margin_top = 10

				scrollbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding


					blockoverride "scrollbox_content"
					{
						spacing = 16
						#margin_top = 20

						state = {
							name = "faith_view_refresh"
							using = Animation_Refresh_FadeOut
						}

						state = {
							using = Animation_Refresh_FadeIn
						}

						hbox = {
							name = "sins_and_virtues"
							layoutpolicy_vertical = expanding
							spacing = 15

							expand = {
								layoutstretchfactor_horizontal = 1
							}

							vbox = {
								name = "sins"
								spacing = 3
								layoutpolicy_vertical = expanding
								layoutpolicy_horizontal = expanding

								hbox = {
									spacing = 5

									expand = {}

									icon = {
										texture = "gfx/interface/icons/traits/sin_big.dds"
									}

									text_single = {
										text = "FAITH_WINDOW_SINS"
										align = right|nobaseline
									}
								}
								
								vbox = {
									dynamicgridbox = {

				 
							
										name = "virtues_grid"
										datamodel = "[FaithWindow.GetSins]"
										flipdirection = yes
										datamodel_wrap = 10

										item = {
											icon = {
												datacontext = "[GuiVirtueOrSinItem.GetTrait]"
												size = { 40 40 }
												alwaystransparent = yes
												texture = "[Trait.GetIcon( GetPlayer )]"

												tooltipwidget = {
													using = faith_window_trait_tooltip
												}

												block "tooltip_placement"
												{
													using = tooltip_ne
													tooltip_offset = { 0 20 }
			  
												}
											}
										}
									}
								}

								expand = {}
							}

							divider_light = {
								layoutpolicy_vertical = expanding
							}

							vbox = {
								name = "virtues"
								spacing = 3
								layoutpolicy_vertical = expanding
								layoutpolicy_horizontal = expanding

								hbox = {
									spacing = 5
									expand = {}

									icon = {
										texture = "gfx/interface/icons/traits/virtue_big.dds"
									}

									text_single = {
										text = "FAITH_WINDOW_VIRTUES"
										align = nobaseline
									}
								}

								vbox = {
									dynamicgridbox = {
				 
							
										name = "virtues_grid"
										datamodel = "[FaithWindow.GetVirtues]"
										flipdirection = yes
										datamodel_wrap = 10

										item = {
											icon = {
												datacontext = "[GuiVirtueOrSinItem.GetTrait]"
												size = { 40 40 }
												alwaystransparent = yes
												texture = "[Trait.GetIcon( GetPlayer )]"

												tooltipwidget = {
													using = faith_window_trait_tooltip
												}

												block "tooltip_placement"
												{
													using = tooltip_ne
													tooltip_offset = { 0 20 }
												}
											}
										}
									}
								}
								expand = {}
							}

							expand = {
								layoutstretchfactor_horizontal = 1
							}
						}
						spacer = {
                            size = {0 15}
                        }
						
						####SCROLLBAR####
						
						widget = {
							layoutpolicy_horizontal = expanding
							minimumsize = { 100 150 }
							vbox = {
								layoutpolicy_horizontal = expanding
								spacing = 8
								margin_bottom = -10
	
								text_label_center = {
									layoutpolicy_horizontal = expanding
									text = "FAITH_DOCTRINES_IMPORTANT"
									default_format = "#low"
								}
								scrollbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									blockoverride "scrollbox_content"
									{
										scrollarea = {
											scrollbar_horizontal = {
												using = Scrollbar_Horizontal
											}
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											scrollwidget = {
												hbox = {
													layoutpolicy_horizontal = expanding
													hbox = {
														name = "important_doctrines"
														datamodel = "[FaithWindow.GetGroupingHelper( 'main_group' ).GetGrouping]"
														#spacing = 15
					
														item = {
															vbox = {
																minimumsize = { 100 0 }
																margin_top = -5
																name = "doctrine_list_item"
																datacontext = "[GuiFaithDoctrineItem.GetDoctrine]"
																visible = "[FaithDoctrine.IsVisible]"
																tooltip = "FAITH_WINDOW_DOCTRINE_TOOLTIP"
																using = tooltip_se
																
																icon_doctrine = {
																	name = "doctrine_group_icon"
																	size = { 60 60 }
																	texture = "[FaithDoctrine.GetIcon]"
																}
					
																text_single = {
																	name = "doctrine_name"
																	align = center
																	#raw_text = "Bingo Bongo Tongo gyngo"
																	text = "[FaithDoctrine.GetNameNoTooltip( GuiFaithDoctrineItem.GetFaith )]"
																	default_format = "#high"
																	multiline = yes
																	max_width = 101   ##### minimum in order to look good in german
																}
															}
														}
													}
												}  
												
											}
										}
									}
								}
								
							}
						}
						
						vbox = {
							layoutpolicy_horizontal = expanding
							spacing = 12

							margin_bottom = -10
							#visible = "[Faith.HasDoctrineByKey( 'special_doctrine_is_christian_faith' ) )]" #This is only visible to Christian faiths

							text_label_center = {
								layoutpolicy_horizontal = expanding
								text = "FAITH_DOCTRINES_CHURCH"
								default_format = "#low"
							}

							fixedgridbox = {
								datamodel = "[FaithWindow.GetGroupingHelper( 'church_group' ).GetGrouping]"
								flipdirection = yes
								addcolumn = 275
								addrow = 67
								datamodel_wrap = 2

								item = {
									widget_doctrine_item = {
									
									size = { 245 55 }
									
									} 
								}
							}
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							spacing = 12
							margin_bottom = -10

							text_label_center = {
								layoutpolicy_horizontal = expanding
								text = "FAITH_DOCTRINES_MARRIAGE"
								default_format = "#low"
							}

							fixedgridbox = {
								datamodel = "[FaithWindow.GetGroupingHelper( 'marriage' ).GetGrouping]"
								flipdirection = yes
								addcolumn = 275
								addrow = 67
								datamodel_wrap = 2
								
								

								item = {
									widget_doctrine_item = {
									
									size = { 245 55 }
									
									} 
								}
							}
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							spacing = 12
							margin_bottom = -10

							text_label_center = {
								layoutpolicy_horizontal = expanding
								text = "FAITH_DOCTRINES_CRIMES"
								default_format = "#low"
							}

							fixedgridbox = {
								datamodel = "[FaithWindow.GetGroupingHelper( 'crimes' ).GetGrouping]"
								flipdirection = yes
								addcolumn = 275
								addrow = 67
								datamodel_wrap = 2

								item = {
									widget_doctrine_item = {
									
									size = { 245 55 }
									
									} 
								}
							}
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							spacing = 12
							margin_bottom = -10

							text_label_center = {
								layoutpolicy_horizontal = expanding
								text = "FAITH_DOCTRINES_CLERGY"
								default_format = "#low"
							}

							fixedgridbox = {
								datamodel = "[FaithWindow.GetGroupingHelper( 'clergy' ).GetGrouping]"
								flipdirection = yes
								addcolumn = 275
								addrow = 67
								datamodel_wrap = 2

								item = {
									widget_doctrine_item = {
									
									size = { 245 55 }
									
									} 
								}
							}
						}

						vbox = {
							visible = "[DataModelHasItems(FaithWindow.GetGroupingHelper( 'special' ).GetGrouping)]"
							layoutpolicy_horizontal = expanding
							spacing = 7

							text_label_center = {
								layoutpolicy_horizontal = expanding
								text = "FAITH_DOCTRINES_SPECIAL"
								default_format = "#low"
							}

							vbox = {
								datamodel = "[FaithWindow.GetGroupingHelper( 'special' ).GetGrouping]"
								layoutpolicy_horizontal = expanding
								margin_left = 50
								margin_right = 66

								spacing = 8

								item = {
									text_single = {
										layoutpolicy_horizontal = expanding


										margin = { 17 0 }
										margin_top = 12
										margin_bottom = 13

										datacontext = "[GuiFaithDoctrineItem.GetDoctrine]"
										datacontext = "[GuiFaithDoctrineItem.GetFaith]"

										text = "[FaithDoctrine.GetNameNoTooltip( GuiFaithDoctrineItem.GetFaith )]"
										tooltip = "FAITH_WINDOW_DOCTRINE_TOOLTIP_WITH_FAITH"

										align = nobaseline

										using = tooltip_es

										background = {
											using = Background_Area
										}


									}

								}
							}
						}
					}
				}
			}

			widget = {
				size = { 0 8 }
			}

			### Religious Head // Footer
			vbox = {
				name = "religious_head"
				layoutpolicy_horizontal = expanding

				state = {
					name = "faith_view_refresh"
					using = Animation_Refresh_FadeOut
				}

				state = {
					using = Animation_Refresh_FadeIn
				}

				hbox = {
					name = "current_hof"
					layoutpolicy_horizontal = expanding
					spacing = 5

					background = {
						using = Background_Area
					}

					portrait_head = {
						name = "character_portrait"
						datacontext = "[Faith.GetReligiousHead]"
						visible = "[Faith.GetReligiousHead.IsValid]"

						blockoverride "coa" {}
						blockoverride "opinion_box"{}
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						spacing = 3
						margin = { 0 10 }

						spacer = {
							visible = "[Not( Faith.GetReligiousHead.IsValid)]"
							size = { 10 3 }
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							spacing = 5

							text_label_left = {
								layoutpolicy_horizontal = expanding
								text = "RELIGIOUS_HEAD"
								default_format = "#low"
								fontsize_min = 14
							}

							hbox = {
								layoutpolicy_horizontal = expanding

								text_multi = {
									visible = "[Faith.GetReligiousHead.IsValid]"
									text = "RELIGIOUS_HEAD_WITH_NAME"
									default_format = "#high"
									layoutpolicy_horizontal = expanding
									fontsize_min = 10
								}

								text_multi = {
									visible = "[Not( Faith.GetReligiousHead.IsValid)]"
									text = "RELIGIOUS_HEAD_EMPTY_DESC"
									default_format = "#weak"
									layoutpolicy_horizontal = expanding
									align = left
									fontsize_min = 10
								}

								expand = {}
							}

							expand = {}
							vbox = { #TCT
								layoutpolicy_horizontal = expanding
								#layoutpolicy_vertical = expanding
								
								margin_bottom = 5
								
								visible = "[And(Faith.HasDoctrineByKey('doctrine_independent_papacy_head'), GetGlobalVariable('Trinity_is_loaded').IsSet)]"
								text_single = {
									visible = "[Faith.GetReligiousHead.IsValid]"
									text = "TCT_antipopes_title"
									default_format = "#medium"
									layoutpolicy_horizontal = expanding
									fontsize_min = 10
								}
								
								datamodel = "[Faith.MakeScope.GetList('TCT_antipopes')]"
								item = {
									text_single = {
										visible = "[Faith.GetReligiousHead.IsValid]"
										text = "TCT_antipopes_name"
										default_format = "#high"
										layoutpolicy_horizontal = expanding
										fontsize_min = 14
										max_width = 245
									}
								}
								text_single = {
									visible = "[GetScriptedGui( 'TCT_no_antipopes' ).IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'faith', Faith.MakeScope ).End )]"
									text = "TCT_no_antipopes"
									default_format = "#weak"
									layoutpolicy_horizontal = expanding
									fontsize_min = 14
									max_width = 245
								}
							}
						}
					}
					
					vbox = {
						layoutpolicy_vertical = expanding
						margin = { 0 5 }

						divider_light = {
							layoutpolicy_vertical = expanding
						}
					}

					vbox = {
						layoutpolicy_vertical = expanding
						margin = { 5 5 }
						spacing = 5

						widget_doctrine_item = {
							visible = "[Faith.HasDoctrineByKey( 'doctrine_no_head' )]"

							blockoverride "background" {}

							blockoverride "doctrine_icon"
							{
								texture = "[GetDoctrine( 'doctrine_no_head' ).GetIcon]"
							}

							blockoverride "wdi_context"
							{
								datacontext = "[GetDoctrine('doctrine_no_head')]"
								datacontext = "[Faith]"
							}
						}

						UniUI_Trinity_window_faith_widget_doctrine_item = {}

						widget_doctrine_item = {
							visible = "[And(Not(GetGlobalVariable('Trinity_is_loaded').IsSet), Faith.HasDoctrineByKey( 'doctrine_spiritual_head' ))]"

							blockoverride "background" {}

							blockoverride "doctrine_icon"
							{
								texture = "[GetDoctrine( 'doctrine_spiritual_head' ).GetIcon]"
							}

							blockoverride "wdi_context"
							{
								datacontext = "[GetDoctrine('doctrine_spiritual_head')]"
								datacontext = "[Faith]"
							}
						}

						widget_doctrine_item = {
							visible = "[Faith.HasDoctrineByKey( 'doctrine_temporal_head' )]"

							blockoverride "background" {}

							blockoverride "doctrine_icon"
							{
								texture = "[GetDoctrine( 'doctrine_temporal_head' ).GetIcon]"
							}

							blockoverride "wdi_context"
							{
								datacontext = "[GetDoctrine('doctrine_temporal_head')]"
								datacontext = "[Faith]"
							}
						}

						expand = {}

						hbox = {
							name = "hof_title"
							layoutpolicy_horizontal = expanding
							datacontext = "[Faith.GetReligiousHeadTitle]"
							visible = "[Title.IsValid]"
							margin_left = -5
							spacing = 5

							coa_title_tiny_crown = {
								name = "head_title"
							}

							hbox = {
								layoutpolicy_horizontal = expanding

								text_multi = {
									text = "[Title.GetNameNoTooltip|U]"
									layoutpolicy_horizontal = expanding
									autoresize = yes
									max_width = 160
								}

								expand = {}
							}
						}

						expand = {}
					}
				}
			}

			hbox = {
				spacing = 10
				margin_bottom = 8
				margin_top = 8
				layoutpolicy_horizontal = expanding

				expand = {}

				button_standard = {
					name = "convert_faith"
					minimumsize = { 240 0 }
					visible = "[NotEqualTo_uint32( Faith.GetID, GetPlayer.GetFaith.GetID )]"
					text = "FAITH_CONVERSION_CONVERT"
					onclick = "[ToggleGameViewData( 'faith_conversion', Faith.GetID )]"

					using = tooltip_nw
				}

				button_standard = {
					name = "create_faith"
					minimumsize = { 240 0 }
					visible = "[And( ObjectsEqual(Faith.Self, GetPlayer.GetFaith ), GetVariableSystem.HasValue( 'faith_view_tabs', 'beliefs' ))]"
					text = "CREATE_REFORM_FAITH_TEXT"
					onclick = "[OpenGameViewData( 'faith_creation', Faith.GetID )]"
					tooltip = "CREATE_REFORM_FAITH_TOOLTIP"

					using = tooltip_nw
				}

				button_standard = {
					name = "create_head_of_faith"
					minimumsize = { 240 0 }
					visible = "[And( And( Not(Faith.HasDoctrineByKey( 'doctrine_no_head' )), Not( Faith.GetReligiousHeadTitle.IsValid ) ), ObjectsEqual( GetPlayer.GetFaith, Faith.Self ) )]"
					datacontext = "[GetScriptedGui( 'create_head_of_faith' )]"
					enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'faith', Faith.MakeScope ).End ) ]"
					onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'faith', Faith.MakeScope ).End ) ]"
					tooltip = "[ScriptedGui.BuildTooltip( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'faith', Faith.MakeScope ).End ) ]"
					text = "CREATE_TEMPORAL_HEAD_OF_FAITH_TITLE"
				}

				button_standard = {
					name = "recreate_head_of_faith"
					minimumsize = { 240 0 }
					visible = "[And( And( Not(Faith.HasDoctrineByKey( 'doctrine_no_head' )), And(Faith.GetReligiousHeadTitle.IsValid, Not( Faith.GetReligiousHeadTitle.HasHolder ))), ObjectsEqual( GetPlayer.GetFaith, Faith.Self ) )]"
					datacontext = "[GetScriptedGui( 'recreate_head_of_faith' )]"
					enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'faith', Faith.MakeScope ).End ) ]"
					onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'faith', Faith.MakeScope ).End ) ]"
					tooltip = "[ScriptedGui.BuildTooltip( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'faith', Faith.MakeScope ).End ) ]"
					text = "RECREATE_TEMPORAL_HEAD_OF_FAITH_TITLE"
				}
 
				button_standard = {
					name = "college_of_cardinals"
					minimumsize = { 240 0 }
					visible = "[And(GetGlobalVariable('Trinity_is_loaded').IsSet, EqualTo_string(FaithWindow.GetFaith.GetNameNoTooltip,Localize('catholic')))]"
					text = "VIEW_CARDINAL_WINDOW_TITLE"
					tooltip = "VIEW_CARDINAL_WINDOW_TITLE_TOOLTIP"
					onclick = "[GetVariableSystem.Toggle('window_cardinals')]"
        			onclick = "[GetScriptedGui('refresh_cardinal_characters').Execute(GuiScope.SetRoot(Religion.MakeScope).End)]"
					onclick = "[GetScriptedGui('cardinal_music').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

					using = tooltip_nw

					# text_single = {
					# 	position= {60 3}
					# 	name = "header_text_custom"
					# 	default_format = "#clickable"
			
					# 	text = "collegeofcardinals"
					# 	maximumsize = { 400 -1 }
			
					# 	#using = Font_Type_Flavor
					# 	using = tooltip_nw
					# }
				}

				expand = {}
			}
		}

		## HOLY SITES
		scrollbox = {
			name = "tab_holy_sites"
			visible = "[GetVariableSystem.HasValue( 'faith_view_tabs', 'holy_sites' )]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			datacontext = "[GetIllustration( 'religion_holding' )]"

			blockoverride "scrollbox_background" {}
			blockoverride "scrollbox_background_fade" {}

			state = {
				name = _show
				using = Animation_FadeIn_Quick
			}

			state = {
				name = _hide
				alpha = 0
			}

			background = {
				alpha = 0.5
				fittype = end
				texture = "[Illustration.GetTexture( FaithWindow.GetFaith.MakeScope )]"

				modify_texture = {
					mirror = vertical
					blend_mode = alphamultiply
					texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
				}
			}

			blockoverride "scrollbox_content"
			{
				vbox = {
					name = "holy_sites"
					datamodel = "[FaithWindow.GetHolySites]"
					layoutpolicy_horizontal = expanding

					text_multi = {
						datacontext = "[FaithWindow.GetFaith]"
						layoutpolicy_horizontal = expanding
						size = { 0 45 }
						text = FAITH_HOLY_SITE_EXPLANATION
						default_format = "#weak"
						margin = { 0 5 }
						margin_bottom = 15
						align = center
						max_width = 560
						autoresize = yes

						state = {
							name = "faith_view_refresh"
							using = Animation_Refresh_FadeOut
						}

						state = {
							using = Animation_Refresh_FadeIn
						}
					}

					item = {
						vbox = {
							layoutpolicy_horizontal = expanding
							spacing = 3

							divider_light = {
								layoutpolicy_horizontal = expanding
							}

							hbox = {
								name = "faith_list_item"
								datacontext = "[GuiHolySiteItem.GetHolySite]"
								datacontext = "[HolySite.GetBarony]"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								margin_right = 15

								background = {
									using = Background_Area
									alpha = 0.2
								}

								vbox = {
									layoutpolicy_vertical = expanding
									min_width = 175
									spacing = 3

									state = {
										name = "faith_view_refresh"
										using = Animation_Refresh_FadeOut
									}

									state = {
										using = Animation_Refresh_FadeIn
									}

									hbox = {
										layoutpolicy_horizontal = expanding
										spacing = 5

										coa_title_tiny = {}

										text_single = {
											name = "name_notheld"
											visible = "[Not( GuiHolySiteItem.IsHeldByFaith )]"
											layoutpolicy_horizontal = expanding
											text = "[HolySite.GetName]"
											align = nobaseline
											default_format = "#low"
											using = Font_Size_Big
											autoresize = no
										}

										text_single = {
											name = "name_held"
											visible = "[GuiHolySiteItem.IsHeldByFaith]"
											layoutpolicy_horizontal = expanding
											text = "[HolySite.GetName]"
											align = nobaseline
											default_format = "#high"
											using = Font_Size_Big
											autoresize = no

										}

										expand = {}
									}

									hbox = {
										datacontext = "[Title.GetHolder]"
										tooltip = "FAITH_HOLY_SITE_HOLDER_TOOLTIP"

										background = {
											visible = "[Not( GuiHolySiteItem.IsHeldByFaith )]"
											using = Status_Bad
											margin_top = 3
											margin_bottom = -1
											alpha = 0.8
										}

										background = {
											visible = "[GuiHolySiteItem.IsHeldByFaith]"
											using = Background_Area
											margin_top = 3
											margin_bottom = -1
											alpha = 0.8
										}

										highlight_icon = {
											name = "faith_button"
											datacontext = "[Title.GetDeJureLiege.GetHolder.GetFaith]"
											size = { 45 45 }
											texture = "[Faith.GetIcon]"
										}

										coa_realm_small = {
											visible = "[Title.HasHolder]"
											datacontext = "[Title.GetHolder.GetTopLiege]"
										}
									}

									expand = {}
								}

								vbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									margin_top = 15

									hbox = {
										layoutpolicy_horizontal = expanding
										margin_left = 20

										vbox = {
											layoutpolicy_vertical = expanding

											state = {
												name = "faith_view_refresh"
												using = Animation_Refresh_FadeOut
											}

											state = {
												using = Animation_Refresh_FadeIn
											}

											text_multi = {
												name = "effects_notheld"
												visible = "[Not( GuiHolySiteItem.IsHeldByFaith )]"
												layoutpolicy_horizontal = expanding
												text = "[HolySite.GetEffectDesc( GuiHolySiteItem.GetFaith )]"
												default_format = "#low"
												format_override = { P low }
												format_override = { L low }
												format_override = { E low }
												format_override = { S low }
												autoresize = yes
												max_width = 315
											}

											text_multi = {
												name = "effects_held"
												visible = "[GuiHolySiteItem.IsHeldByFaith]"

												layoutpolicy_horizontal = expanding
												text = "[HolySite.GetEffectDesc( GuiHolySiteItem.GetFaith )]"
												autoresize = yes
												max_width = 315
											}
										}

										expand = {
											layoutpolicy_horizontal = expanding
										}
									}

									expand = {}
								}

								button_go_to_my_location = {
									onclick = "[DefaultOnCoatOfArmsRightClick(Title.GetID)]"
									tooltip = "GOTO_PROVINCE"
								}

							}
						}
					}
				}
			}
		}

		#############################################
		#############################################
		################# PENTARCHY #################
		#############################################
		#############################################
		
		vbox = {
			name = "tab_pentarchy"
			#visible = "[GetGlobalVariable('Trinity_is_loaded').IsSet]"
			visible = "[And(GetVariableSystem.HasValue( 'faith_view_tabs', 'pentarchy' ), GetGlobalVariable('Trinity_is_loaded').IsSet)]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			spacing = 15
			margin_top = 15
			
			state = {
				name = _show
				using = Animation_FadeIn_Quick
			}

			state = {
				name = _hide
				alpha = 0
			}
			text_label_center = {
				parentanchor = left
				text = "TCT_pentarchy_title"
				#size = { 150 100 }
			}
			hbox = {
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					datamodel = "[GetPlayer.MakeScope.GetList('TCT_ecumenical_patriarch_list')]"
					margin_right = 15
					item = {
						flowcontainer = {
							datacontext = "[Scope.GetCharacter]"
							vbox = {
								text_single = {
									parentanchor = top
									text = "TCT_ecumenical_patriarch_title"
									default_format = "#high"
									#layoutpolicy_horizontal = expanding
									margin_bottom = 30
									max_width = 200
								}

								portrait_shoulders = {
									background = {
										using = Background_Area_Dark
										margin_top = 25
										margin_bottom = 10
										margin_left = 20
										margin_right = 20
									} 
									background = {
										using = Background_Frame
										margin_top = 20
										margin_bottom = 5
										margin_left = 15
										margin_right = 15
									}
									background = {
										using = Background_Area_Dark
										margin_top = 19
										margin_bottom = 4
										margin_left = 14
										margin_right = 14
									} 
								}

								background = {
									using = Background_Area
								}
								
								background = {
									texture = "gfx/interface/component_masks/patterns/mask_pattern_04.dds"
									spriteType = Corneredtiled
									margin_top = -20
									margin_bottom = -10
									margin_left = -10
									margin_right = -10
									using = Color_Red
									alpha = 0.25

									modify_texture = {
										texture = "gfx/interface/component_masks/mask_rough_edges.dds"
										spriteType = Corneredtiled
										spriteborder = { 20 20 }
										texture_density = 5
										blend_mode = alphamultiply
									}
								}
								text_label_center = {
									text = "TCT_ecumenical_patriarch_name"
									#layoutpolicy_horizontal = expanding
									max_width = 200
								}
							}
						}
					}
				}
				spacer = { 
					size = { 75 75 }
					margin_top = 2
				}
				
				dynamicgridbox = { # Pentarchs
					name = "pentarchs"
					visible = "[GetGlobalVariable('Trinity_is_loaded').IsSet]"
					datamodel = "[GetPlayer.MakeScope.GetList('TCT_pentarchs_list')]"
					#layoutpolicy_horizontal = expanding
					#layoutpolicy_vertical = expanding
					datamodel_wrap = 2
					flipdirection = yes
					item = {
						flowcontainer = {
							
							margin_top = 2
							margin_bottom = 2
							margin_left = 6
							margin_right = 2
			
							vbox = {
								
								#layoutpolicy_horizontal = expanding
								#layoutpolicy_vertical = expanding
								datacontext = "[Scope.GetCharacter]"
								spacer = { 
									size = { 5 50 }
								}
								# background = {
								# 	using = Background_Area
								# 	spacer = { 
								# 		size = { 0 50 }
								# 	}
								# }
								text_label_center = {
									margin_top = 5
									parentanchor = left
									text = "[Scope.GetCharacter.Custom('TCT_get_patriarchate_of_pentarch')]"
									layoutpolicy_horizontal = expanding
									max_width = 90
									#size = { 150 100 }
								}
								#spacer = { 
								#	size = { 0 5 }
								#}
								portrait_head = {
									#size = { 150 200 }
									parentanchor = left
									#datacontext = "[Character]"
								
									#blockoverride "coa_button" {
									#	datacontext = "[Scope.GetCharacter.GetTopLiege]"
									#	tooltip = "[Character.GetDefaultRealmFlagTooltipPrimaryTitleClickInfo]"
									#	onclick = "[DefaultOnCoatOfArmsClick(Character.GetPrimaryTitle.GetID)]"
									#}
								}
								text_single = {
									parentanchor = left
									text = "[Scope.GetCharacter.GetFirstNameNoTooltip]" 
									max_width = 100
									#size = { 150 100 }
								}
							}
						}
					}
				}
				spacer = { 
					size = { 20 0 }
				}
			}
			spacer = { 
				size = { 20 25 }
			}
			vbox = {
				name = "autocephalies"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				margin_top = 10

				text_label_center = {
					layoutpolicy_horizontal = expanding
					text = "TCT_patriarchs_title"
					default_format = "#medium"
				
				}
				spacer = { 
					size = { 0 10 }
				}
				scrollbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					blockoverride "scrollbox_content"
					{
						
						spacing = 10
						margin_top = 20

						state = {
							name = "faith_view_refresh"
							using = Animation_Refresh_FadeOut
						}

						state = {
							using = Animation_Refresh_FadeIn
						}
						
						vbox = {
							layoutpolicy_horizontal = expanding
							datamodel = "[GetPlayer.MakeScope.GetList('TCT_patriarchs_list')]"
							item = {
								hbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									datacontext = "[Scope.GetCharacter]"
									
									background = {
										using = Background_Area
									}
									portrait_head = {
										parentanchor = left
									}
									flowcontainer = {
										direction = vertical
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding
										margin_top = 10
										margin_bottom = 10
										margin_left = 15
										spacing = 13
										text_label_center = {
											text = "[Character.GetPrimaryTitle.GetNameNoTooltip]"
											using = Font_Size_Medium
											default_format = "#high"
											layoutpolicy_horizontal = expanding
											#align = nobaseline
											#margin_bottom = 3
											#margin_left = 10
										}
										text_single = {
											parentanchor = left
											layoutpolicy_horizontal = expanding
											text = "TCT_patriarch_name"
											#size = { 150 100 }
										}
										text_single = {
											parentanchor = left
											layoutpolicy_horizontal = expanding
											text = "TCT_patriarchate_territory"
											#size = { 150 100 }
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

### RELIGION VIEW
window = {
	name = "religion_window"
	size = { 590 80% }
	position = { 850 75 }
	datacontext = "[ReligionWindow.GetReligion]"
	layer = windows_layer

	using = Window_Movable
	using = Window_Background_Subwindow

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
	}

	attachto = {
		widgetid = "faith_window"
		inherit_visibility = no
	}

	vbox = {
		margin = { 4 4 }

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "RELIGION_WINDOW_TITLE"
			}

			blockoverride "button_close"
			{
				onclick = "[ReligionWindow.Close]"
			}

			blockoverride "button_back"
			{
				visible = no
			}
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			margin = { 15 0 }
			margin_bottom = 5
			spacing = 5

			hbox = {
				spacing = 5

				text_single = {
					text = "SORT_BY"
					align = nobaseline
				}

				dropdown_sort_characterlist = {
					datamodel = "[ReligionWindow.GetOrderByOptions]"
					onselectionchanged = "[ReligionWindow.OnOrderBySelectionChanged]"
					selectedindex = "[ReligionWindow.GetOrderBySelectedIndex]"

					blockoverride "text_button_drop" {
						text = "[OrderFaithOption.GetName]"
					}
				}
			}

			expand = {}

			### Only Selected religion faiths
			hbox = {
				layoutpolicy_horizontal = expanding
				max_width = 550
				spacing = 5

				expand = {}

				button_checkbox_label = {
					onclick = "[ReligionWindow.OnShowOnlyReligionFaiths]"

					blockoverride "text"
					{
						text = "RELIGION_SHOW_ONLY"
						max_width = 180
					}
					blockoverride "checkbox"
					{
						checked = "[ReligionWindow.ShowOnlyReligionFaiths]"
					}
				}

				tooltip = "[ReligionWindow.GetShowOnlyReligionFaithsTooltip]"
				using = tooltip_ne
			}
		}

		scrollbox = {
			name = "faiths_scroll_area"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "scrollbox_content"
			{
				vbox = {
					datamodel = "[ReligionWindow.GetFaiths]"
					layoutpolicy_horizontal = expanding

					item = {
						button_standard_hover = {
							name = "show_faith_info"
							layoutpolicy_horizontal = expanding
							size = { 0 80 }
							tooltipwidget = { faith_tooltip_click = {} }
							visible = "[Not( Faith.HasDoctrineByKey( 'unavailable_doctrine' ) )]"												
							onclick = "[PdxGuiTriggerAllAnimations('faith_view_refresh')]"

							using = tooltip_es

							state = {
								name = _mouse_click
								on_finish = "[OpenGameViewData( 'faith', Faith.GetID )]"
							}

							background = {
								visible = "[Faith.IsSelected]"
								using = Background_Area
							}

							divider_light = {
								alpha = "[Select_float(GreaterThan_int32(Faith.GetNumberOfCountiesOfFaith,'(int32)0'), '(float)1.0','(float)0.5')]"
								size = { 100% 3 }
								parentanchor = bottom
								position = { 0 1 }
							}

							hbox = {
								margin = { 10 5 }
								alpha = "[Select_float(GreaterThan_int32(Faith.GetNumberOfCountiesOfFaith,'(int32)0'), '(float)1.0','(float)0.5')]"

								icon = {
									name = "faith_icon"
									texture = "[Faith.GetIcon]"
									size = { 60 60 }
								}

								vbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									margin_left = 10

									hbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding

										text_single = {
											name = "faith_name"
											align = left|nobaseline
											text = "[Faith.GetNameNoTooltip]"
											using = Font_Size_Medium
											default_format = "#high"
											max_width = 240
										}

										expand = {}

										text_single = {
											min_width = 160
											name = "religion_faith_name"
											align = right|nobaseline
											text = "FAITH_RELIGION"
											margin_right = 5
										}
									}

									hbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding

										icon = {
											texture = "gfx/interface/icons/icon_fervor.dds"
											size = { 22 22 }
										}

										text_single = {
											name = "fervor"
											text = "FAITH_WINDOW_FERVOR"
											using = Font_Size_Small
											align = left|nobaseline
										}

										expand = {}
									}

									text_single = {
										layoutpolicy_horizontal = expanding
										name = "counties"
										align = left|nobaseline
										text = "FAITH_WINDOW_COUNTIES"
										default_format = "#low"
										autoresize = no
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

######################################################
################ TYPES AND TEMPLATES #################
######################################################

types FaithCreationWindow
{
	type name_entry_big = editbox_standard_with_label {
		layoutpolicy_horizontal = expanding

		blockoverride "editbox_label"
		{
			block "label"
			{
				text = "DEFAULT_TEXT"
			}
		}
		size = { 380 30 }
	}

}

types FaithShared
{
	type container_tenet_item = container {

		using = tooltip_se

		highlight_icon = {
			name = "doctrine_group_bg"
			texture = "[Faith.GetDoctrineBackgroundIcon]"
			size = { 130 200 }
		}

		highlight_icon = {
			name = "doctrine_group_icon"
			texture = "[FaithDoctrine.GetIcon]"
			size = { 130 200 }
			alpha = 0.85
			position = {0 0}
		}

		text_label_center = {
			name = "doctrine_name"
			parentanchor = bottom|hcenter
			widgetanchor = center
			position = { 0 -24 }
			maximumsize = { 130 44 }
			fontsize_min = 12
			multiline = yes
			align = center
			elide = right
			text = "[FaithDoctrine.GetNameNoTooltip( Faith.Self )]"
			default_format = "#high"

			using = Font_Size_Medium
		}
	}

	type fervor_container_vbox = vbox {
		name = "fervor_container"
		tooltip = "FERVOR_TT"
		spacing = -6

		# Fervor
		hbox = {

			icon = {
				texture = "gfx/interface/icons/icon_fervor.dds"
				size = { 22 22 }
			}

			text_single = {
				text = "FAITH_WINDOW_FERVOR"
				default_format = "#high"
				align = nobaseline
			}
		}
		hbox = {
			layoutpolicy_horizontal = expanding
			margin_right = 1
			expand = {}

			text_single = {
				name = "fervor_trend"
				text = "[Faith.GetYearlyFervorChange|=+2]"
				max_width = 110
				default_format = "#low"
				fontsize = 13
				size = { 0 12 }
			}
		}
	}
}

types FaithWindow
{
	type widget_doctrine_item = margin_widget {
		size = { 210 53 }
		block "wdi_context"
		{
			datacontext = "[GuiFaithDoctrineItem.GetDoctrine]"
			datacontext = "[GuiFaithDoctrineItem.GetFaith]"
		}

		block "background" {
			background = {
				using = Background_Area
				margin = { 5 5 }
			}
		}

		hbox = {
			parentanchor = center
			name = "faith_list_item"
			block "tooltip" { #### current solution as to not display 2 different tooltips for special doctrines
				tooltip = "FAITH_WINDOW_DOCTRINE_TOOLTIP_WITH_FAITH"
			}
			spacing = 8

			using = tooltip_ne

			block "doctrine_icon"
			{
				icon_doctrine = {
					name = "doctrine_group_icon"
					size = { 50 50 }

					texture = "[FaithDoctrine.GetGroup.GetIcon]"
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding

				text_single = {
					name = "doctrine_group_name"
					layoutpolicy_horizontal = expanding
					align = left
					autoresize = no
					fontsize_min = 12
					# default_format = "#low"
					block "text_title"
					{
						text = "[FaithDoctrine.GetGroup.GetName( Faith.Self )]"
					}
				}

				text_single = {
					name = "faith_name"
					layoutpolicy_horizontal = expanding
					elide = right
					autoresize = no
					fontsize_min = 12
					align = left
					default_format = "#high"
					block "text_desc"
					{
						text = "[FaithDoctrine.GetNameNoTooltip( Faith.Self )]"
					}
				}
			}
		}
	}
	##### Changed from Vanilla vvvvv
	#For doctrines where each icon is unique
	type widget_doctrine_item_unique = widget {
		size = { 210 53 }
		block "wdi_context"
		{
			datacontext = "[GuiFaithDoctrineItem.GetDoctrine]"
			datacontext = "[GuiFaithDoctrineItem.GetFaith]"
		}
	
		block "background" {
			background = {
				using = Background_Area
				margin = { 5 5 }
			}
		}
	
		hbox = {
			name = "faith_list_item"
			block "tooltip" { #### current solution as to not display 2 different tooltips for special doctrines
				tooltip = "FAITH_WINDOW_DOCTRINE_TOOLTIP_WITH_FAITH"
			}
			spacing = 8
	
			using = tooltip_ne
	
			block "doctrine_icon"
			{
				icon_doctrine = {
					name = "doctrine_group_icon"
					size = { 50 50 }
	
					texture = "[FaithDoctrine.GetIcon]"
				}
			}
	
			vbox = {
				layoutpolicy_horizontal = expanding
	
				text_single = {
					name = "doctrine_group_name"
					layoutpolicy_horizontal = expanding
					align = left
					autoresize = no
					fontsize_min = 12
					# default_format = "#low"
					block "text_title"
					{ text = "[FaithDoctrine.GetGroup.GetName( Faith.Self )]" }
				}
	
				text_single = {
					name = "faith_name"
					layoutpolicy_horizontal = expanding
					elide = right
					autoresize = no
					fontsize_min = 12
					align = left
					default_format = "#high"
					block "text_desc"
					{ text = "[FaithDoctrine.GetNameNoTooltip( Faith.Self )]" }
				}
			}
		}
	}
	#### Changed from Vanilla ^^^^^
}
